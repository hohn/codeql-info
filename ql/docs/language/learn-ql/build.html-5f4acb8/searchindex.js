Search.setIndex({"docnames": ["codeql-cli/about-codeql-packs", "codeql-cli/about-ql-packs", "codeql-cli/about-the-codeql-cli", "codeql-cli/analyzing-databases-with-the-codeql-cli", "codeql-cli/codeql-cli-reference", "codeql-cli/creating-and-working-with-codeql-packs", "codeql-cli/creating-codeql-databases", "codeql-cli/creating-codeql-query-suites", "codeql-cli/exit-codes", "codeql-cli/extractor-options", "codeql-cli/getting-started-with-the-codeql-cli", "codeql-cli/index", "codeql-cli/publishing-and-using-codeql-packs", "codeql-cli/query-reference-files", "codeql-cli/sarif-output", "codeql-cli/specifying-command-options-in-a-codeql-configuration-file", "codeql-cli/testing-custom-queries", "codeql-cli/testing-query-help-files", "codeql-cli/upgrading-codeql-databases", "codeql-cli/using-custom-queries-with-the-codeql-cli", "codeql-cli/using-the-codeql-cli", "codeql-for-visual-studio-code/about-codeql-for-visual-studio-code", "codeql-for-visual-studio-code/about-telemetry-in-codeql-for-visual-studio-code", "codeql-for-visual-studio-code/analyzing-your-projects", "codeql-for-visual-studio-code/customizing-settings", "codeql-for-visual-studio-code/exploring-data-flow-with-path-queries", "codeql-for-visual-studio-code/exploring-the-structure-of-your-source-code", "codeql-for-visual-studio-code/index", "codeql-for-visual-studio-code/setting-up-codeql-in-visual-studio-code", "codeql-for-visual-studio-code/testing-codeql-queries-in-visual-studio-code", "codeql-for-visual-studio-code/troubleshooting-codeql-for-visual-studio-code", "codeql-for-visual-studio-code/working-with-codeql-packs-in-visual-studio-code", "codeql-language-guides/abstract-syntax-tree-classes-for-working-with-go-programs", "codeql-language-guides/abstract-syntax-tree-classes-for-working-with-java-programs", "codeql-language-guides/abstract-syntax-tree-classes-for-working-with-javascript-and-typescript-programs", "codeql-language-guides/analyzing-control-flow-in-python", "codeql-language-guides/analyzing-data-flow-in-cpp", "codeql-language-guides/analyzing-data-flow-in-csharp", "codeql-language-guides/analyzing-data-flow-in-java", "codeql-language-guides/analyzing-data-flow-in-javascript-and-typescript", "codeql-language-guides/analyzing-data-flow-in-python", "codeql-language-guides/annotations-in-java", "codeql-language-guides/basic-query-for-cpp-code", "codeql-language-guides/basic-query-for-csharp-code", "codeql-language-guides/basic-query-for-go-code", "codeql-language-guides/basic-query-for-java-code", "codeql-language-guides/basic-query-for-javascript-code", "codeql-language-guides/basic-query-for-python-code", "codeql-language-guides/basic-query-for-ruby-code", "codeql-language-guides/codeql-for-cpp", "codeql-language-guides/codeql-for-csharp", "codeql-language-guides/codeql-for-go", "codeql-language-guides/codeql-for-java", "codeql-language-guides/codeql-for-javascript", "codeql-language-guides/codeql-for-python", "codeql-language-guides/codeql-for-ruby", "codeql-language-guides/codeql-library-for-cpp", "codeql-language-guides/codeql-library-for-csharp", "codeql-language-guides/codeql-library-for-go", "codeql-language-guides/codeql-library-for-java", "codeql-language-guides/codeql-library-for-javascript", "codeql-language-guides/codeql-library-for-python", "codeql-language-guides/codeql-library-for-ruby", "codeql-language-guides/codeql-library-for-typescript", "codeql-language-guides/conversions-and-classes-in-cpp", "codeql-language-guides/data-flow-cheat-sheet-for-javascript", "codeql-language-guides/detecting-a-potential-buffer-overflow", "codeql-language-guides/expressions-and-statements-in-python", "codeql-language-guides/expressions-types-and-statements-in-cpp", "codeql-language-guides/functions-in-cpp", "codeql-language-guides/functions-in-python", "codeql-language-guides/hash-consing-and-value-numbering", "codeql-language-guides/index", "codeql-language-guides/javadoc", "codeql-language-guides/modeling-data-flow-in-go-libraries", "codeql-language-guides/navigating-the-call-graph", "codeql-language-guides/overflow-prone-comparisons-in-java", "codeql-language-guides/refining-a-query-to-account-for-edge-cases", "codeql-language-guides/specifying-additional-remote-flow-sources-for-javascript", "codeql-language-guides/types-in-java", "codeql-language-guides/using-api-graphs-in-python", "codeql-language-guides/using-flow-labels-for-precise-data-flow-analysis", "codeql-language-guides/using-range-analsis-in-cpp", "codeql-language-guides/using-the-guards-library-in-cpp", "codeql-language-guides/using-type-tracking-for-api-modeling", "codeql-language-guides/working-with-source-locations", "codeql-overview/about-codeql", "codeql-overview/codeql-glossary", "codeql-overview/codeql-tools", "codeql-overview/index", "codeql-overview/supported-languages-and-frameworks", "contents", "ql-language-reference/about-the-ql-language", "ql-language-reference/aliases", "ql-language-reference/annotations", "ql-language-reference/evaluation-of-ql-programs", "ql-language-reference/expressions", "ql-language-reference/formulas", "ql-language-reference/index", "ql-language-reference/lexical-syntax", "ql-language-reference/modules", "ql-language-reference/name-resolution", "ql-language-reference/predicates", "ql-language-reference/ql-language-specification", "ql-language-reference/queries", "ql-language-reference/recursion", "ql-language-reference/types", "ql-language-reference/variables", "writing-codeql-queries/about-codeql-queries", "writing-codeql-queries/about-data-flow-analysis", "writing-codeql-queries/catch-the-fire-starter", "writing-codeql-queries/codeql-queries", "writing-codeql-queries/creating-path-queries", "writing-codeql-queries/cross-the-river", "writing-codeql-queries/crown-the-rightful-heir", "writing-codeql-queries/debugging-data-flow-queries-using-partial-flow", "writing-codeql-queries/defining-the-results-of-a-query", "writing-codeql-queries/find-the-thief", "writing-codeql-queries/index", "writing-codeql-queries/introduction-to-ql", "writing-codeql-queries/metadata-for-codeql-queries", "writing-codeql-queries/providing-locations-in-codeql-queries", "writing-codeql-queries/ql-tutorials", "writing-codeql-queries/query-help-files", "writing-codeql-queries/troubleshooting-query-performance"], "filenames": ["codeql-cli/about-codeql-packs.rst", "codeql-cli/about-ql-packs.rst", "codeql-cli/about-the-codeql-cli.rst", "codeql-cli/analyzing-databases-with-the-codeql-cli.rst", "codeql-cli/codeql-cli-reference.rst", "codeql-cli/creating-and-working-with-codeql-packs.rst", "codeql-cli/creating-codeql-databases.rst", "codeql-cli/creating-codeql-query-suites.rst", "codeql-cli/exit-codes.rst", "codeql-cli/extractor-options.rst", "codeql-cli/getting-started-with-the-codeql-cli.rst", "codeql-cli/index.rst", "codeql-cli/publishing-and-using-codeql-packs.rst", "codeql-cli/query-reference-files.rst", "codeql-cli/sarif-output.rst", "codeql-cli/specifying-command-options-in-a-codeql-configuration-file.rst", "codeql-cli/testing-custom-queries.rst", "codeql-cli/testing-query-help-files.rst", "codeql-cli/upgrading-codeql-databases.rst", "codeql-cli/using-custom-queries-with-the-codeql-cli.rst", "codeql-cli/using-the-codeql-cli.rst", "codeql-for-visual-studio-code/about-codeql-for-visual-studio-code.rst", "codeql-for-visual-studio-code/about-telemetry-in-codeql-for-visual-studio-code.rst", "codeql-for-visual-studio-code/analyzing-your-projects.rst", "codeql-for-visual-studio-code/customizing-settings.rst", "codeql-for-visual-studio-code/exploring-data-flow-with-path-queries.rst", "codeql-for-visual-studio-code/exploring-the-structure-of-your-source-code.rst", "codeql-for-visual-studio-code/index.rst", "codeql-for-visual-studio-code/setting-up-codeql-in-visual-studio-code.rst", "codeql-for-visual-studio-code/testing-codeql-queries-in-visual-studio-code.rst", "codeql-for-visual-studio-code/troubleshooting-codeql-for-visual-studio-code.rst", "codeql-for-visual-studio-code/working-with-codeql-packs-in-visual-studio-code.rst", "codeql-language-guides/abstract-syntax-tree-classes-for-working-with-go-programs.rst", "codeql-language-guides/abstract-syntax-tree-classes-for-working-with-java-programs.rst", "codeql-language-guides/abstract-syntax-tree-classes-for-working-with-javascript-and-typescript-programs.rst", "codeql-language-guides/analyzing-control-flow-in-python.rst", "codeql-language-guides/analyzing-data-flow-in-cpp.rst", "codeql-language-guides/analyzing-data-flow-in-csharp.rst", "codeql-language-guides/analyzing-data-flow-in-java.rst", "codeql-language-guides/analyzing-data-flow-in-javascript-and-typescript.rst", "codeql-language-guides/analyzing-data-flow-in-python.rst", "codeql-language-guides/annotations-in-java.rst", "codeql-language-guides/basic-query-for-cpp-code.rst", "codeql-language-guides/basic-query-for-csharp-code.rst", "codeql-language-guides/basic-query-for-go-code.rst", "codeql-language-guides/basic-query-for-java-code.rst", "codeql-language-guides/basic-query-for-javascript-code.rst", "codeql-language-guides/basic-query-for-python-code.rst", "codeql-language-guides/basic-query-for-ruby-code.rst", "codeql-language-guides/codeql-for-cpp.rst", "codeql-language-guides/codeql-for-csharp.rst", "codeql-language-guides/codeql-for-go.rst", "codeql-language-guides/codeql-for-java.rst", "codeql-language-guides/codeql-for-javascript.rst", "codeql-language-guides/codeql-for-python.rst", "codeql-language-guides/codeql-for-ruby.rst", "codeql-language-guides/codeql-library-for-cpp.rst", "codeql-language-guides/codeql-library-for-csharp.rst", "codeql-language-guides/codeql-library-for-go.rst", "codeql-language-guides/codeql-library-for-java.rst", "codeql-language-guides/codeql-library-for-javascript.rst", "codeql-language-guides/codeql-library-for-python.rst", "codeql-language-guides/codeql-library-for-ruby.rst", "codeql-language-guides/codeql-library-for-typescript.rst", "codeql-language-guides/conversions-and-classes-in-cpp.rst", "codeql-language-guides/data-flow-cheat-sheet-for-javascript.rst", "codeql-language-guides/detecting-a-potential-buffer-overflow.rst", "codeql-language-guides/expressions-and-statements-in-python.rst", "codeql-language-guides/expressions-types-and-statements-in-cpp.rst", "codeql-language-guides/functions-in-cpp.rst", "codeql-language-guides/functions-in-python.rst", "codeql-language-guides/hash-consing-and-value-numbering.rst", "codeql-language-guides/index.rst", "codeql-language-guides/javadoc.rst", "codeql-language-guides/modeling-data-flow-in-go-libraries.rst", "codeql-language-guides/navigating-the-call-graph.rst", "codeql-language-guides/overflow-prone-comparisons-in-java.rst", "codeql-language-guides/refining-a-query-to-account-for-edge-cases.rst", "codeql-language-guides/specifying-additional-remote-flow-sources-for-javascript.rst", "codeql-language-guides/types-in-java.rst", "codeql-language-guides/using-api-graphs-in-python.rst", "codeql-language-guides/using-flow-labels-for-precise-data-flow-analysis.rst", "codeql-language-guides/using-range-analsis-in-cpp.rst", "codeql-language-guides/using-the-guards-library-in-cpp.rst", "codeql-language-guides/using-type-tracking-for-api-modeling.rst", "codeql-language-guides/working-with-source-locations.rst", "codeql-overview/about-codeql.rst", "codeql-overview/codeql-glossary.rst", "codeql-overview/codeql-tools.rst", "codeql-overview/index.rst", "codeql-overview/supported-languages-and-frameworks.rst", "contents.rst", "ql-language-reference/about-the-ql-language.rst", "ql-language-reference/aliases.rst", "ql-language-reference/annotations.rst", "ql-language-reference/evaluation-of-ql-programs.rst", "ql-language-reference/expressions.rst", "ql-language-reference/formulas.rst", "ql-language-reference/index.rst", "ql-language-reference/lexical-syntax.rst", "ql-language-reference/modules.rst", "ql-language-reference/name-resolution.rst", "ql-language-reference/predicates.rst", "ql-language-reference/ql-language-specification.rst", "ql-language-reference/queries.rst", "ql-language-reference/recursion.rst", "ql-language-reference/types.rst", "ql-language-reference/variables.rst", "writing-codeql-queries/about-codeql-queries.rst", "writing-codeql-queries/about-data-flow-analysis.rst", "writing-codeql-queries/catch-the-fire-starter.rst", "writing-codeql-queries/codeql-queries.rst", "writing-codeql-queries/creating-path-queries.rst", "writing-codeql-queries/cross-the-river.rst", "writing-codeql-queries/crown-the-rightful-heir.rst", "writing-codeql-queries/debugging-data-flow-queries-using-partial-flow.rst", "writing-codeql-queries/defining-the-results-of-a-query.rst", "writing-codeql-queries/find-the-thief.rst", "writing-codeql-queries/index.rst", "writing-codeql-queries/introduction-to-ql.rst", "writing-codeql-queries/metadata-for-codeql-queries.rst", "writing-codeql-queries/providing-locations-in-codeql-queries.rst", "writing-codeql-queries/ql-tutorials.rst", "writing-codeql-queries/query-help-files.rst", "writing-codeql-queries/troubleshooting-query-performance.rst"], "titles": ["About CodeQL packs", "About QL packs", "About the CodeQL CLI", "Analyzing databases with the CodeQL CLI", "CodeQL CLI reference", "Creating and working with CodeQL packs", "Creating CodeQL databases", "Creating CodeQL query suites", "Exit codes", "Extractor options", "Getting started with the CodeQL CLI", "CodeQL CLI", "Publishing and using CodeQL packs", "Query reference files", "SARIF output", "Specifying command options in a CodeQL configuration file", "Testing custom queries", "Testing query help files", "Upgrading CodeQL databases", "Using custom queries with the CodeQL CLI", "Using the CodeQL CLI", "About CodeQL for Visual Studio Code", "About telemetry in CodeQL for Visual Studio Code", "Analyzing your projects", "Customizing settings", "Exploring data flow with path queries", "Exploring the structure of your source code", "CodeQL for Visual Studio Code", "Setting up CodeQL in Visual Studio Code", "Testing CodeQL queries in Visual Studio Code", "Troubleshooting CodeQL for Visual Studio Code", "Working with CodeQL packs in Visual Studio Code", "Abstract syntax tree classes for working with Go programs", "Abstract syntax tree classes for working with Java programs", "Abstract syntax tree classes for working with JavaScript and TypeScript programs", "Analyzing control flow in Python", "Analyzing data flow in C and C++", "Analyzing data flow in C#", "Analyzing data flow in Java", "Analyzing data flow in JavaScript and TypeScript", "Analyzing data flow in Python", "Annotations in Java", "Basic query for C and C++ code", "Basic query for C# code", "Basic query for Go code", "Basic query for Java code", "Basic query for JavaScript code", "Basic query for Python code", "Basic query for Ruby code", "CodeQL for C and C++", "CodeQL for C#", "CodeQL for Go", "CodeQL for Java", "CodeQL for JavaScript", "CodeQL for Python", "CodeQL for Ruby", "CodeQL library for C and C++", "CodeQL library for C#", "CodeQL library for Go", "CodeQL library for Java", "CodeQL library for JavaScript", "CodeQL library for Python", "CodeQL library for Ruby", "CodeQL library for TypeScript", "Conversions and classes in C and C++", "Data flow cheat sheet for JavaScript", "Detecting a potential buffer overflow", "Expressions and statements in Python", "Expressions, types, and statements in C and C++", "Functions in C and C++", "Functions in Python", "Hash consing and value numbering", "CodeQL language guides", "Javadoc", "Modeling data flow in Go libraries", "Navigating the call graph", "Overflow-prone comparisons in Java", "Refining a query to account for edge cases", "Specifying additional remote flow sources for JavaScript", "Types in Java", "Using API graphs in Python", "Using flow labels for precise data flow analysis", "Using range analysis for C and C++", "Using the guards library in C and C++", "Using type tracking for API modeling", "Working with source locations", "About CodeQL", "CodeQL glossary", "CodeQL tools", "CodeQL overview", "Supported languages and frameworks", "CodeQL documentation", "About the QL language", "Aliases", "Annotations", "Evaluation of QL programs", "Expressions", "Formulas", "QL language reference", "Lexical syntax", "Modules", "Name resolution", "Predicates", "QL language specification", "Queries", "Recursion", "Types", "Variables", "About CodeQL queries", "About data flow analysis", "Catch the fire starter", "CodeQL queries", "Creating path queries", "Cross the river", "Crown the rightful heir", "Debugging data-flow queries using partial flow", "Defining the results of a query", "Find the thief", "Writing CodeQL queries", "Introduction to QL", "Metadata for CodeQL queries", "Providing locations in CodeQL queries", "QL tutorials", "Query help files", "Troubleshooting query performance"], "terms": {"thi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124], "articl": [39, 53, 59, 62, 65, 112], "wa": [6, 8, 14, 16, 23, 24, 41, 46, 57, 59, 60, 62, 66, 73, 77, 83, 84, 86, 101, 103, 108, 116], "move": [16, 58, 60, 70, 110, 113], "github": [0, 2, 5, 6, 7, 8, 10, 12, 14, 18, 19, 21, 22, 23, 27, 28, 31, 74, 86, 88, 89, 94, 103, 108, 112, 119, 120, 123], "doc": 123, "site": [25, 58, 63, 84], "januari": 103, "2023": [], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124], "sourc": [2, 3, 6, 9, 14, 20, 21, 23, 25, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 57, 58, 59, 60, 62, 63, 65, 67, 71, 75, 77, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 94, 99, 103, 108, 109, 111, 116, 118, 119, 120, 121], "file": [4, 5, 6, 7, 8, 10, 11, 14, 19, 20, 21, 23, 27, 28, 29, 31, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 53, 56, 58, 59, 61, 62, 63, 67, 69, 74, 75, 77, 78, 81, 85, 86, 90, 91, 92, 94, 96, 97, 101, 103, 104, 111, 112, 120, 124], "now": [16, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 64, 66, 73, 76, 79, 80, 81, 84, 85, 95, 96, 97, 102, 104, 106, 110, 113, 114, 116, 117, 124], "exist": [3, 6, 9, 14, 23, 25, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 79, 81, 84, 85, 92, 93, 94, 96, 98, 101, 103, 105, 106, 107, 108, 110, 112, 113, 115, 117, 119, 121, 124], "public": [16, 23, 36, 37, 38, 41, 56, 57, 59, 73, 75, 77, 85, 87, 97, 103, 106], "open": [2, 6, 10, 12, 16, 19, 21, 23, 24, 25, 26, 28, 29, 30, 31, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 64, 69, 80, 88, 89, 103, 108, 112, 117, 119, 120], "repositori": [3, 6, 7, 10, 16, 17, 18, 20, 21, 23, 26, 28, 60, 74, 87, 103, 108, 112, 116, 120, 121, 123], "If": [1, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 74, 76, 79, 80, 81, 84, 85, 87, 90, 92, 94, 95, 96, 97, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 124], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "would": [3, 6, 9, 10, 13, 15, 19, 31, 39, 40, 41, 58, 59, 60, 63, 64, 66, 67, 68, 69, 71, 73, 75, 79, 81, 85, 92, 95, 96, 106, 107, 108, 110, 112, 113, 114, 115, 121, 124], "like": [3, 6, 9, 10, 15, 18, 19, 20, 23, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 76, 77, 79, 80, 81, 85, 86, 92, 94, 96, 97, 101, 102, 103, 104, 105, 106, 110, 113, 114, 115, 117, 119, 121, 124], "contribut": [10, 17, 63], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 124], "consult": [], "guid": [17, 19, 21, 22, 91, 108, 120, 123], "want": [0, 1, 3, 5, 6, 7, 10, 12, 13, 15, 16, 18, 19, 23, 24, 28, 29, 30, 31, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 60, 61, 62, 64, 67, 68, 70, 75, 76, 79, 81, 85, 92, 94, 96, 97, 100, 102, 106, 108, 110, 113, 114, 116, 117, 119, 121, 124], "go": [1, 3, 6, 10, 21, 23, 26, 28, 31, 35, 39, 42, 43, 45, 46, 47, 48, 59, 60, 64, 72, 76, 79, 84, 85, 91, 108, 113, 114, 115, 116, 120, 124], "specif": [0, 1, 3, 6, 7, 10, 19, 20, 21, 22, 25, 27, 28, 29, 31, 34, 37, 38, 40, 52, 56, 57, 58, 59, 60, 63, 64, 65, 68, 71, 73, 79, 80, 81, 84, 86, 87, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 106, 107, 108, 109, 110, 112, 116, 119, 120, 123], "subsect": [32, 33, 34], "new": [3, 6, 7, 14, 16, 17, 23, 24, 25, 28, 31, 33, 37, 38, 39, 40, 46, 56, 57, 58, 59, 60, 63, 65, 66, 69, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 93, 96, 97, 103, 105, 106, 110, 113, 114, 116, 117], "locat": [0, 1, 3, 4, 6, 13, 16, 19, 23, 24, 28, 30, 31, 40, 42, 43, 44, 45, 46, 47, 48, 52, 58, 62, 63, 78, 79, 80, 86, 87, 91, 101, 103, 107, 108, 111, 112, 113, 116, 117, 123, 124], "see": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124], "toc": [], "link": [14, 20, 23, 30, 42, 43, 44, 45, 46, 47, 48, 60, 103, 108, 112, 117, 121, 123], "below": [0, 1, 3, 7, 10, 16, 23, 28, 33, 39, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 60, 61, 62, 63, 84, 90, 95, 96, 97, 100, 101, 102, 103, 108, 110, 113, 115, 121, 123, 124], "structur": [5, 9, 10, 17, 27, 32, 33, 34, 56, 57, 58, 60, 62, 69, 71, 90, 91, 92, 100, 103, 106, 109, 112, 120, 124], "publish": [0, 3, 4, 5, 19, 20, 31, 91], "qlpack": [5, 7, 10, 16, 19, 28, 31, 101, 103], "yml": [5, 7, 9, 16, 19, 28, 31, 90, 101, 103], "properti": [3, 5, 6, 7, 9, 14, 19, 25, 35, 37, 39, 57, 58, 63, 65, 70, 78, 81, 84, 86, 95, 102, 103, 106, 108, 109, 110, 112, 116, 117], "lock": [5, 57, 117], "exampl": [0, 9, 10, 12, 14, 23, 25, 26, 28, 30, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 58, 59, 60, 62, 64, 65, 68, 69, 70, 74, 76, 77, 80, 83, 84, 85, 86, 87, 90, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 121, 122, 123, 124], "custom": [0, 2, 4, 5, 6, 7, 9, 10, 13, 15, 20, 21, 22, 23, 27, 28, 29, 30, 37, 39, 40, 60, 66, 78, 81, 86, 88, 91, 108, 111, 121, 123], "librari": [0, 3, 4, 5, 6, 10, 12, 13, 16, 18, 19, 20, 21, 25, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 65, 67, 68, 69, 70, 73, 75, 76, 78, 79, 80, 81, 85, 86, 87, 89, 91, 92, 101, 106, 108, 109, 111, 112, 115, 116, 119, 121, 124], "queri": [0, 2, 4, 5, 6, 8, 9, 11, 12, 14, 18, 20, 21, 22, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 82, 83, 84, 87, 88, 90, 91, 95, 96, 97, 98, 101, 102, 105, 106, 107, 109, 110, 113, 114, 122], "test": [0, 2, 3, 4, 6, 8, 10, 13, 20, 21, 23, 27, 28, 57, 58, 59, 60, 66, 75, 77, 79, 91, 103, 106], "core": [0, 10, 21, 22, 27, 31, 56, 57, 59, 61, 87, 90, 103], "depend": [0, 1, 4, 6, 10, 12, 13, 14, 16, 19, 20, 23, 28, 29, 32, 58, 60, 62, 84, 86, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 112, 120, 124], "resolut": [91, 97, 98, 100, 106], "page": [0, 6, 10, 23, 42, 43, 44, 45, 46, 47, 48, 60, 64, 66, 69, 123], "codeql": [8, 13, 14, 23, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 92, 94, 96, 98, 103, 106, 109, 110, 112, 113, 114, 115, 116, 117, 122, 123, 124], "command": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 39, 40, 60, 65, 89, 91, 103], "run": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 15, 19, 20, 21, 22, 26, 27, 28, 29, 31, 39, 40, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 66, 68, 71, 75, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 101, 103, 106, 108, 109, 110, 112, 120, 123], "specifi": [0, 1, 3, 5, 9, 10, 12, 13, 14, 16, 17, 18, 20, 24, 30, 39, 53, 60, 67, 73, 74, 81, 86, 87, 91, 92, 93, 94, 96, 101, 102, 103, 108, 112, 113, 119, 123, 124], "which": [0, 3, 6, 9, 10, 12, 14, 15, 16, 17, 19, 21, 23, 24, 26, 28, 31, 34, 35, 36, 37, 38, 39, 40, 41, 44, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 121, 123, 124], "pack": [4, 6, 7, 10, 13, 15, 17, 19, 20, 23, 27, 28, 87, 91, 103, 108], "analys": [2, 3, 7, 17, 19, 35, 58, 60, 78, 86, 108, 111, 118], "singl": [6, 7, 9, 10, 13, 14, 17, 23, 35, 36, 37, 38, 39, 40, 41, 57, 60, 61, 62, 63, 66, 67, 70, 73, 75, 78, 79, 81, 84, 85, 86, 95, 96, 97, 103, 109, 110, 112, 115, 117, 120, 123, 124], "all": [0, 1, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 23, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 56, 57, 58, 59, 60, 62, 63, 64, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 124], "directori": [0, 1, 5, 6, 7, 8, 12, 13, 15, 16, 17, 19, 24, 28, 30, 31, 39, 57, 85, 86, 87, 90, 101, 103, 123], "subset": [57, 94, 103, 106, 110], "suit": [0, 1, 4, 12, 17, 19, 20, 24, 25, 27, 91], "diagnost": [19, 108], "summari": [19, 94, 101, 108], "inform": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 57, 59, 60, 61, 66, 67, 68, 70, 71, 73, 77, 79, 81, 84, 85, 86, 87, 88, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 124], "integr": [5, 6, 10, 23, 28, 29, 76], "code": [1, 2, 4, 6, 9, 11, 13, 14, 16, 17, 18, 19, 20, 23, 24, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123], "scan": [1, 6, 7, 10, 15, 17, 20, 98, 103, 108, 111, 118, 123], "workflow": [6, 77], "includ": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 16, 17, 22, 23, 24, 28, 29, 30, 31, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 74, 76, 79, 80, 81, 82, 84, 85, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 117, 118, 120, 121, 124], "help": [2, 6, 8, 10, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 37, 38, 39, 40, 41, 53, 56, 57, 58, 59, 60, 62, 66, 83, 87, 91, 92, 94, 97, 100, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 124], "sarif": [4, 17, 23, 91, 123], "result": [4, 7, 8, 10, 11, 15, 16, 19, 21, 24, 25, 27, 30, 35, 37, 39, 40, 41, 49, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 120, 121, 123, 124], "categori": [0, 1, 3, 23, 32, 33, 34, 41, 59, 61, 62, 69, 74, 90, 120], "about": [3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 19, 20, 23, 27, 28, 39, 52, 58, 60, 63, 68, 81, 84, 89, 91, 94, 95, 97, 98, 100, 102, 103, 107, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123], "cli": [0, 1, 6, 7, 8, 12, 14, 15, 16, 17, 18, 23, 29, 30, 31, 63, 86, 87, 88, 91, 94, 96, 103, 106, 108, 112, 116, 123], "modifi": [12, 23, 25, 42, 43, 44, 45, 47, 48, 57, 62, 63, 66, 68, 69, 70, 74, 78, 84, 103, 108, 111, 112, 113, 116, 121], "an": [0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 21, 23, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124], "legaci": [6, 10, 59, 60, 90, 101, 103], "ql": [0, 3, 4, 6, 7, 10, 12, 13, 15, 17, 21, 23, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 93, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 118, 121, 124], "ad": [7, 10, 14, 16, 20, 24, 28, 37, 39, 44, 49, 60, 64, 65, 66, 68, 77, 78, 79, 84, 92, 94, 96, 102, 103, 105, 106, 107, 108, 115], "instal": [0, 1, 3, 6, 8, 10, 12, 15, 19, 22, 24, 27, 29, 31, 84], "download": [0, 3, 5, 6, 18, 19, 23, 24, 28, 31], "progress": [23, 30, 42, 43, 44, 45, 46, 47, 48], "non": [3, 10, 19, 32, 36, 37, 38, 39, 40, 59, 60, 61, 69, 73, 75, 76, 79, 80, 81, 84, 85, 93, 94, 95, 96, 97, 102, 104, 107, 120, 123], "compil": [0, 1, 5, 7, 10, 16, 19, 28, 30, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 59, 63, 64, 65, 68, 73, 75, 80, 85, 86, 87, 95, 98, 99, 101, 102, 103, 105, 106, 107, 121], "languag": [0, 1, 3, 7, 9, 10, 14, 16, 20, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 95, 96, 97, 99, 100, 101, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 123, 124], "javascript": [0, 1, 3, 7, 10, 13, 28, 63, 72, 81, 84, 91, 100, 101, 108, 109, 112, 116, 119, 123], "typescript": [10, 53, 60, 65, 81, 84, 91, 108, 109, 112], "python": [0, 1, 3, 10, 28, 72, 91, 108, 109, 112, 119], "rubi": [1, 10, 28, 72, 90, 91, 112], "detect": [49, 57, 64, 71, 91, 103, 110, 114, 117, 122], "build": [35, 60, 84, 86, 90, 103], "system": [3, 7, 9, 10, 13, 16, 29, 37, 38, 39, 40, 57, 60, 63, 81, 85, 92, 103, 106, 123], "us": [0, 1, 2, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 18, 21, 23, 24, 25, 26, 27, 29, 30, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123], "indirect": 39, "trace": [9, 58], "from": [0, 1, 2, 3, 5, 7, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 109, 110, 112, 114, 115, 116, 117, 119, 121, 123, 124], "com": [0, 3, 5, 10, 12, 18, 19, 23, 24, 28, 31, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 63, 64, 67, 68, 69, 70, 73, 74, 75, 76, 77, 79, 80, 81, 85, 108, 110, 113, 114, 117, 119, 121], "add": [0, 1, 2, 3, 5, 6, 10, 13, 14, 15, 16, 21, 23, 27, 28, 31, 36, 37, 38, 39, 40, 41, 43, 48, 60, 73, 74, 78, 79, 81, 92, 94, 95, 97, 100, 103, 104, 106, 108, 113, 115], "filter": [41, 60, 75, 76, 84], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124], "reus": [92, 94, 100, 106, 119, 123], "definit": [0, 1, 19, 20, 21, 23, 31, 35, 39, 41, 58, 61, 62, 63, 65, 66, 69, 73, 76, 79, 81, 85, 94, 95, 96, 97, 100, 101, 102, 105, 106, 110, 112, 114, 115, 117, 124], "reusabl": [7, 84], "name": [0, 1, 3, 5, 6, 9, 10, 12, 14, 16, 17, 19, 22, 23, 24, 28, 29, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 59, 61, 62, 64, 65, 66, 67, 70, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 90, 91, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 110, 112, 113, 115, 117, 120, 121, 123, 124], "save": [1, 3, 15, 16, 17, 19, 20, 23, 24, 87, 117], "well": [0, 1, 5, 17, 25, 30, 39, 42, 43, 44, 45, 46, 47, 48, 57, 58, 59, 60, 63, 77, 78, 79, 80, 81, 82, 84, 92, 94, 96, 101, 103, 109, 112, 114], "known": [0, 1, 14, 17, 39, 58, 60, 61, 63, 79, 80, 81, 86, 92, 94, 101, 106, 107, 109, 114, 120, 123], "set": [1, 3, 4, 6, 7, 8, 12, 14, 20, 21, 22, 23, 27, 29, 30, 34, 39, 40, 56, 57, 58, 59, 60, 61, 62, 66, 67, 71, 77, 79, 80, 81, 82, 84, 85, 87, 91, 92, 95, 97, 98, 101, 104, 105, 106, 107, 108, 112, 113, 115, 124], "up": [3, 6, 20, 21, 27, 39, 40, 57, 58, 60, 61, 65, 66, 70, 73, 75, 76, 78, 84, 85, 87, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 105, 113, 119, 121, 124], "1": [0, 1, 3, 6, 9, 14, 16, 17, 28, 32, 44, 46, 58, 60, 64, 65, 66, 67, 68, 69, 70, 71, 76, 79, 80, 82, 83, 84, 85, 90, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 117, 121, 124], "zip": [23, 87], "packag": [0, 1, 3, 5, 6, 12, 31, 32, 39, 41, 51, 58, 59, 60, 73, 74, 80, 81, 85], "2": [0, 1, 3, 5, 6, 9, 12, 14, 16, 17, 19, 31, 32, 33, 34, 65, 66, 67, 71, 76, 82, 85, 90, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 116, 117, 121], "extract": [3, 6, 9, 16, 41, 56, 57, 58, 59, 60, 63, 65, 80, 86, 87, 108, 111, 117], "archiv": [6, 18, 23, 87], "3": [0, 16, 33, 56, 61, 66, 67, 85, 90, 94, 95, 96, 97, 100, 101, 102, 104, 106, 107, 116, 117, 121], "launch": [], "4": [15, 32, 33, 34, 61, 67, 85, 90, 96, 97, 102, 103, 106, 117, 121], "verifi": 95, "your": [0, 1, 2, 3, 5, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 30, 31, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 53, 56, 57, 58, 59, 60, 61, 62, 66, 71, 78, 82, 86, 87, 91, 94, 95, 97, 100, 101, 102, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 120, 122, 123, 124], "setup": 3, "check": [0, 3, 5, 6, 8, 12, 16, 28, 30, 31, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 57, 58, 59, 60, 64, 65, 66, 67, 68, 71, 73, 75, 76, 81, 82, 85, 86, 87, 89, 90, 92, 94, 95, 101, 102, 106, 110, 113, 114, 121, 124], "out": [3, 6, 8, 9, 16, 18, 24, 31, 35, 40, 41, 52, 57, 58, 59, 60, 75, 76, 79, 84, 85, 86, 96, 108, 110, 113, 114, 117, 119, 124], "directli": [3, 9, 11, 12, 13, 15, 16, 19, 20, 28, 35, 39, 40, 57, 58, 59, 60, 62, 67, 75, 81, 85, 86, 87, 88, 94, 96, 98, 101, 102, 103, 105, 106, 107, 112, 114, 116, 117, 119], "creat": [0, 1, 2, 3, 4, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 23, 24, 25, 28, 36, 37, 38, 39, 40, 51, 53, 60, 63, 64, 65, 67, 69, 74, 77, 79, 84, 86, 87, 88, 91, 92, 93, 94, 96, 97, 103, 106, 108, 109, 110, 111, 115, 116, 124], "obtain": [41, 57, 58, 59, 60, 63, 84, 103, 105, 117], "local": [0, 2, 3, 5, 6, 18, 28, 41, 57, 58, 59, 60, 61, 62, 63, 66, 67, 80, 84, 109], "copi": [3, 6, 18, 26, 28, 42, 43, 44, 45, 46, 47, 48, 62, 65, 70, 78, 86, 87], "5": [16, 32, 56, 59, 60, 66, 79, 85, 90, 96, 97, 102, 103, 106, 107, 115, 117, 119], "6": [0, 1, 3, 5, 6, 12, 16, 19, 31, 90, 96, 97, 103, 104, 106, 117, 119], "two": [0, 5, 9, 12, 13, 14, 15, 16, 19, 23, 28, 29, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 71, 73, 75, 76, 79, 81, 84, 85, 86, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 121, 123, 124], "version": [0, 1, 3, 5, 6, 12, 16, 18, 19, 22, 28, 30, 31, 41, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 73, 77, 79, 81, 84, 85, 89, 90, 93, 121, 124], "line": [1, 2, 3, 6, 7, 9, 10, 11, 13, 14, 15, 16, 19, 20, 39, 56, 57, 58, 59, 66, 67, 68, 74, 83, 85, 89, 96, 97, 99, 103, 114, 116, 117, 121, 123], "interfac": [11, 20, 32, 34, 41, 54, 57, 58, 59, 71, 79, 80, 86, 89, 90, 106], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124], "databas": [0, 1, 2, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 68, 69, 70, 71, 72, 77, 80, 85, 88, 90, 91, 93, 94, 95, 96, 101, 103, 108, 109, 114, 119, 121, 123, 124], "secur": [0, 1, 2, 3, 7, 11, 20, 21, 25, 27, 37, 38, 39, 40, 58, 60, 62, 69, 70, 81, 84, 86, 88, 89, 101, 106, 108, 109, 111, 112, 118, 119, 120, 123], "research": [2, 10, 11, 20, 28, 86, 88, 89, 112], "visual": [2, 6, 10, 11, 16, 20, 23, 24, 26, 62, 86, 89, 90, 91, 103, 111, 112, 113], "studio": [2, 6, 10, 11, 16, 20, 23, 24, 26, 62, 86, 89, 90, 91, 103], "extens": [6, 7, 9, 11, 16, 19, 20, 21, 22, 23, 27, 29, 30, 56, 57, 58, 59, 60, 61, 62, 85, 86, 87, 88, 90, 92, 94, 97, 100, 103, 106, 108, 109, 112, 116, 120, 123], "softwar": [2, 9, 10, 11, 20, 28, 92, 108], "develop": [0, 2, 3, 10, 11, 16, 19, 20, 21, 22, 27, 28, 39, 41, 59, 60, 66, 76, 77, 79, 85, 86, 89, 108, 112], "refer": [1, 2, 3, 6, 7, 11, 14, 16, 17, 18, 23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 93, 94, 97, 100, 104, 106, 108, 110, 112, 113, 114, 117, 119, 123, 124], "learn": [4, 11, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 72, 77, 89, 96, 98, 108, 109, 110, 112, 117, 118, 119, 122], "more": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "when": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 28, 29, 30, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 74, 76, 77, 80, 81, 82, 83, 87, 90, 92, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123], "process": [2, 3, 4, 6, 9, 10, 11, 19, 20, 28, 39, 40, 42, 43, 44, 45, 46, 47, 48, 60, 86, 92, 96, 101, 103, 108, 109, 116, 123], "format": [0, 3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 36, 37, 38, 40, 56, 57, 60, 69, 82, 86, 87, 96, 103, 108, 116, 120, 123], "exit": [4, 11, 58, 60, 61, 91], "gener": [3, 4, 5, 6, 10, 11, 15, 16, 19, 21, 22, 23, 28, 32, 36, 37, 38, 39, 40, 41, 44, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 67, 68, 69, 72, 75, 77, 78, 79, 81, 86, 87, 95, 96, 100, 101, 102, 103, 106, 108, 109, 115, 116, 117, 120, 123, 124], "manual": [2, 5, 10, 11, 25, 30, 40, 86, 91, 116], "detail": [3, 6, 8, 10, 11, 12, 14, 16, 17, 18, 23, 25, 27, 30, 42, 43, 44, 45, 46, 47, 48, 58, 60, 63, 81, 87, 92, 95, 96, 98, 99, 103, 108, 112, 113, 117, 123], "avail": [0, 1, 3, 5, 6, 9, 10, 11, 12, 14, 19, 22, 23, 24, 28, 31, 37, 39, 41, 56, 57, 58, 59, 60, 63, 69, 76, 77, 78, 92, 93, 94, 96, 97, 100, 101, 102, 103, 106, 108, 116, 119, 121], "configur": [1, 3, 5, 6, 9, 10, 16, 20, 27, 36, 37, 38, 39, 40, 58, 60, 65, 81, 84, 94, 112, 115], "befor": [3, 6, 9, 10, 16, 17, 18, 19, 20, 22, 29, 39, 58, 60, 64, 79, 81, 83, 85, 94, 97, 98, 103, 113, 116, 117, 118, 119, 122, 124], "scope": [0, 5, 35, 57, 58, 59, 62, 63, 65, 67, 81, 84, 103], "analyz": [0, 1, 2, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 74, 77, 81, 84, 85, 86, 87, 88, 90, 91, 92, 98, 106, 108, 109, 111, 112, 115, 118, 119, 121, 122, 123], "compat": [0, 1, 6, 10, 13, 14, 18, 28, 60, 79, 87, 96, 97, 103, 105, 112], "work": [0, 6, 7, 10, 17, 18, 20, 23, 26, 27, 28, 29, 39, 51, 52, 53, 58, 59, 60, 65, 66, 67, 68, 76, 84, 86, 89, 91, 92, 93, 94, 96, 97, 101, 106, 110, 114, 115, 117, 119, 122, 123, 124], "enterpris": [10, 28, 94, 96, 103], "server": [6, 22, 24, 29, 30, 40, 60, 84, 90], "authent": [], "contain": [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 16, 17, 19, 21, 23, 25, 26, 28, 30, 31, 35, 37, 38, 40, 41, 42, 43, 45, 47, 52, 53, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 74, 75, 77, 78, 80, 81, 84, 85, 86, 87, 92, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 119, 123, 124], "registri": [0, 3, 5, 12, 19, 31], "defin": [0, 1, 4, 6, 7, 9, 12, 14, 15, 16, 17, 20, 25, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 94, 95, 96, 97, 98, 101, 103, 104, 105, 108, 110, 111, 113, 114, 115, 117, 119, 120, 121, 123, 124], "schema": [0, 1, 18, 26, 86, 101, 103, 106, 121], "chang": [0, 3, 5, 7, 12, 15, 16, 18, 19, 23, 28, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 58, 60, 64, 73, 75, 78, 81, 85, 87, 94, 96, 103, 105, 106, 107, 109, 113, 115, 116], "note": [0, 1, 3, 5, 6, 7, 9, 10, 12, 15, 18, 19, 23, 26, 28, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 78, 79, 80, 81, 84, 85, 93, 94, 96, 97, 100, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124], "between": [0, 1, 8, 13, 15, 25, 26, 29, 35, 36, 37, 38, 39, 40, 57, 58, 60, 61, 62, 63, 65, 75, 76, 80, 84, 85, 86, 87, 92, 95, 96, 97, 98, 101, 102, 103, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120, 123, 124], "futur": [6, 66, 94], "object": [6, 9, 20, 37, 39, 44, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 78, 79, 81, 84, 85, 86, 96, 103, 106, 109, 110, 112], "sariflog": [], "tool": [2, 3, 4, 6, 8, 10, 18, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 98, 101, 103, 110, 113, 114, 117, 124], "toolcompon": [], "reportingdescriptor": [], "rule": [9, 58, 60, 85, 103, 123], "artifact": [6, 92], "artifactloc": [], "physicalloc": [], "region": [110, 114], "codeflow": [], "threadflow": [], "threadflowloc": [], "prepar": [3, 10, 64, 86], "execut": [0, 1, 3, 5, 6, 7, 10, 15, 18, 19, 23, 24, 28, 35, 39, 40, 49, 58, 60, 65, 67, 83, 87, 90, 92], "view": [2, 3, 19, 21, 24, 25, 27, 28, 29, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 58, 60, 73, 80, 86, 87, 88, 89, 90, 92, 94, 111, 112, 120], "output": [3, 4, 6, 9, 13, 15, 17, 19, 23, 24, 29, 30, 37, 39, 40, 74, 86, 87, 91, 94, 96, 98, 104, 117], "prerequisit": [], "write": [1, 3, 8, 13, 17, 21, 23, 25, 27, 28, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123], "valid": [0, 1, 17, 20, 23, 46, 60, 93, 94, 96, 102, 103, 105, 106, 108, 112, 116, 121], "metadata": [0, 1, 3, 4, 7, 10, 23, 25, 36, 37, 38, 39, 40, 86, 91, 111, 116], "let": [21, 26, 27, 34, 41, 60, 61, 63, 64, 73, 76, 81, 84, 85, 94, 96, 101, 103, 113, 121], "provid": [0, 1, 2, 3, 4, 7, 8, 9, 14, 16, 17, 19, 21, 29, 30, 39, 40, 41, 56, 57, 58, 59, 60, 62, 63, 71, 73, 75, 78, 79, 81, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 98, 99, 100, 102, 103, 105, 106, 108, 109, 111, 112, 123, 124], "easi": [16, 21, 28, 41, 70, 73, 78, 79, 81, 106, 116, 119, 124], "wai": [6, 7, 10, 12, 13, 15, 16, 21, 23, 28, 39, 57, 58, 60, 63, 64, 69, 76, 77, 79, 81, 83, 84, 85, 86, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124], "larg": [21, 29, 30, 32, 33, 34, 35, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 70, 71, 75, 79, 84, 92, 109, 113, 115, 124], "With": [5, 21, 39, 61, 66, 67, 81, 84, 97, 103], "own": [0, 1, 2, 3, 8, 9, 10, 12, 19, 20, 21, 24, 28, 31, 37, 38, 39, 40, 53, 58, 59, 60, 66, 67, 73, 84, 86, 94, 95, 101, 102, 103, 106, 108, 110, 113, 114, 116, 117, 123, 124], "find": [0, 1, 3, 6, 7, 8, 9, 10, 13, 16, 18, 19, 21, 23, 25, 27, 28, 31, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 57, 58, 59, 60, 62, 63, 65, 74, 76, 80, 81, 84, 86, 91, 92, 94, 95, 96, 101, 103, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 122, 123], "error": [3, 6, 8, 9, 15, 19, 20, 21, 23, 28, 30, 39, 42, 43, 45, 46, 47, 48, 52, 56, 66, 73, 85, 86, 94, 95, 101, 102, 106, 107, 110, 119, 120], "vulner": [3, 10, 19, 21, 23, 25, 27, 28, 36, 49, 53, 62, 81, 86, 108, 109, 111, 112, 118, 119], "show": [6, 10, 16, 18, 21, 23, 25, 28, 29, 30, 35, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 57, 59, 60, 62, 63, 80, 81, 102, 113, 114, 119, 121, 122, 123, 124], "flow": [10, 21, 23, 27, 49, 50, 51, 52, 53, 54, 57, 62, 63, 66, 80, 83, 84, 86, 87, 90, 91, 94, 106, 108, 111], "through": [4, 9, 21, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 53, 54, 58, 60, 62, 63, 65, 69, 71, 74, 76, 81, 84, 94, 96, 103, 106, 109, 111, 112, 114, 115, 117, 119, 121, 122], "path": [0, 1, 3, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 35, 36, 37, 38, 39, 40, 57, 58, 60, 62, 81, 84, 85, 86, 87, 91, 101, 108, 109, 111, 115, 116, 120, 121], "essenti": 21, "triag": [21, 86], "also": [0, 1, 3, 5, 6, 7, 9, 10, 15, 16, 17, 19, 21, 23, 25, 26, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124], "sidebar": [21, 23, 29], "v": [3, 6, 10, 16, 21, 22, 27, 28, 30, 36, 37, 38, 39, 40, 56, 57, 59, 60, 61, 62, 66, 67, 81, 86, 87, 90, 96, 103, 106, 108, 112, 115, 116, 119, 120], "list": [0, 3, 6, 7, 9, 10, 21, 23, 24, 30, 32, 33, 34, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60, 61, 62, 67, 69, 70, 73, 76, 79, 90, 93, 94, 96, 100, 102, 103, 105, 106, 108, 110, 113, 114, 117, 119, 120, 121, 124], "overview": [21, 57, 85, 87, 91, 92, 97, 99, 100], "have": [0, 3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 18, 19, 21, 23, 24, 26, 28, 31, 32, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123], "current": [0, 1, 3, 5, 6, 7, 10, 12, 17, 19, 21, 23, 31, 39, 55, 60, 62, 66, 73, 78, 80, 81, 85, 87, 90, 93, 94, 100, 101, 103, 107, 110, 113], "session": [21, 23, 24, 30], "variant": [53, 60, 62, 65, 89, 90, 95, 96, 119], "analysi": [0, 1, 3, 4, 5, 6, 7, 10, 14, 15, 19, 20, 23, 25, 28, 35, 36, 37, 38, 39, 40, 49, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 71, 72, 77, 84, 87, 88, 89, 90, 91, 92, 94, 106, 108, 111, 112, 115, 116, 120, 123], "scale": [], "standard": [3, 6, 7, 10, 17, 21, 23, 25, 28, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 73, 75, 76, 78, 79, 85, 86, 87, 90, 94, 95, 96, 99, 109, 112, 116, 120, 123, 124], "intellisens": [21, 23, 31], "qll": [0, 1, 21, 23, 37, 56, 57, 58, 59, 60, 61, 62, 63, 66, 74, 93, 94, 100, 101, 103, 112, 116, 117], "editor": [12, 21, 23, 25, 30, 57, 94, 99], "syntax": [15, 21, 23, 27, 39, 51, 52, 53, 56, 57, 65, 69, 71, 76, 86, 87, 91, 92, 93, 96, 97, 98, 106, 109, 117], "highlight": [3, 19, 20, 21, 23, 25, 27, 30, 35, 42, 43, 44, 45, 46, 47, 48, 67, 69, 86, 97, 108, 109, 115], "right": [10, 21, 23, 24, 25, 28, 29, 30, 31, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 61, 63, 64, 65, 68, 73, 76, 81, 83, 85, 91, 103, 105, 106, 113, 115, 122], "click": [10, 21, 23, 24, 25, 26, 28, 29, 30, 31, 42, 43, 44, 45, 46, 47, 48, 64, 69, 80, 115, 121], "option": [0, 1, 3, 4, 5, 6, 8, 10, 12, 14, 16, 17, 18, 20, 21, 23, 28, 36, 37, 38, 39, 40, 42, 43, 45, 48, 58, 60, 62, 63, 74, 84, 87, 91, 96, 103, 104, 106, 112, 121, 123], "To": [0, 2, 3, 5, 6, 7, 9, 10, 12, 15, 16, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 73, 74, 76, 78, 79, 80, 81, 84, 85, 86, 87, 93, 95, 96, 97, 100, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120, 123, 124], "autocomplet": [21, 23, 31, 57], "suggest": [21, 23, 30, 31, 59, 60, 85, 94, 113, 114], "hover": [21, 23, 29, 31, 69], "document": [0, 2, 3, 6, 8, 10, 14, 16, 17, 18, 19, 21, 22, 23, 31, 39, 41, 55, 58, 59, 60, 63, 73, 81, 103, 108, 115, 123], "accord": [3, 14, 21, 59, 95, 102, 103, 104, 105, 106], "style": [17, 19, 21, 39, 60, 96, 108, 120, 123], "opt": [21, 22, 27, 121], "permit": [21, 22, 27], "do": [0, 5, 6, 9, 10, 21, 22, 26, 27, 28, 31, 32, 33, 34, 39, 40, 41, 42, 43, 45, 46, 48, 56, 57, 58, 60, 62, 64, 66, 68, 70, 73, 74, 76, 77, 78, 80, 81, 84, 85, 93, 94, 95, 96, 103, 106, 109, 112, 113, 114, 115, 117, 119, 121, 123, 124], "so": [0, 1, 3, 5, 6, 7, 10, 13, 17, 18, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 44, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 73, 74, 75, 76, 77, 79, 80, 81, 84, 85, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 121, 123, 124], "collect": [21, 27, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 79, 86, 90, 92, 96, 103], "usag": [21, 22, 27, 41, 80], "metric": [3, 19, 21, 22, 27, 108, 121], "purpos": [0, 1, 21, 22, 27, 39, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 68, 75, 108, 111, 112, 120, 123], "improv": [21, 22, 24, 27, 42, 43, 44, 45, 46, 47, 48, 49, 67, 77, 94, 96, 97, 111, 124], "For": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124], "project": [2, 3, 5, 6, 14, 16, 21, 25, 27, 28, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 56, 57, 59, 60, 61, 63, 64, 66, 67, 69, 70, 73, 75, 76, 77, 79, 80, 81, 84, 85, 87, 89, 91, 106, 108, 112, 115, 117, 119, 124], "multi": [6, 86], "share": [0, 4, 5, 6, 10, 14, 17, 19, 20, 22, 31, 35, 58, 60, 62, 84, 87, 103, 117, 123], "ani": [0, 1, 3, 6, 7, 8, 10, 12, 14, 15, 16, 17, 20, 22, 23, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 92, 93, 94, 95, 97, 100, 101, 102, 104, 105, 106, 107, 110, 113, 114, 115, 117, 119, 120, 121, 123, 124], "parti": [3, 6, 22, 37, 123], "outsid": [16, 22, 28, 31, 67, 95, 96, 102], "ip": 22, "address": [22, 58, 78, 103, 123], "id": [3, 14, 17, 19, 22, 42, 43, 44, 45, 46, 47, 48, 103, 120], "maximum": [12, 22, 61, 76, 96, 102, 103, 117], "30": [22, 61, 96, 103, 117], "dai": [22, 103, 119], "anonym": [22, 57, 59, 62, 63, 103, 104], "180": 22, "aggreg": [22, 92, 94, 95, 105, 108, 112, 117, 119, 122], "u": [22, 40, 56, 58, 60, 61, 63, 64, 66, 67, 68, 76, 81, 84, 85, 96, 103, 121], "onli": [0, 1, 3, 5, 6, 7, 8, 9, 12, 15, 16, 19, 22, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 90, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 113, 114, 117, 121, 123, 124], "ensur": [0, 1, 3, 5, 6, 7, 10, 13, 14, 16, 17, 19, 20, 22, 25, 28, 29, 39, 41, 58, 60, 62, 64, 67, 83, 84, 86, 94, 95, 96, 97, 106, 108, 112, 113, 115, 116, 120, 121, 124], "duplic": [22, 30, 71, 100, 116, 121], "dure": [0, 3, 5, 10, 12, 14, 15, 16, 17, 19, 22, 28, 31, 55, 57, 58, 60, 68, 86, 87, 94, 114, 123], "follow": [0, 1, 3, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 75, 77, 78, 79, 80, 83, 84, 85, 86, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 123, 124], "relat": [0, 3, 6, 20, 22, 32, 35, 42, 43, 45, 52, 57, 58, 59, 60, 61, 62, 69, 73, 76, 79, 82, 86, 87, 92, 94, 95, 97, 98, 100, 101, 102, 106, 108, 111, 112, 114, 117, 121, 124], "identifi": [3, 5, 6, 13, 14, 16, 17, 18, 19, 22, 25, 39, 42, 43, 45, 47, 48, 49, 52, 54, 58, 60, 63, 65, 66, 67, 69, 70, 71, 74, 75, 76, 79, 83, 84, 85, 86, 95, 98, 99, 100, 101, 102, 106, 107, 108, 116, 120, 121, 123], "each": [0, 1, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 22, 24, 25, 28, 29, 30, 35, 42, 43, 44, 45, 46, 47, 48, 53, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 70, 71, 73, 78, 81, 84, 85, 86, 87, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 108, 109, 112, 113, 114, 117, 120, 121, 123, 124], "timestamp": 22, "time": [3, 6, 8, 9, 14, 15, 22, 23, 24, 29, 36, 37, 38, 39, 40, 57, 58, 59, 60, 64, 68, 85, 86, 94, 96, 102, 103, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 119], "taken": [22, 81, 103, 112, 121], "whether": [3, 7, 9, 10, 22, 24, 28, 29, 30, 31, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 57, 58, 59, 60, 62, 66, 70, 71, 73, 75, 77, 79, 81, 82, 84, 85, 87, 95, 96, 97, 101, 103, 107, 109, 113, 114, 115, 120, 124], "complet": [3, 10, 16, 22, 25, 39, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 64, 66, 77, 81, 96, 103, 109, 115], "successfulli": [6, 8, 16, 22, 110], "interact": 23, "ui": [3, 17, 29, 60, 81, 123], "element": [17, 23, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 58, 60, 62, 65, 68, 69, 73, 79, 85, 94, 96, 98, 100, 101, 102, 103, 108, 109, 111, 112, 116, 120, 121, 124], "button": [29, 42, 43, 44, 45, 46, 47, 48, 69], "other": [0, 1, 3, 4, 5, 6, 7, 9, 12, 16, 17, 19, 20, 31, 33, 34, 35, 37, 39, 41, 47, 49, 52, 55, 57, 58, 59, 60, 62, 63, 67, 69, 73, 74, 75, 79, 81, 83, 84, 86, 87, 90, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 119, 120, 123, 124], "input": [3, 6, 37, 38, 39, 40, 53, 58, 60, 65, 66, 74, 78, 81, 84, 87, 96, 102, 121], "target": [1, 6, 23, 28, 58, 60, 62, 63, 69, 75, 79, 103, 106, 109], "text": [4, 12, 13, 14, 23, 42, 43, 44, 45, 46, 47, 48, 57, 58, 60, 62, 71, 73, 87, 103, 115, 116, 117, 120, 123], "record": [58, 60, 61, 81, 84, 85, 113, 114], "mous": [], "movement": [], "occurr": [35, 80, 95, 96, 103], "except": [7, 10, 16, 28, 34, 35, 37, 56, 58, 60, 65, 67, 73, 79, 81, 94, 95, 96, 97, 101, 103, 105, 106, 121], "sensit": [39, 103, 109], "static": [3, 4, 14, 59, 60, 61, 62, 65, 66, 75, 80, 81, 84, 85, 87, 98, 106], "messag": [3, 6, 8, 14, 17, 23, 28, 30, 37, 42, 43, 44, 45, 46, 47, 48, 56, 60, 85, 86, 95, 108, 112, 116], "content": [0, 1, 6, 14, 16, 17, 22, 28, 60, 65, 78, 87, 100, 101, 108, 116, 120], "remov": [5, 6, 7, 14, 23, 49, 57, 64, 69, 77, 81, 94, 96, 103, 124], "upload": [3, 6, 10, 17], "randomli": 22, "uniqu": [0, 1, 14, 22, 36, 37, 38, 39, 40, 58, 60, 63, 86, 96, 103, 106, 120, 121], "discard": [22, 26, 46, 85, 103], "client": [22, 63, 75, 90, 121], "send": [3, 8, 22, 58, 60], "canari": 22, "enabl": [6, 14, 22, 24, 29, 63, 90, 92, 103, 115], "true": [5, 6, 9, 12, 14, 22, 33, 34, 39, 58, 62, 63, 65, 79, 81, 83, 96, 97, 103, 106, 107, 119, 120], "employe": 22, "minim": [22, 103], "amount": [22, 66, 85, 102, 115], "need": [1, 3, 6, 7, 10, 15, 16, 19, 22, 23, 24, 26, 27, 28, 30, 31, 36, 37, 38, 39, 40, 54, 58, 60, 61, 66, 68, 69, 73, 74, 77, 78, 79, 81, 82, 84, 85, 94, 96, 97, 102, 103, 105, 106, 108, 110, 112, 114, 115, 116, 117, 119, 121], "answer": [8, 22, 110, 114, 117, 119], "question": [8, 22, 35, 73, 79, 92, 95, 103, 114, 117], "our": [22, 39, 41, 42, 43, 45, 46, 47, 48, 58, 60, 61, 64, 66, 73, 75, 76, 79, 81, 84, 85, 108, 110, 113, 120], "user": [0, 1, 5, 8, 9, 10, 15, 16, 17, 19, 20, 22, 24, 28, 37, 38, 39, 40, 53, 58, 60, 64, 65, 74, 78, 81, 84, 87, 90, 93, 94, 100, 103, 106, 108, 111, 116, 120, 121, 123], "experienc": 22, "product": [0, 1, 10, 18, 20, 22, 28, 101, 103, 104], "end": [0, 3, 6, 22, 29, 57, 58, 60, 62, 65, 76, 81, 84, 85, 96, 102, 103, 104, 112, 113, 121], "No": [14, 22, 82, 103, 114, 123], "filesystem": [22, 103], "default": [1, 3, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 20, 22, 24, 30, 31, 32, 33, 34, 39, 56, 57, 58, 60, 62, 63, 74, 75, 81, 90, 96, 97, 103, 106, 112, 115, 117, 120, 123], "sent": [22, 58], "enabletelemetri": 22, "fals": [6, 12, 14, 22, 37, 49, 58, 62, 63, 65, 66, 77, 79, 81, 83, 85, 96, 97, 103, 106, 107, 119, 120], "addition": [0, 22, 58, 60, 63, 75, 103, 112], "global": [15, 22, 34, 60, 62, 63, 65, 71, 78, 84, 95, 106, 109, 112], "telemetrylevel": [], "off": [5, 6, 41, 60, 81, 85, 115, 124], "microsoft": [3, 22, 56, 90], "": [0, 1, 3, 6, 7, 8, 10, 13, 14, 15, 16, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 44, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 73, 75, 76, 79, 80, 81, 82, 84, 85, 86, 92, 93, 94, 95, 96, 101, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 123, 124], "privaci": [22, 103], "statement": [0, 1, 13, 16, 22, 26, 40, 42, 43, 44, 45, 46, 47, 48, 49, 54, 59, 70, 71, 76, 77, 83, 85, 86, 91, 94, 101, 106, 109, 111, 112, 117, 120], "term": [10, 22, 28, 58, 60, 87, 89, 103, 110, 114], "servic": [3, 22, 37, 40, 60], "explain": [9, 10, 17, 42, 43, 44, 45, 46, 47, 48, 84, 86, 108, 112, 116, 123], "how": [0, 1, 6, 10, 16, 17, 18, 19, 20, 23, 24, 25, 29, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 66, 67, 69, 70, 72, 77, 79, 80, 81, 84, 85, 86, 89, 92, 96, 97, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124], "get": [2, 6, 18, 20, 28, 34, 35, 36, 37, 38, 39, 40, 48, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 80, 81, 84, 91, 96, 105, 106, 108, 110, 112, 113, 114, 115, 117, 118, 124], "machin": [8, 14, 28, 71], "across": [39, 58, 60, 86, 96, 103, 113], "mani": [3, 10, 14, 32, 33, 35, 36, 37, 38, 39, 40, 41, 57, 58, 59, 60, 61, 62, 63, 67, 69, 70, 73, 75, 79, 80, 81, 84, 94, 95, 96, 101, 103, 107, 108, 109, 110, 112, 113, 114, 115, 119, 123, 124], "over": [3, 7, 23, 26, 29, 31, 46, 49, 58, 60, 69, 77, 81, 82, 86, 96, 103, 106, 107, 117, 124], "titl": [9, 23, 60, 103, 123], "bar": [23, 73, 94, 96, 103, 106], "appropri": [6, 10, 15, 23, 26, 28, 39, 42, 43, 44, 45, 46, 47, 48, 101, 103, 106, 116, 121, 123, 124], "icon": [23, 29, 42, 43, 44, 45, 46, 47, 48], "folder": [1, 6, 10, 23, 28, 29, 40, 57, 65, 74, 121], "url": [23, 38, 60, 65, 103, 123], "onc": [6, 10, 14, 18, 23, 25, 26, 31, 60, 66, 68, 76, 77, 81, 84, 93, 94, 103, 110, 113, 117, 119], "ve": [10, 23, 84, 86, 93, 94, 110, 113, 117, 124], "chosen": [23, 103], "displai": [0, 3, 6, 7, 10, 12, 17, 23, 24, 26, 27, 29, 30, 42, 43, 44, 45, 46, 47, 48, 66, 69, 70, 71, 85, 86, 87, 93, 99, 104, 108, 111, 112, 116, 119, 120, 121, 123], "menu": [10, 23, 25], "entri": [7, 23, 35, 36, 37, 38, 40, 58, 60, 61, 75, 77, 79, 80, 101, 103], "ctrl": [23, 28], "cmd": [23, 28], "unarchiv": 23, "There": [0, 1, 5, 10, 13, 14, 19, 23, 24, 28, 32, 33, 34, 35, 39, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 63, 64, 76, 77, 81, 84, 86, 87, 95, 96, 100, 102, 103, 104, 106, 107, 108, 109, 110, 113, 114, 115, 117, 119, 124], "sever": [3, 7, 8, 10, 13, 14, 23, 39, 40, 41, 46, 57, 58, 59, 60, 63, 73, 75, 76, 77, 96, 103, 109, 117, 120, 123], "testproj": [16, 23], "regress": [16, 20, 23], "fail": [3, 6, 8, 16, 23, 29, 60, 65, 73, 79, 84, 96, 101, 103, 115, 121, 124], "mai": [1, 3, 6, 9, 10, 14, 16, 17, 18, 19, 23, 24, 26, 36, 37, 38, 39, 40, 41, 52, 58, 59, 60, 62, 63, 64, 66, 68, 69, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 87, 90, 94, 95, 96, 101, 102, 103, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 120, 121, 123, 124], "debug": [3, 16, 23, 24, 29, 30, 71, 87, 91, 104, 111, 124], "failur": [16, 23], "store": [0, 1, 3, 6, 7, 16, 19, 28, 31, 39, 58, 60, 92, 94, 100, 115, 117, 123], "200": [96, 97], "000": [], "repo": [10, 86], "rest": [56, 58, 59, 60, 81, 90, 96, 108, 117], "api": [3, 37, 39, 40, 53, 54, 58, 60, 61, 62, 65, 73, 75, 78, 79, 90, 91, 103, 106], "constantli": [], "grow": [], "evolv": 18, "make": [0, 1, 6, 9, 18, 28, 30, 35, 36, 37, 38, 39, 40, 41, 44, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 92, 94, 95, 97, 98, 102, 106, 109, 110, 113, 115, 116, 117, 119, 120, 124], "sure": [28, 36, 37, 38, 39, 40, 41, 65, 66, 68, 75, 79, 81, 113, 115, 117], "most": [3, 6, 10, 15, 18, 19, 20, 30, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 73, 75, 76, 77, 80, 81, 85, 86, 92, 95, 96, 103, 106, 108, 113, 114, 115, 116, 117, 121], "interest": [6, 23, 35, 39, 40, 41, 59, 60, 69, 70, 73, 76, 77, 79, 81, 84, 90, 96, 106, 108, 112, 113, 114, 115], "codebas": [3, 5, 6, 10, 13, 16, 20, 23, 27, 28, 36, 49, 50, 51, 52, 53, 54, 55, 71, 83, 86, 88, 89, 111, 112, 119, 121, 124], "ha": [1, 6, 8, 9, 10, 12, 14, 16, 17, 18, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 119, 124], "owner": 1, "endpoint": 112, "gh": [], "return": [8, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 94, 95, 96, 97, 102, 103, 104, 105, 106, 110, 113, 114, 115, 116, 117, 119, 121, 124], "repres": [3, 7, 10, 14, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 92, 96, 98, 103, 106, 107, 109, 110, 112, 113, 119, 123, 124], "last": [7, 9, 23, 57, 58, 60, 63, 64, 83, 84, 85, 103, 107, 114, 123], "updat": [0, 1, 5, 16, 18, 24, 26, 29, 30, 39, 40, 41, 44, 60, 62, 64, 93, 94, 106], "respons": [40, 60, 74, 121], "empti": [6, 14, 16, 31, 32, 42, 43, 45, 48, 57, 60, 62, 75, 96, 97, 101, 103, 106, 113, 115, 117], "confirm": [10, 28], "h": [83, 90, 96], "accept": [6, 7, 9, 12, 15, 29, 30, 64, 103], "applic": [19, 23, 39, 58, 60, 81, 90, 92, 96, 103, 121], "written": [0, 1, 3, 6, 16, 17, 20, 27, 30, 44, 46, 62, 74, 78, 81, 84, 86, 96, 103, 108, 112, 115, 120, 123, 124], "appli": [7, 9, 15, 36, 37, 38, 39, 40, 57, 66, 76, 80, 84, 93, 94, 96, 103, 105, 106, 108, 110, 112, 114, 117, 119, 121], "selector": 58, "templat": [6, 25, 34, 56, 60, 64, 65, 84, 90, 94, 112], "panel": 30, "quickli": [3, 10], "expand": [25, 26, 66, 68, 87], "desir": [79, 84, 92, 96, 121], "In": [0, 5, 6, 7, 8, 9, 10, 15, 16, 23, 28, 30, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 59, 60, 63, 64, 66, 67, 68, 70, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 92, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 120, 121, 123, 124], "palett": [23, 25, 26, 31], "autogener": [], "label": [10, 23, 32, 33, 34, 53, 56, 58, 60, 84, 91, 103, 104, 117, 120], "where": [0, 1, 3, 5, 6, 7, 8, 10, 12, 13, 16, 17, 18, 19, 28, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 92, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 124], "A": [0, 1, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 23, 25, 26, 28, 32, 33, 35, 39, 40, 41, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 73, 75, 79, 81, 83, 84, 85, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 113, 114, 115, 117, 120, 121, 123], "finish": [16, 25, 117], "lot": [23, 64, 70, 75, 94, 113, 114, 115], "access": [0, 1, 6, 10, 23, 24, 36, 37, 38, 39, 40, 41, 57, 58, 59, 61, 63, 64, 66, 67, 73, 76, 79, 81, 84, 85, 90, 94, 96, 100, 101, 106, 108, 112, 114, 117, 119, 123, 124], "workspac": [6, 23, 24, 26, 29, 30, 31], "against": [3, 6, 16, 42, 43, 44, 45, 46, 47, 48, 66, 71, 86, 90, 95], "report": [3, 4, 6, 8, 14, 16, 23, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 64, 65, 77, 94, 102, 116], "bottom": [6, 23, 30, 42, 43, 44, 45, 46, 47, 48, 95, 124], "corner": [23, 30], "readi": [6, 12, 19, 23, 28, 79, 117], "thei": [0, 1, 3, 4, 6, 7, 9, 10, 14, 16, 17, 18, 20, 23, 32, 35, 36, 37, 39, 40, 42, 43, 45, 46, 47, 48, 57, 58, 59, 60, 61, 62, 64, 65, 66, 71, 73, 75, 76, 78, 79, 84, 85, 87, 94, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 121, 123], "re": [0, 1, 6, 13, 16, 23, 28, 29, 42, 43, 44, 45, 47, 48, 50, 51, 53, 55, 57, 58, 59, 60, 62, 63, 64, 76, 79, 80, 85, 90, 96, 107], "problem": [6, 7, 8, 13, 14, 16, 17, 19, 23, 25, 27, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 52, 58, 59, 60, 65, 73, 77, 79, 81, 85, 86, 94, 105, 108, 109, 111, 112, 113, 115, 116, 118, 120, 123, 124], "notif": [23, 30], "addit": [3, 6, 7, 9, 23, 24, 30, 36, 37, 38, 40, 57, 58, 59, 60, 61, 63, 80, 81, 84, 90, 91, 96, 99, 101, 102, 103, 106, 108, 109, 110, 112, 116, 120, 121, 123], "fix": [16, 23, 26, 39, 57, 73, 79, 82, 86, 95, 103, 105, 120, 121, 123], "troubleshoot": [19, 23, 27, 28, 29, 91, 108, 111], "easili": [17, 23, 27, 35, 39, 66, 73, 81, 84, 95, 110, 115], "everi": [9, 14, 15, 23, 41, 42, 43, 44, 45, 46, 47, 48, 57, 59, 60, 66, 75, 79, 81, 84, 85, 86, 96, 97, 103, 106, 110, 113, 117, 119, 124], "explor": [6, 23, 27, 28, 29, 35, 36, 37, 38, 39, 40, 49, 54, 59, 65, 67, 68, 69, 81, 91, 108, 109, 112, 115, 124], "tab": [6, 10, 23, 24, 29, 69, 85, 103], "without": [0, 1, 6, 7, 9, 10, 23, 28, 30, 31, 35, 39, 53, 57, 58, 59, 60, 61, 63, 66, 74, 78, 80, 81, 85, 87, 92, 93, 94, 95, 96, 97, 101, 103, 106, 107, 113, 115, 117, 119, 121, 124], "edit": [5, 23, 27, 59], "histori": [23, 30], "exact": [23, 40, 87, 103, 106, 108, 120], "produc": [3, 8, 14, 16, 19, 23, 29, 41, 46, 57, 60, 62, 68, 71, 86, 87, 95, 96, 103, 106, 111, 115, 121], "happi": 23, "should": [0, 1, 5, 6, 8, 9, 10, 13, 14, 16, 17, 19, 23, 28, 29, 30, 36, 38, 39, 40, 41, 44, 57, 58, 60, 64, 73, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 93, 94, 96, 97, 102, 103, 106, 109, 110, 112, 113, 114, 115, 121, 123, 124], "later": [3, 6, 7, 23, 60, 70, 82, 94, 96, 103, 104, 106, 117, 124], "wrong": [8, 23, 68, 73, 79, 105], "instead": [6, 14, 23, 24, 28, 31, 39, 40, 44, 46, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 73, 75, 76, 77, 78, 80, 81, 84, 85, 93, 94, 95, 96, 97, 102, 103, 104, 106, 110, 113, 114, 117], "whole": [0, 1, 6, 23, 59, 60, 61, 64, 67, 104, 106, 124], "claus": [16, 23, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 58, 60, 62, 63, 64, 67, 68, 73, 76, 84, 85, 97, 100, 102, 106, 107, 110, 113, 117, 119], "predic": [13, 23, 24, 29, 36, 37, 38, 39, 40, 41, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 79, 81, 84, 85, 91, 92, 94, 95, 98, 100, 101, 107, 109, 110, 113, 114, 115, 117, 119, 122], "evalu": [8, 23, 29, 32, 39, 46, 58, 60, 62, 71, 79, 81, 83, 91, 92, 94, 98, 102, 104, 105, 106, 107, 109, 115, 117, 124], "snippet": [10, 14, 16, 23, 57, 58, 59, 76, 79, 80, 100, 106, 121], "possibl": [1, 8, 23, 35, 36, 39, 58, 60, 65, 76, 82, 84, 86, 92, 95, 96, 97, 101, 102, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 124], "entiti": [23, 32, 41, 52, 57, 60, 61, 63, 85, 92, 93, 94, 98, 99, 101, 106, 121, 124], "class": [3, 16, 23, 26, 36, 38, 39, 41, 49, 50, 51, 52, 53, 54, 55, 58, 65, 66, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 109, 110, 112, 113, 115, 119, 121, 122, 124], "formula": [23, 91, 94, 96, 98, 102, 104, 107, 108, 112, 117, 119], "express": [3, 7, 9, 10, 23, 26, 28, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 59, 64, 65, 66, 70, 71, 76, 79, 81, 82, 83, 84, 85, 86, 90, 91, 92, 94, 95, 97, 98, 101, 102, 104, 106, 107, 108, 109, 110, 113, 114, 117, 119, 124], "free": [23, 46, 60, 73, 97, 98, 103, 114], "variabl": [3, 6, 23, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 58, 63, 65, 67, 68, 69, 70, 71, 78, 79, 81, 84, 85, 91, 92, 94, 95, 97, 98, 102, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119], "could": [3, 6, 23, 26, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 73, 74, 77, 79, 81, 82, 84, 85, 86, 93, 94, 95, 97, 100, 101, 102, 104, 105, 106, 107, 110, 113, 114, 115, 116, 117], "foo": [23, 32, 56, 63, 73, 74, 76, 94, 96, 106, 124], "string": [3, 7, 9, 14, 16, 23, 24, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 57, 58, 59, 60, 62, 63, 69, 70, 73, 75, 78, 79, 81, 82, 84, 85, 87, 90, 94, 95, 96, 97, 98, 101, 102, 106, 107, 108, 109, 110, 112, 113, 116, 117, 119, 121, 124], "dropdown": [23, 25, 30], "date": [10, 18, 20, 23, 28, 60, 63, 96, 101, 106, 119], "long": [23, 29, 56, 57, 59, 76, 94, 96, 101, 115, 117, 121, 124], "took": 23, "renam": 10, "correspond": [3, 6, 9, 10, 14, 16, 23, 26, 28, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 73, 80, 101, 103, 109, 112, 115, 116, 117, 121], "doubl": [23, 33, 56, 57, 59, 61, 62, 103], "itself": [9, 16, 23, 37, 40, 41, 58, 60, 63, 65, 66, 76, 77, 81, 84, 85, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 113, 114], "particular": [0, 1, 9, 10, 20, 23, 30, 39, 41, 58, 59, 60, 62, 71, 74, 76, 77, 79, 81, 85, 86, 87, 92, 94, 95, 96, 101, 103, 105, 106, 110, 113, 121], "differ": [3, 6, 7, 10, 12, 13, 14, 16, 18, 19, 23, 24, 25, 29, 32, 35, 39, 40, 58, 59, 60, 62, 63, 67, 71, 73, 75, 76, 81, 84, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 119, 123], "been": [0, 3, 6, 7, 8, 18, 23, 36, 39, 58, 63, 66, 68, 74, 75, 77, 79, 80, 84, 90, 96, 103, 106, 110, 113], "sinc": [16, 23, 35, 39, 56, 57, 58, 59, 60, 67, 73, 75, 76, 79, 81, 85, 94, 95, 96, 97, 101, 102, 103, 105, 106, 107, 109, 110, 115, 116, 117, 121], "ran": [8, 23, 59, 60, 61, 67], "delet": [16, 24, 30, 34, 40, 56, 60, 61, 62, 67, 117], "its": [0, 1, 7, 8, 9, 10, 19, 23, 28, 37, 38, 39, 41, 50, 52, 57, 58, 59, 60, 61, 63, 67, 68, 69, 71, 73, 74, 79, 80, 81, 82, 84, 85, 86, 87, 92, 94, 95, 96, 97, 100, 101, 102, 103, 106, 107, 109, 110, 112, 114, 117, 120, 121, 124], "csv": [3, 15, 23, 121], "dil": 23, "determin": [7, 8, 23, 24, 35, 36, 49, 53, 58, 59, 60, 63, 71, 73, 76, 79, 81, 82, 83, 95, 96, 103, 104, 109, 111, 114, 120], "what": [0, 1, 9, 16, 18, 19, 23, 28, 31, 32, 35, 37, 40, 42, 43, 44, 45, 46, 47, 48, 57, 58, 60, 65, 66, 69, 79, 80, 81, 83, 84, 85, 94, 95, 96, 101, 103, 107, 113, 114, 115, 116, 117, 120, 123, 124], "form": [3, 9, 23, 34, 39, 42, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 70, 73, 77, 78, 82, 85, 86, 96, 97, 100, 101, 103, 104, 105, 106, 108, 112, 113, 116, 117, 119], "them": [1, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 20, 23, 24, 26, 28, 31, 32, 33, 34, 35, 36, 39, 41, 44, 54, 58, 60, 63, 66, 67, 70, 74, 75, 77, 81, 82, 85, 90, 92, 94, 95, 96, 97, 103, 104, 106, 107, 108, 110, 112, 114, 115, 116, 117, 119, 120, 121, 124], "alert": [3, 6, 10, 13, 16, 19, 23, 25, 42, 43, 44, 45, 46, 47, 48, 60, 67, 87, 108, 112, 116, 120, 123], "tabl": [3, 16, 19, 23, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 56, 63, 86, 92, 94, 95, 96, 97, 102, 103, 117, 124], "raw": [23, 41, 58, 59, 60, 79, 87, 123], "sort": [23, 32, 35, 58, 62, 70, 95, 103, 115], "column": [3, 14, 16, 23, 40, 42, 43, 44, 45, 46, 47, 48, 57, 58, 60, 85, 87, 102, 104, 108, 112, 115, 116, 121], "header": [23, 60, 65, 77, 123], "navig": [6, 23, 25, 26, 41, 52, 57, 59, 60, 73, 91], "featur": [1, 10, 14, 23, 31, 60, 90, 92, 113, 117, 122], "activ": [23, 26], "take": [7, 23, 26, 29, 31, 42, 43, 44, 45, 46, 47, 48, 57, 58, 59, 60, 61, 63, 64, 67, 76, 80, 82, 84, 94, 96, 97, 102, 103, 106, 107, 109, 110, 112, 113, 117, 119, 122], "few": [8, 13, 23, 26, 40, 42, 43, 44, 45, 46, 47, 48, 57, 58, 60, 61, 84, 92, 96, 102, 105, 110, 111, 124], "second": [12, 23, 26, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 61, 64, 67, 73, 75, 81, 84, 85, 95, 96, 97, 102, 103, 105, 107, 110, 112, 113, 114, 121, 122], "same": [0, 1, 3, 7, 9, 10, 14, 15, 16, 17, 19, 23, 31, 39, 40, 49, 57, 58, 59, 60, 63, 65, 67, 69, 71, 73, 77, 79, 81, 84, 85, 86, 93, 96, 97, 100, 101, 102, 103, 106, 109, 112, 113, 114, 115, 116, 117, 123], "fast": [23, 109], "older": [0, 1, 10, 18, 23, 28, 103, 117], "try": [1, 6, 23, 33, 34, 35, 41, 56, 57, 60, 61, 65, 67, 70, 79, 81, 84, 94, 105, 108, 110, 113, 114, 115, 119, 121, 124], "unzip": [6, 10, 18, 23], "cleanup": 23, "Then": [0, 13, 16, 23, 28, 36, 37, 38, 41, 58, 68, 81, 85, 86, 96, 102, 103, 105, 110, 113], "affect": [23, 28, 30, 94, 107, 115, 124], "exactli": [9, 16, 23, 35, 58, 60, 62, 63, 66, 74, 79, 94, 96, 97, 103, 117, 119], "must": [0, 1, 3, 5, 6, 7, 9, 10, 12, 13, 16, 17, 18, 19, 23, 35, 37, 39, 40, 42, 43, 44, 45, 47, 57, 58, 61, 62, 78, 80, 84, 92, 94, 95, 96, 97, 98, 100, 102, 103, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 123], "pick": [23, 39, 78, 103, 113, 121, 124], "data": [3, 6, 10, 19, 23, 27, 29, 35, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 78, 79, 86, 87, 90, 91, 92, 94, 103, 105, 106, 107, 108, 111, 112, 114, 117, 123, 124], "come": [24, 37, 40, 58, 60, 62, 66, 73, 81, 84, 96, 113, 115], "number": [1, 3, 5, 6, 9, 10, 12, 15, 16, 24, 25, 33, 34, 35, 39, 40, 49, 57, 59, 60, 61, 62, 63, 67, 70, 75, 79, 81, 84, 85, 86, 91, 92, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 110, 113, 115, 117, 119, 120, 121, 123], "These": [0, 1, 3, 6, 7, 9, 10, 12, 13, 14, 24, 28, 30, 32, 35, 37, 38, 40, 41, 44, 46, 57, 58, 59, 60, 61, 63, 70, 77, 87, 95, 96, 97, 99, 101, 102, 103, 106, 107, 109, 110, 112, 113, 117, 120], "behav": [16, 20, 24, 37, 40, 63, 103, 109], "previou": [9, 10, 24, 25, 41, 57, 67, 68, 73, 84, 92, 103, 110, 113, 117, 119], "automat": [3, 6, 10, 24, 28, 29, 30, 40, 60, 78, 82, 86, 94, 95, 101, 103], "altern": [3, 10, 16, 23, 25, 40, 42, 43, 44, 45, 46, 47, 48, 63, 69, 79, 84, 93, 94, 98, 101, 103], "json": [6, 9, 14, 39, 65, 78, 81, 90], "select": [3, 7, 10, 13, 14, 16, 23, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 85, 93, 94, 95, 96, 97, 100, 102, 105, 106, 107, 111, 113, 115, 117, 119, 121, 123, 124], "prefer": [10, 12, 28, 60, 84, 96, 121, 124], "alreadi": [5, 6, 16, 18, 24, 28, 58, 67, 84, 92, 94, 96, 103, 105, 110, 113, 114, 116], "might": [6, 8, 13, 24, 28, 30, 39, 40, 58, 59, 60, 66, 67, 69, 70, 71, 73, 75, 76, 81, 82, 84, 85, 94, 95, 96, 97, 105, 107, 109, 110, 114, 115, 124], "case": [3, 8, 10, 14, 16, 17, 19, 24, 28, 32, 33, 34, 36, 37, 40, 42, 43, 44, 45, 47, 48, 49, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 79, 81, 82, 84, 85, 91, 94, 95, 96, 97, 102, 103, 105, 106, 107, 110, 113, 114, 115, 116, 117, 121, 124], "otherwis": [3, 5, 6, 7, 10, 14, 16, 24, 28, 31, 34, 39, 58, 60, 62, 67, 81, 94, 95, 96, 97, 103], "manag": [0, 3, 5, 6, 12, 19, 24, 28, 30, 31, 85, 92, 100, 106], "overrid": [0, 6, 15, 16, 24, 30, 36, 37, 38, 39, 40, 57, 58, 60, 65, 74, 75, 79, 81, 96, 97, 103, 110, 115], "behavior": [4, 6, 8, 9, 13, 14, 20, 24, 30, 60, 76, 94, 96, 97, 103, 109], "control": [5, 10, 24, 36, 38, 39, 40, 49, 54, 57, 63, 74, 81, 84, 86, 91, 94, 108, 109, 111, 116], "By": [5, 6, 10, 14, 17, 24, 30, 39, 60, 71, 74, 77, 84, 121], "q": [24, 60, 94, 96, 103], "d": [24, 39, 56, 60, 63, 67, 79, 96, 97, 103], "r": [24, 41, 60, 80, 103], "t": [3, 6, 7, 8, 10, 16, 17, 19, 24, 26, 28, 36, 37, 38, 41, 44, 56, 57, 58, 60, 61, 62, 63, 65, 73, 79, 81, 84, 85, 86, 87, 90, 94, 95, 97, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 124], "statu": [4, 8, 24], "retain": 7, "live": [10, 60, 110, 114, 117], "ttl": [], "indefinit": 60, "valu": [0, 3, 6, 7, 9, 14, 15, 16, 32, 36, 37, 38, 39, 40, 41, 44, 46, 49, 53, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 76, 77, 78, 80, 81, 83, 84, 91, 92, 94, 95, 96, 97, 98, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 117, 119, 120, 121, 123, 124], "0": [0, 1, 3, 5, 9, 10, 12, 14, 16, 19, 28, 31, 32, 35, 36, 37, 38, 39, 40, 42, 45, 47, 56, 57, 58, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 76, 79, 81, 83, 84, 85, 90, 94, 95, 96, 97, 99, 103, 104, 106, 107, 113, 120, 121, 124], "too": [24, 29, 30, 39, 40, 58, 59, 69, 73, 77, 79, 81, 84, 95, 96, 104, 110, 113, 114, 115, 117, 121, 124], "slowli": 24, "frequent": [7, 15, 20, 24, 39, 59, 71, 93], "increas": [24, 92], "memori": [8, 24, 35, 36, 37, 38, 39, 40, 92, 107], "examin": [6, 24, 29, 51, 58, 64, 69, 70, 74, 81], "perform": [3, 7, 10, 18, 24, 28, 36, 37, 38, 39, 40, 42, 43, 45, 47, 48, 58, 59, 60, 62, 77, 82, 84, 86, 87, 88, 89, 90, 91, 94, 95, 106, 111, 115, 117], "tupl": [24, 29, 61, 62, 63, 92, 94, 95, 96, 102, 104], "count": [24, 29, 56, 57, 60, 67, 70, 81, 85, 92, 96, 103, 113, 117, 119], "shown": [3, 24, 29, 58, 81, 102, 123], "log": [6, 8, 23, 24, 27, 28, 29, 39, 87, 90, 103, 119], "becaus": [8, 16, 24, 29, 35, 39, 40, 42, 43, 44, 45, 47, 48, 57, 58, 59, 60, 62, 66, 68, 69, 77, 79, 85, 94, 96, 97, 102, 106, 109, 110, 115], "indic": [9, 24, 29, 39, 42, 43, 44, 45, 46, 47, 48, 52, 58, 60, 64, 68, 74, 81, 84, 85, 86, 94, 96, 97, 103, 107, 108, 110, 120], "size": [24, 29, 59, 71, 82, 83, 85, 96, 124], "comput": [24, 28, 29, 36, 39, 49, 58, 59, 60, 71, 79, 84, 85, 92, 94, 95, 96, 103, 107, 109, 111, 112, 115, 119, 124], "perman": 24, "after": [3, 6, 7, 10, 24, 28, 30, 39, 42, 43, 44, 45, 46, 47, 48, 58, 60, 63, 68, 74, 81, 83, 85, 86, 95, 96, 103, 110, 113, 117], "investig": [24, 25, 40, 114], "requir": [0, 1, 3, 6, 9, 10, 18, 19, 28, 31, 35, 36, 37, 38, 39, 40, 41, 44, 48, 57, 58, 60, 63, 67, 73, 76, 78, 79, 80, 81, 84, 85, 86, 90, 95, 96, 97, 108, 112, 113, 116, 120], "call": [0, 1, 3, 7, 9, 10, 13, 19, 26, 28, 35, 36, 37, 38, 39, 40, 44, 52, 54, 57, 61, 64, 65, 66, 67, 68, 71, 74, 76, 77, 78, 79, 81, 82, 83, 86, 91, 92, 94, 95, 101, 102, 104, 105, 106, 107, 109, 110, 112, 113, 115, 121, 124], "represent": [3, 20, 39, 58, 60, 62, 68, 73, 74, 85, 86, 87, 103, 106], "window": [6, 10, 15, 23, 25, 28, 39, 56, 78], "top": [0, 1, 16, 19, 29, 39, 42, 43, 44, 45, 46, 47, 48, 59, 61, 63, 64, 65, 66, 69, 73, 101, 110, 120, 123], "org": [0, 1, 60, 61, 90], "variantanalysi": [], "repositorylist": [], "my": [1, 7, 16, 28, 121, 124], "favorit": [], "facebook": [], "react": [63, 90], "babel": [], "angular": [60, 90], "apach": [6, 23, 41, 59, 79, 90], "hadoop": [59, 85], "kind": [7, 14, 19, 25, 32, 34, 39, 41, 58, 59, 60, 61, 63, 65, 66, 67, 68, 73, 76, 79, 81, 84, 85, 93, 94, 96, 97, 98, 99, 101, 104, 106, 108, 109, 110, 112, 114, 116, 120, 124], "variantanalysissystemdefinedlist": [], "listnam": [], "top_10": [], "disabl": [6, 14, 24, 115, 123], "regularli": [15, 28], "brows": [42, 43, 45, 46, 47, 48, 112], "abstract": [14, 27, 39, 40, 51, 52, 53, 56, 57, 60, 63, 65, 69, 71, 74, 75, 76, 86, 91, 92, 102, 103, 109, 113], "tree": [7, 9, 27, 39, 51, 52, 53, 57, 58, 60, 62, 65, 69, 71, 73, 76, 77, 86, 91, 103, 109, 114], "caus": [3, 36, 49, 60, 66, 77, 81, 85, 103, 109, 110, 112], "reload": [], "root": [0, 1, 3, 5, 6, 7, 9, 10, 12, 13, 14, 16, 19, 31, 57, 60, 61, 62, 63, 65, 81, 103, 110, 119], "reset": [], "we": [6, 10, 14, 16, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 79, 81, 84, 85, 92, 94, 96, 97, 103, 104, 106, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 123, 124], "recommend": [6, 7, 10, 16, 28, 41, 63, 94, 108, 111, 115, 120, 123], "thread": [3, 15, 16, 24], "Of": [24, 60, 67, 76, 81, 113], "pass": [1, 6, 7, 14, 15, 16, 24, 29, 35, 36, 37, 38, 39, 40, 44, 47, 58, 60, 61, 62, 65, 67, 74, 77, 81, 84, 106, 109], "argument": [3, 6, 7, 9, 12, 14, 16, 24, 36, 37, 38, 39, 40, 44, 57, 58, 60, 62, 63, 65, 66, 69, 71, 74, 79, 80, 81, 82, 84, 94, 95, 96, 97, 102, 103, 105, 106, 107, 109, 110, 113, 114, 119, 121], "track": [25, 27, 49, 50, 51, 52, 53, 54, 60, 62, 74, 80, 81, 91, 94, 108, 112, 113, 117], "program": [9, 25, 26, 27, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 70, 71, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 91, 94, 96, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 119, 124], "area": [25, 27, 59], "potenti": [3, 17, 25, 27, 36, 44, 49, 52, 53, 60, 61, 62, 69, 70, 76, 78, 79, 81, 82, 85, 86, 91, 109, 111, 115, 118, 123, 124], "cross": [25, 57, 91, 122], "script": [0, 1, 6, 10, 25, 60], "java": [1, 6, 8, 9, 10, 16, 23, 25, 28, 31, 39, 70, 72, 73, 75, 85, 86, 91, 96, 103, 106, 107, 108, 109, 112, 115, 116, 119, 120, 121, 124], "look": [0, 7, 10, 16, 25, 28, 41, 52, 57, 58, 60, 61, 64, 69, 70, 73, 76, 77, 79, 81, 84, 85, 92, 94, 97, 100, 101, 103, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 119], "model": [25, 36, 37, 38, 39, 40, 51, 53, 57, 58, 60, 62, 63, 65, 76, 78, 79, 80, 81, 86, 91, 92, 106, 109, 112], "precis": [5, 7, 25, 36, 37, 38, 39, 40, 53, 58, 59, 60, 77, 79, 84, 91, 96, 101, 103, 105, 106, 109, 110, 114, 120, 121, 123], "framework": [0, 1, 16, 25, 37, 57, 74, 75, 89, 91, 108, 112], "correct": [3, 7, 10, 25, 36, 37, 38, 39, 40, 66, 85, 101, 108, 111, 120], "instruct": [0, 1, 7, 10, 25, 28, 41, 56, 113], "topic": [14, 16, 18, 19, 25, 39, 53, 56, 57, 58, 66, 69, 77, 84, 92, 102, 108, 112, 116, 117, 123, 124], "sink": [25, 36, 37, 38, 39, 58, 60, 62, 65, 81, 82, 84, 87, 90, 108, 109], "extend": [20, 25, 33, 34, 36, 38, 39, 40, 41, 57, 59, 60, 62, 63, 64, 65, 68, 73, 74, 75, 76, 79, 80, 81, 84, 85, 90, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 109, 110, 112, 113, 115, 116, 119, 121, 124], "usual": [1, 7, 8, 13, 14, 16, 25, 26, 36, 38, 58, 60, 61, 64, 67, 70, 76, 81, 84, 87, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 109], "under": [9, 10, 12, 14, 15, 23, 25, 28, 56, 58, 63, 94, 100, 103, 105, 106, 110], "describ": [14, 25, 37, 38, 39, 40, 41, 53, 58, 59, 60, 61, 63, 65, 66, 77, 78, 79, 80, 81, 85, 87, 92, 94, 96, 97, 98, 99, 101, 102, 103, 104, 106, 108, 112, 113, 115, 116, 117, 120, 123], "individu": [3, 7, 25, 39, 60, 66, 79, 81, 84, 92], "step": [6, 10, 16, 25, 36, 37, 38, 40, 41, 58, 60, 65, 71, 81, 84, 86, 92, 95, 96, 98, 101, 103, 109, 112, 113, 115, 117], "jump": [25, 26, 60, 69], "keyboard": [25, 69], "bind": [25, 84, 85, 86, 103, 106, 107], "shortcut": [25, 64], "down": [42, 43, 44, 45, 46, 47, 48, 56, 73, 77, 117, 124], "left": [57, 58, 60, 61, 64, 67, 68, 76, 81, 83, 85, 103, 113], "viewer": [3, 26, 27, 42, 43, 44, 45, 46, 47, 48, 62, 121], "ast": [26, 27, 32, 33, 34, 39, 58, 59, 60, 61, 62, 63, 85, 109], "syntact": [26, 32, 33, 34, 35, 39, 49, 54, 58, 62, 63, 67, 70, 71, 75, 84, 85, 86, 92, 103, 109], "node": [6, 26, 32, 33, 34, 36, 37, 38, 40, 59, 61, 62, 63, 71, 73, 74, 80, 81, 82, 84, 85, 90, 94, 96, 106, 107, 109, 112, 115], "encod": [26, 40, 58, 60, 61, 79, 81, 87, 103, 113], "relationship": [10, 26, 39, 57, 58, 60, 92, 103, 106, 114], "consist": [0, 3, 5, 16, 26, 57, 60, 70, 78, 86, 96, 97, 100, 103, 106, 107, 108, 112, 123], "graph": [3, 26, 35, 39, 40, 41, 52, 54, 61, 62, 63, 81, 86, 91, 94, 96, 108, 112], "part": [3, 7, 10, 13, 16, 26, 28, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 76, 77, 81, 83, 94, 97, 103, 104, 105, 106, 116, 117, 119, 120, 124], "printast": 26, "don": [3, 6, 7, 8, 10, 16, 17, 19, 26, 28, 41, 44, 57, 60, 79, 81, 85, 86, 94, 97, 106, 113, 114, 116, 117, 121, 124], "won": [16, 26, 84, 96, 106, 107, 113], "main": [1, 7, 10, 18, 26, 28, 42, 43, 44, 45, 46, 47, 48, 57, 59, 64, 75, 80, 81, 83, 85, 96, 100, 106, 112, 113, 124], "upgrad": [0, 1, 3, 6, 10, 20, 26, 30, 87, 91], "cach": [0, 5, 6, 26, 29, 31, 67, 71, 103], "next": [16, 25, 26, 40, 41, 56, 60, 62, 64, 71, 79, 80, 96, 103, 110, 114, 115, 116, 117], "slower": 26, "nest": [9, 26, 57, 58, 59, 60, 61, 65, 68, 76, 84, 90, 103, 105, 123], "arrow": [26, 60, 96, 113], "convers": [26, 39, 49, 58, 59, 60, 65, 82, 91, 103, 116], "section": [0, 6, 10, 12, 23, 26, 31, 32, 33, 34, 37, 38, 39, 40, 57, 58, 59, 60, 63, 80, 81, 84, 94, 96, 97, 103, 106, 108, 109, 112, 120], "rich": [27, 85], "support": [0, 1, 3, 4, 6, 7, 9, 10, 14, 16, 27, 28, 39, 46, 59, 60, 63, 67, 72, 73, 75, 86, 89, 91, 92, 94, 96, 98, 103, 105, 106, 108, 119, 120, 121, 123], "allow": [0, 3, 6, 7, 12, 27, 35, 39, 40, 41, 52, 57, 58, 59, 60, 63, 67, 71, 74, 75, 76, 79, 81, 85, 87, 92, 94, 96, 97, 102, 103, 104, 105, 107, 110, 117, 119, 121, 124], "group": [9, 14, 20, 59, 60, 61, 94, 96, 97, 98, 100, 103, 106, 108, 110, 120, 121, 123], "unit": [16, 27, 29, 30, 59, 73, 75, 85, 103], "type": [0, 5, 9, 14, 19, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 62, 64, 67, 70, 73, 74, 76, 78, 86, 87, 91, 94, 95, 96, 98, 100, 101, 102, 105, 107, 108, 110, 112, 113, 117, 119, 120, 123], "dedic": [], "telemetri": [27, 91], "beta": [0, 3, 5, 12, 19, 31, 55, 66, 78, 90], "releas": [0, 1, 3, 5, 6, 10, 12, 14, 19, 28, 31, 87, 94, 96, 103, 106], "subject": [0, 3, 5, 12, 19, 31, 59, 60, 78, 106, 107], "minimum": [14, 28, 96, 103, 107, 119], "8": [56, 76, 85, 87, 90, 96, 117], "feedback": [], "commun": [2, 86, 90], "discuss": [58, 59, 60, 81, 102, 108, 116], "http": [0, 3, 5, 7, 12, 19, 28, 31, 40, 63, 65, 74, 84, 90, 121], "io": [37, 38, 73, 84, 90], "mrva": [], "1000": [], "leav": [5, 16, 58, 96, 106, 114, 115], "function": [0, 3, 5, 7, 12, 19, 31, 32, 36, 37, 38, 39, 40, 49, 54, 56, 57, 61, 62, 64, 65, 66, 71, 74, 76, 77, 84, 91, 92, 94, 96, 102, 103, 106, 109, 117, 119, 124], "contrast": [104, 110, 112], "latest": [3, 5, 10, 12, 89, 90], "branch": [10, 16, 18, 28, 42, 43, 45, 47, 48, 58, 59, 60, 61, 62, 103, 106, 124], "thousand": 6, "either": [6, 9, 14, 28, 34, 35, 39, 58, 59, 60, 61, 62, 66, 67, 68, 71, 73, 75, 76, 79, 85, 96, 103, 106, 108, 113, 114, 115, 121, 123], "advanc": [28, 30, 84, 87, 92], "action": [0, 1, 3, 5, 6, 12, 19, 28, 31], "entir": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 62, 81, 84, 85, 94, 96, 109, 121], "least": [7, 10, 14, 39, 59, 60, 61, 76, 81, 85, 95, 96, 97, 100, 102, 103, 105, 106, 115, 117], "one": [3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 28, 30, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 76, 78, 79, 80, 81, 84, 85, 86, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 112, 114, 117, 119, 120, 121, 123, 124], "commit": [3, 42, 43, 44, 45, 46, 47, 48, 110, 117], "visibl": [73, 93, 94, 97, 99, 103], "plan": [], "privat": [37, 57, 59, 62, 74, 75, 84, 97, 100, 101, 103, 106], "intern": [8, 40, 63, 103], "minut": 103, "abov": [3, 9, 10, 14, 28, 35, 39, 40, 41, 58, 59, 60, 63, 64, 65, 66, 68, 70, 73, 76, 79, 80, 81, 84, 85, 92, 95, 96, 97, 100, 101, 102, 103, 105, 106, 108, 110, 112, 113, 114, 117, 119, 121, 123, 124], "limit": [6, 8, 16, 57, 60, 108, 112, 115, 117, 119], "charg": [], "bill": [], "first": [0, 7, 9, 12, 14, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 60, 61, 62, 63, 64, 66, 67, 73, 74, 79, 81, 83, 84, 85, 86, 95, 96, 97, 101, 102, 103, 106, 107, 110, 112, 113, 114, 115, 117, 119, 121, 123, 124], "field": [0, 7, 9, 14, 32, 33, 41, 44, 57, 58, 59, 60, 79, 94, 110, 113, 115, 124], "press": [], "enter": [31, 39, 83], "kei": [7, 9, 33, 58, 60, 63, 67, 86, 101, 103, 118, 122], "prompt": [29, 30], "sign": [46, 56, 57, 64, 96, 103], "person": [85, 92, 95, 96, 97, 101, 102, 103, 105, 110, 114, 117], "account": [0, 5, 49, 58, 60, 63, 73, 79, 80, 82, 84, 91, 94], "ask": [0, 1, 9, 35, 40, 84, 92, 110, 117], "permiss": 40, "uri": [14, 37], "10": [10, 61, 67, 83, 90, 94, 95, 96, 97, 101, 102, 103, 106, 110, 117, 119, 120], "100": [57, 85, 96, 103, 119], "row": [71, 86, 102, 123, 124], "start": [0, 2, 3, 6, 8, 9, 18, 20, 28, 39, 40, 41, 57, 58, 60, 61, 64, 65, 66, 67, 70, 76, 77, 79, 81, 84, 85, 91, 93, 95, 96, 100, 102, 103, 105, 106, 107, 108, 110, 112, 113, 114, 115, 119, 121], "post": [58, 112], "trigger": [3, 106], "dynam": [40, 57, 60, 67, 70], "spin": [], "multipl": [6, 7, 9, 12, 14, 40, 58, 60, 63, 64, 65, 67, 81, 86, 94, 96, 97, 100, 102, 103, 109, 113, 114, 116, 117, 121, 124], "parallel": 8, "job": [], "optim": [6, 87, 92, 94, 95, 124], "As": [6, 18, 39, 40, 41, 46, 58, 59, 60, 61, 64, 67, 70, 73, 76, 77, 78, 79, 80, 81, 84, 93, 96, 97, 101, 102, 103, 107, 109, 113, 114, 115, 117], "cancel": [8, 29], "reason": [35, 39, 57, 58, 60, 64, 67, 75, 77, 84, 94, 96, 109], "stop": [6, 29, 39, 81, 103, 110, 115], "soon": [], "monitor": [6, 86], "schedul": 94, "initi": [6, 7, 10, 28, 33, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 60, 63, 75, 81, 84, 85, 86, 103, 105, 113, 115, 124], "found": [3, 7, 16, 42, 43, 44, 45, 46, 47, 48, 58, 60, 76, 79, 84, 92, 103, 108, 110, 112, 114, 117, 119], "still": [39, 40, 60, 69, 70, 76, 81, 84, 94, 96, 103, 106, 109, 113, 114, 115, 116, 117], "black": 117, "circl": [], "green": [42, 43, 44, 45, 46, 47, 48, 63], "checkmark": [], "star": [58, 67], "further": [9, 10, 96, 97, 107, 108, 123], "collabor": [], "secret": [], "gist": [], "markdown": [3, 17, 20, 123], "alwai": [1, 7, 14, 39, 41, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 63, 64, 65, 66, 71, 78, 79, 84, 94, 95, 96, 97, 101, 103, 106, 107, 110, 113, 117], "best": [63, 94, 103, 112, 115, 124], "within": [0, 1, 7, 8, 10, 16, 17, 31, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 58, 59, 60, 61, 62, 63, 71, 84, 85, 87, 94, 100, 101, 103, 106, 109, 110, 115, 121], "context": [14, 32, 39, 58, 63, 67, 86, 92, 94, 102, 103, 107, 121, 124], "continu": [10, 28, 29, 32, 33, 34, 56, 57, 58, 60, 61, 67, 81, 84, 103, 110], "had": [42, 43, 44, 45, 46, 47, 48, 59, 96, 103, 106, 114], "clipboard": [], "app": [], "insert": [41, 73, 76, 79, 85, 96, 116], "via": [19, 36, 40, 57, 61, 67, 75, 80, 90, 106, 112, 113], "rail": [], "per": [10, 15, 20, 28, 35, 40, 60, 80, 96], "choos": [3, 8, 28, 31, 42, 43, 44, 45, 46, 47, 48, 60, 103, 113, 115], "pop": [70, 99, 119], "appear": [7, 9, 14, 33, 41, 46, 56, 58, 59, 60, 67, 71, 94, 96, 103, 105, 106, 107, 115], "choic": [69, 96, 103], "box": [10, 42, 43, 44, 45, 46, 47, 48, 79], "some": [3, 6, 8, 9, 10, 14, 18, 28, 34, 35, 37, 38, 39, 40, 41, 52, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 79, 81, 84, 85, 86, 92, 94, 95, 96, 97, 101, 103, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124], "were": [0, 1, 8, 14, 16, 59, 60, 67, 79, 81, 84, 85, 101, 103, 110, 112, 124], "deni": [], "licens": [0, 10, 12, 28], "notic": [10, 28, 40, 60, 64, 68, 73, 75, 76, 79, 84, 85, 92, 110, 117, 119], "agre": [10, 28, 117], "condit": [7, 10, 28, 35, 42, 43, 44, 45, 46, 47, 48, 49, 56, 57, 60, 61, 62, 66, 67, 68, 71, 76, 77, 81, 83, 92, 96, 97, 108, 113, 117], "basi": [10, 28, 59], "restrict": [10, 28, 36, 37, 38, 40, 41, 57, 59, 60, 63, 66, 67, 68, 73, 81, 84, 85, 95, 96, 98, 102, 103, 106, 107, 113, 115, 117, 119, 124], "task": [6, 10, 28, 39, 56, 57, 58, 59, 60, 62, 66, 114], "academ": [10, 28, 92], "demonstr": [10, 28, 66, 77, 80, 106, 123], "osi": [10, 28], "approv": [10, 28], "those": [6, 7, 8, 10, 16, 28, 29, 36, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 63, 64, 70, 77, 80, 94, 96, 97, 98, 101, 103, 105, 106, 107, 109, 110, 111, 117, 119, 121], "mean": [0, 6, 8, 10, 28, 37, 41, 46, 57, 58, 59, 60, 61, 62, 67, 68, 76, 78, 79, 81, 84, 85, 94, 96, 97, 101, 102, 103, 105, 106, 107, 109, 110, 115, 119, 120, 124], "host": [10, 28, 103], "maintain": [10, 14, 28, 30, 108, 111, 120], "autom": [10, 16, 28, 86, 89], "deliveri": [10, 28], "normal": [6, 8, 10, 28, 35, 37, 39, 40, 58, 60, 62, 86, 116, 121], "engin": [2, 10, 28, 86, 89], "forth": [10, 28, 113], "herein": [10, 28], "contact": [10, 28, 94], "sale": [10, 28, 96], "team": [10, 28], "39": 28, "method": [6, 28, 37, 38, 39, 40, 44, 52, 54, 57, 58, 59, 60, 62, 63, 65, 67, 71, 73, 74, 77, 79, 80, 106, 121, 124], "marketplac": 28, "browser": [10, 28, 46, 65, 90], "shift": [28, 60, 103], "x": [5, 6, 12, 28, 32, 33, 34, 37, 38, 39, 40, 46, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 71, 74, 75, 81, 83, 85, 90, 94, 95, 96, 97, 102, 103, 104, 107, 109, 119], "search": [0, 1, 3, 7, 10, 15, 16, 28, 42, 43, 44, 45, 46, 47, 48, 66, 103, 112, 114, 120], "vsix": 28, "ellipsi": [32, 42, 43, 44, 45, 46, 47, 48, 67], "termin": [8, 10, 28, 31, 60, 76, 103], "intend": [1, 13, 14, 28, 41, 60, 84, 85, 102, 112, 115, 117], "avoid": [6, 10, 28, 41, 59, 60, 94, 95, 96, 100, 106, 110, 113, 115, 121], "point": [6, 10, 28, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 57, 58, 60, 61, 63, 64, 66, 75, 80, 81, 84, 86, 95, 96, 103, 105, 106, 109, 111, 112, 113, 115, 124], "That": [0, 1, 16, 28, 36, 37, 38, 39, 40, 58, 60, 62, 64, 79, 84, 86, 93, 94, 96, 101, 102, 103, 104, 107, 110, 113, 123, 124], "linux": [10, 15, 28, 90], "mac": 28, "ex": [6, 28, 61], "difficulti": [28, 81], "wide": [3, 28, 56, 57, 75, 92], "varieti": [28, 58, 87, 103], "git": [10, 28, 87], "keep": [10, 16, 28, 60, 113], "third": [3, 6, 9, 16, 28, 37, 39, 73, 103, 107, 112, 116, 121, 123], "home": [9, 10, 15, 28, 31, 60, 85, 110, 114, 117], "give": [0, 1, 6, 7, 28, 35, 36, 37, 38, 40, 58, 63, 68, 71, 75, 80, 81, 85, 86, 93, 94, 95, 101, 103, 104, 105, 106, 108, 112, 116, 117, 119, 120], "It": [0, 1, 6, 8, 15, 16, 17, 18, 19, 23, 28, 35, 36, 37, 39, 40, 41, 58, 59, 60, 63, 64, 66, 68, 69, 73, 74, 75, 78, 79, 81, 84, 85, 86, 87, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 114, 115, 120, 121, 123, 124], "submodul": 28, "seri": [16, 28, 60, 86], "clone": [10, 28], "vscode": 28, "recurs": [3, 7, 16, 28, 36, 37, 38, 40, 60, 77, 84, 91, 92, 95, 97, 98, 103, 106, 113, 114, 119, 122], "init": [5, 6, 28, 31, 58, 60], "remot": [6, 28, 37, 38, 40, 53, 80, 91], "checkout": [5, 6, 16, 18, 28], "rememb": [73, 81, 101, 110, 114, 117], "period": [0, 1, 9], "remain": [62, 66, 95, 102, 103, 114, 117], "newer": [3, 10, 41, 94, 103], "hold": [28, 36, 37, 38, 39, 40, 58, 60, 62, 63, 65, 76, 81, 82, 83, 92, 93, 94, 96, 97, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 124], "tell": [0, 1, 3, 7, 10, 13, 17, 19, 28, 64, 81, 94, 96, 111, 120, 123], "cpp": [1, 3, 6, 7, 9, 10, 14, 28, 36, 42, 56, 64, 66, 68, 69, 71, 77, 82, 83, 90, 108], "c": [1, 3, 6, 10, 28, 34, 35, 39, 41, 59, 60, 62, 63, 66, 72, 73, 77, 91, 96, 97, 101, 103, 106, 108, 109, 110, 112, 115, 117, 119, 123, 124], "librarypathdepend": [1, 13, 16, 28, 101, 103], "why": [28, 35, 73, 97, 108, 116, 120], "expect": [3, 6, 16, 20, 29, 39, 59, 64, 80, 87, 111, 113, 115], "compar": [16, 29, 46, 58, 61, 67, 68, 76, 97, 106, 117], "actual": [16, 29, 41, 44, 58, 60, 63, 64, 68, 69, 73, 75, 79, 81, 84, 86, 96, 103, 114, 115, 117], "plai": [29, 81], "import": [0, 1, 3, 4, 6, 7, 10, 16, 19, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 81, 84, 85, 86, 92, 93, 94, 95, 96, 101, 102, 104, 106, 111, 112, 115, 116, 117, 119, 120, 121, 124], "calcul": [3, 29, 62, 93, 96, 108, 109, 110, 120], "clear": [6, 29, 85, 101, 116], "equival": [29, 36, 38, 61, 67, 71, 84, 94, 96, 97, 103, 105, 106, 114, 117], "encount": [30, 60, 81], "invok": [6, 9, 30, 39, 41, 58, 60, 62, 63, 64, 65, 75, 79, 85, 86, 90], "being": [3, 6, 9, 14, 15, 30, 40, 57, 58, 60, 62, 63, 65, 66, 70, 71, 73, 74, 75, 76, 77, 79, 81, 84, 85, 94, 95, 96, 103, 106, 110, 112, 115], "extern": [6, 30, 39, 51, 53, 54, 57, 74, 75, 78, 80, 95, 100, 102, 103, 116, 121], "necessari": [18, 30, 60, 74, 80, 94, 97, 113], "restart": [30, 115], "regener": 30, "incorrect": [30, 49, 66, 68], "total": [30, 60, 85, 96, 103], "place": [6, 7, 10, 14, 39, 40, 54, 57, 60, 69, 80, 84, 94, 98, 103, 115, 117], "banner": [], "One": [8, 42, 43, 45, 47, 48, 63, 66, 103, 106, 108, 113, 117, 124], "both": [6, 7, 10, 15, 18, 35, 36, 39, 40, 41, 48, 57, 58, 59, 60, 61, 63, 64, 66, 67, 71, 73, 76, 77, 79, 80, 81, 85, 93, 95, 96, 97, 102, 103, 106, 108, 109, 110, 115, 121, 123], "kotlin": [], "design": [0, 3, 5, 6, 14, 16, 20, 68, 86, 103, 105, 112, 121], "fulli": [60, 73, 85, 103, 106, 113], "mode": [46, 80], "dataflow": [36, 37, 38, 39, 40, 58, 60, 62, 74, 81, 82, 84, 94, 112, 115], "publicli": [], "starter": [91, 114, 122], "haven": 16, "while": [10, 33, 34, 39, 46, 56, 57, 58, 60, 61, 62, 67, 71, 75, 76, 81, 85, 94, 95, 96, 102, 103, 104, 105, 110, 115, 116, 124], "gather": [110, 117], "side": [46, 52, 58, 60, 63, 64, 65, 66, 68, 76, 81, 85, 95, 103, 106, 113], "pane": [], "typic": [0, 1, 7, 13, 35, 36, 37, 38, 39, 40, 41, 57, 58, 62, 63, 70, 75, 77, 81, 84, 87, 92, 94, 95, 97, 108, 109, 112, 115, 119, 121, 123], "approach": [66, 78, 84, 113, 114, 115], "coverag": [], "associ": [14, 16, 18, 40, 53, 58, 60, 61, 63, 68, 73, 78, 81, 85, 103, 108, 112], "percentag": 120, "hyphen": [0, 1], "yaml": [7, 9, 90], "sofa": [], "jraft": [], "jmh": [], "20": [61, 83, 90], "rocksdbjni": [], "7": [3, 17, 67, 90, 96, 103, 107, 113, 117, 119], "organ": [0, 1, 4, 5, 10, 12, 14, 16, 19, 32, 58, 60, 61, 62, 92, 95, 98, 100], "than": [1, 3, 6, 7, 10, 15, 18, 35, 36, 37, 38, 39, 40, 59, 60, 61, 64, 67, 68, 70, 71, 74, 76, 80, 81, 83, 85, 92, 93, 96, 97, 102, 103, 105, 106, 109, 115, 116, 117, 119, 124], "screen": [], "alipai": [], "rhea": [], "separ": [1, 3, 6, 7, 15, 16, 28, 60, 64, 67, 71, 78, 81, 94, 96, 101, 102, 103, 106, 110, 113, 117, 121, 123, 124], "toggl": 85, "runningqueri": [], "useextensionpack": [], "none": [59, 60, 65, 67, 76, 97, 102, 103, 114, 123], "introduc": [39, 41, 58, 59, 61, 62, 63, 73, 74, 76, 77, 81, 85, 93, 96, 97, 101, 102, 103, 106, 109, 110, 113, 114, 117, 118, 119, 122], "bug": [3, 8, 23, 60, 76, 85, 86, 108], "ci": [3, 6, 10, 71], "bundl": [0, 3, 5, 12, 19, 31, 63], "expertis": [], "anyth": [18, 32, 57, 60, 63, 66, 68, 79, 84, 101, 103], "explicitli": [5, 6, 7, 8, 13, 14, 40, 41, 60, 63, 73, 75, 80, 90, 94, 103, 104, 105, 106, 112, 113], "three": [35, 37, 40, 42, 43, 44, 45, 46, 47, 48, 58, 59, 60, 61, 66, 73, 79, 81, 85, 86, 95, 96, 99, 101, 102, 103, 106, 112, 121], "transit": [0, 5, 39, 63, 64, 68, 76, 77, 79, 97, 103, 113, 114, 124], "pre": [6, 10, 123], "effici": [0, 5, 49, 50, 51, 52, 53, 54, 55, 72, 86, 92, 94, 109, 110, 117, 121], "relev": [6, 10, 15, 40, 62, 63, 67, 82, 86, 92, 94, 108], "recogn": [36, 39, 49, 63, 71, 74, 75, 80, 82, 95, 96], "themselv": [0, 5, 10, 41, 59, 60, 61, 62, 63, 96, 97, 103], "benefit": [58, 92, 100, 104, 106], "resolv": [0, 1, 7, 8, 9, 10, 31, 39, 60, 63, 64, 68, 73, 75, 77, 79, 86, 93, 94, 97, 98, 101, 103, 114], "just": [10, 13, 57, 58, 60, 61, 63, 64, 65, 67, 68, 73, 76, 80, 81, 84, 85, 92, 93, 96, 97, 103, 106, 107, 110, 113, 114, 117, 124], "someon": [12, 31, 96, 114], "els": [12, 31, 32, 33, 34, 42, 43, 45, 47, 48, 56, 57, 58, 59, 60, 61, 62, 66, 67, 73, 83, 96, 102, 103, 117], "full": [0, 1, 3, 6, 7, 10, 16, 17, 18, 31, 39, 41, 57, 58, 59, 60, 63, 66, 67, 76, 77, 79, 86, 103, 106, 108, 123], "understand": [31, 57, 58, 59, 67, 84, 85, 90, 92, 96, 101, 106, 107, 109, 110, 116], "better": [31, 35, 69, 106, 115, 117], "present": [9, 14, 31, 32, 33, 34, 56, 57, 58, 59, 60, 61, 62, 96, 103, 109], "subclass": [32, 33, 34, 35, 39, 40, 56, 58, 59, 60, 61, 62, 63, 67, 73, 76, 78, 79, 81, 94, 106, 113], "stmt": [16, 32, 33, 34, 35, 47, 56, 57, 58, 59, 60, 61, 62, 67, 68, 86, 124], "superclass": [32, 33, 34, 58, 59, 60, 61, 63, 66, 75, 76], "remark": [32, 33, 34, 56], "emptystmt": [16, 32, 33, 34, 56, 57, 62], "expr": [32, 33, 34, 36, 37, 38, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 76, 81, 82, 85, 86, 103, 106, 124], "exprstmt": [32, 33, 34, 46, 56, 57, 58, 60, 68], "blockstmt": [32, 33, 34, 42, 43, 56, 57, 58, 60], "ifstmt": [16, 32, 33, 34, 42, 43, 45, 47, 48, 56, 57, 58, 59, 60, 68, 71, 106], "forstmt": [32, 33, 34, 56, 57, 58, 60, 68], "loopstmt": [32, 33, 34, 57, 58, 60, 76], "rang": [0, 1, 3, 5, 12, 14, 32, 39, 46, 49, 58, 62, 74, 76, 81, 91, 95, 102, 106, 107, 121], "rangestmt": [32, 58], "switch": [32, 33, 34, 56, 57, 58, 60, 116], "caseclaus": [32, 58], "expressionswitchstmt": [32, 58], "switchstmt": [32, 33, 34, 56, 57, 58, 60, 68], "typeswitchstmt": [32, 58], "simpleassignstmt": [32, 58], "commclaus": [32, 58], "selectstmt": [32, 58], "returnstmt": [32, 33, 34, 44, 56, 57, 58, 59, 60, 62], "break": [14, 32, 33, 34, 35, 56, 57, 58, 60, 61, 62, 67, 96, 103, 117], "breakstmt": [32, 33, 34, 56, 57, 58, 60, 62], "branchstmt": [32, 58], "continuestmt": [32, 33, 34, 56, 57, 58, 60], "goto": [32, 56, 57, 58], "labelnam": [32, 58], "gotostmt": [32, 56, 57, 58], "fallthrough": [32, 58], "fallthroughstmt": [32, 58], "occur": [8, 14, 32, 33, 34, 41, 42, 43, 45, 46, 47, 48, 57, 60, 63, 76, 87, 96, 103, 106, 107, 113, 124], "final": [6, 8, 32, 33, 34, 35, 39, 41, 58, 59, 60, 75, 76, 77, 79, 81, 86, 92, 95, 96, 103, 106, 107, 108, 112, 114, 115, 119, 121, 124], "child": [32, 33, 34, 57, 58, 59, 60, 62, 76, 92, 96, 101, 110, 114, 123], "labeledstmt": [32, 33, 34, 57], "var": [32, 34, 37, 39, 56, 60, 61, 66, 67, 74, 81, 84, 97, 117], "variablenam": [32, 58], "typenam": [32, 56, 58, 63, 93, 106], "declstmt": [32, 34, 56, 58, 60], "const": [32, 34, 39, 56, 57, 60, 66], "typeexpr": [32, 34, 58, 63], "assignstmt": [32, 58, 61, 67], "assign": [9, 32, 39, 46, 49, 57, 60, 61, 62, 63, 65, 66, 67, 71, 77, 81, 84, 92, 96, 97, 107, 121], "definestmt": [32, 58], "addassignstmt": 32, "compoundassignstmt": [32, 58], "subassignstmt": 32, "mulassignstmt": 32, "quoassignstmt": 32, "remassignstmt": 32, "andassignstmt": 32, "orassignstmt": 32, "xorassignstmt": 32, "shlassignstmt": 32, "shrassignstmt": 32, "andnotassignstmt": 32, "incstmt": [32, 58], "incdecstmt": 32, "decstmt": [32, 58], "callexpr": [32, 34, 58, 60], "gostmt": [32, 58], "defer": [32, 58], "deferstmt": [32, 58], "sendstmt": [32, 58], "recvstmt": [32, 58], "recvexpr": 32, "unpars": 32, "badstmt": 32, "23": [32, 33, 34, 75, 96, 103], "intlit": [32, 58], "basiclit": [32, 58], "floatlit": [32, 58], "7i": 32, "imaglit": [32, 58], "charlit": 32, "hello": [32, 33, 34, 79, 85, 96, 102, 103, 107, 117, 119], "stringlit": [32, 58], "func": [32, 44, 56], "y": [32, 37, 38, 40, 56, 58, 59, 60, 61, 63, 67, 71, 85, 94, 95, 96, 102, 103, 104, 107, 109, 119], "int": [32, 33, 36, 56, 57, 59, 60, 61, 64, 66, 68, 71, 75, 76, 77, 79, 85, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 110, 113, 115, 116, 117, 119, 121, 124], "funclit": [32, 58], "funcdef": [32, 58], "map": [0, 1, 7, 9, 12, 32, 35, 36, 37, 38, 39, 40, 58, 59, 60, 63, 78, 79, 84, 87, 96, 101, 103, 121], "b": [32, 35, 41, 56, 57, 61, 62, 63, 67, 73, 79, 81, 96, 97, 103, 106, 112, 119, 123], "maplit": 32, "compositelit": [32, 58], "point3d": 32, "structlit": 32, "unaryexpr": [32, 33, 34, 58, 60, 61, 67], "plusexpr": [32, 33, 34, 60], "arithmeticunaryexpr": 32, "minusexpr": [32, 33], "notexpr": [32, 56, 62], "logicalunaryexpr": 32, "complementexpr": [32, 56, 62], "bitwiseunaryexpr": 32, "addressexpr": 32, "binaryexpr": [32, 33, 34, 58, 60, 61, 67, 85], "mulexpr": [32, 33, 34, 56, 57, 60, 62, 85], "arithmeticbinaryexpr": 32, "quoexpr": 32, "remexpr": [32, 33, 56, 57], "addexpr": [32, 33, 34, 56, 57, 60, 62, 63, 66, 68, 85], "subexpr": [32, 33, 34, 56, 57, 60, 62], "shlexpr": 32, "shiftexpr": [32, 60], "shrexpr": 32, "landexpr": 32, "logicalbinaryexpr": 32, "lorexpr": 32, "lssexpr": 32, "relationalcomparisonexpr": [32, 58], "gtrexpr": 32, "leqexpr": 32, "geqexpr": 32, "eqlexpr": 32, "equalitytestexpr": [32, 58], "neqexpr": [32, 34, 58, 60], "andexpr": 32, "bitwisebinaryexpr": 32, "orexpr": 32, "xorexpr": [32, 34, 60], "andnotexpr": 32, "common": [10, 32, 35, 36, 39, 41, 49, 56, 57, 58, 59, 60, 61, 62, 63, 66, 73, 75, 76, 77, 79, 80, 82, 90, 94, 95, 97, 103, 106, 112, 113, 114, 117, 119, 120, 121, 122, 124], "arraytypeexpr": [32, 63], "struct": [32, 56, 57, 58, 64], "structtypeexpr": 32, "functionnam": [32, 58], "functypeexpr": 32, "interfacetypeexpr": [32, 63], "maptypeexpr": 32, "chan": 32, "sendchantypeexpr": 32, "chantypeexpr": 32, "recvchantypeexpr": 32, "sendrecvchantypeexpr": 32, "ident": [0, 1, 14, 17, 32, 40, 49, 57, 58, 60, 71, 103], "simplenam": [32, 58], "qualifiednam": [32, 58], "selectorexpr": [32, 58], "packagenam": [32, 58], "valuenam": [32, 58], "constantnam": [32, 58], "_": [6, 32, 36, 44, 57, 60, 61, 95, 96, 100, 102, 103, 104, 113], "blankid": 32, "parenexpr": [32, 58], "indexexpr": [32, 34, 58, 60], "sliceexpr": [32, 58], "typeassertexpr": [32, 58], "starexpr": [32, 58], "valueexpr": [32, 58], "keyvalueexpr": 32, "conversionexpr": [32, 58], "callorconversionexpr": 32, "badexpr": 32, "explan": [32, 58, 60, 92, 115], "denot": [32, 36, 37, 38, 40, 58, 96, 97, 103, 121], "referenceexpr": [32, 58], "constant": [32, 34, 57, 58, 60, 61, 62, 63, 65, 68, 69, 76, 82, 96, 106, 116, 121], "arrai": [9, 14, 32, 36, 39, 56, 58, 59, 60, 62, 63, 65, 78, 83], "slice": [32, 58, 67], "oppos": [32, 58, 60, 65, 84, 120], "accompani": [17, 55, 108], "comprehens": [55, 61, 67, 98, 103], "tainttrack": [36, 37, 38, 39, 40, 58, 60, 62, 65, 74, 82, 115], "ssa": [39, 58, 65], "methodaccess": [33, 38, 57, 75, 79], "whenexpr": 62, "ll": [6, 10, 41, 76, 79, 80, 84, 116], "howev": [3, 19, 35, 36, 37, 38, 39, 40, 46, 57, 58, 60, 63, 69, 71, 73, 74, 75, 77, 78, 81, 84, 85, 94, 95, 96, 103, 106, 107, 108, 109, 110, 113, 114, 116, 117, 124], "surpris": 69, "jvm": 8, "bytecod": [], "Be": [], "care": [39, 44, 97, 106, 113], "notnullexpr": [], "unexpect": 112, "getqualifi": 57, "varaccess": [33, 34, 60, 63], "somevar": [], "somemethodcal": [], "getunderlyingexpr": [], "goe": [73, 79], "underli": [14, 58, 60, 62, 63, 68, 74, 92, 93, 97, 98, 101, 102, 106, 119], "similar": [3, 16, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 57, 58, 60, 64, 66, 68, 79, 81, 86, 92, 94, 96, 97, 98, 105, 106, 107, 123, 124], "nullabl": [], "nullpointerexcept": [], "inlin": [6, 57, 60, 85, 103], "tostr": [36, 37, 38, 39, 40, 57, 58, 63, 71, 96, 103, 106, 119, 124], "valueof": [], "around": [60, 68, 76, 110, 117], "match": [3, 5, 7, 9, 16, 28, 39, 41, 42, 43, 44, 45, 46, 47, 48, 57, 62, 67, 70, 76, 80, 84, 95, 103, 115, 117], "anoth": [13, 37, 39, 41, 57, 59, 60, 62, 65, 66, 73, 78, 79, 81, 84, 85, 94, 95, 96, 97, 99, 100, 103, 106, 109, 110, 116], "translat": [79, 92, 94, 114, 117], "seen": [59, 64, 84, 103], "issu": [52, 60, 79, 84, 86, 94, 108, 109, 111, 112], "conditionalstmt": [33, 68], "whilestmt": [33, 34, 56, 57, 60, 68], "dostmt": [33, 56, 57, 68], "enhancedforstmt": 33, "switchcas": [33, 56], "trystmt": [33, 34, 56, 57, 60, 68], "throw": [15, 33, 34, 39, 56, 57, 60, 79], "throwstmt": [33, 34, 57, 60], "jumpstmt": [33, 34, 57, 60], "synchron": 33, "synchronizedstmt": 33, "assert": [33, 58, 61, 63, 64, 67, 77], "assertstmt": 33, "typeaccess": [33, 57, 63], "localvariabledeclstmt": [33, 57], "member": [33, 36, 37, 38, 39, 40, 41, 57, 58, 59, 60, 61, 62, 63, 65, 69, 70, 71, 73, 74, 75, 79, 80, 81, 85, 93, 94, 96, 97, 102, 104, 105, 110, 113, 121, 124], "localclassdeclstmt": 33, "thisconstructorinvocationstmt": [33, 75], "super": [33, 41, 59, 60, 62, 75, 79, 106, 121], "superconstructorinvocationstmt": [33, 75], "catch": [33, 34, 56, 57, 60, 91, 114, 122], "catchclaus": [33, 34, 57], "constcas": [33, 57], "defaultcas": [33, 57], "booleanliter": [33, 34, 60, 62], "integerliter": [33, 57, 61, 62, 67], "23l": 33, "longliter": [33, 57], "2f": 33, "floatingpointliter": 33, "doubleliter": [33, 57], "characterliter": [33, 62], "stringliter": [33, 34, 36, 37, 38, 56, 57, 60, 69], "null": [33, 34, 57, 59, 60, 63, 68, 79, 81, 116], "nullliter": [33, 34, 57, 60], "postincexpr": [33, 34, 60], "unaryassignexpr": 33, "postdecexpr": [33, 34, 60], "preincexpr": [33, 34, 60], "predecexpr": [33, 34, 60], "bitnotexpr": [33, 34, 60], "bitwiseexpr": [33, 85], "lognotexpr": [33, 34, 60], "logicexpr": 33, "divexpr": [33, 34, 56, 57, 60, 62], "lshiftexpr": [33, 34, 56, 57, 60, 62], "rshiftexpr": [33, 34, 56, 57, 60, 62], "urshiftexpr": [33, 34, 60], "andlogicalexpr": [33, 85], "orlogicalexpr": [33, 85], "ltexpr": [33, 34, 56, 57, 60, 62, 76], "comparisonexpr": [33, 58, 76], "gtexpr": [33, 34, 56, 57, 60, 62, 76], "leexpr": [33, 34, 56, 57, 60, 62, 76], "geexpr": [33, 34, 56, 57, 60, 62, 76], "eqexpr": [33, 34, 56, 57, 60, 62], "equalitytest": [33, 34, 60], "neexpr": [33, 56, 57, 62], "andbitwiseexpr": 33, "orbitwiseexpr": 33, "xorbitwiseexpr": 33, "assignexpr": [33, 34, 56, 57, 60, 62, 64, 68], "assignaddexpr": [33, 34, 56, 57, 60, 62], "assignop": 33, "assignsubexpr": [33, 34, 56, 57, 60, 62], "assignmulexpr": [33, 34, 56, 57, 60, 62], "assigndivexpr": [33, 34, 56, 57, 60, 62], "assignremexpr": [33, 56, 57], "assignandexpr": [33, 34, 56, 57, 60], "assignorexpr": [33, 34, 56, 57, 60], "assignxorexpr": [33, 34, 56, 57, 60], "assignlshiftexpr": [33, 34, 56, 57, 60, 62], "assignrshiftexpr": [33, 34, 56, 57, 60, 62], "assignurshiftexpr": [33, 34, 60], "thisaccess": [33, 57], "outer": [33, 60, 71, 85, 103], "superaccess": 33, "e": [10, 14, 33, 36, 37, 38, 39, 40, 44, 46, 56, 57, 58, 59, 60, 62, 68, 79, 81, 90, 96, 103, 124], "f": [6, 33, 39, 44, 57, 58, 59, 60, 61, 63, 67, 68, 69, 70, 77, 83, 96, 97, 103, 106, 107, 116, 119, 124], "arrayaccess": [33, 57], "m": [33, 37, 38, 39, 41, 44, 57, 58, 59, 60, 62, 63, 79, 93, 94, 100, 101, 103, 124], "lang": [33, 38, 41, 59, 73, 79, 90], "wildcardtypeaccess": [33, 59], "fieldaccess": [33, 57], "castexpr": [33, 57, 79], "o": [33, 40, 60, 79, 96, 106], "instanceof": [16, 33, 34, 36, 37, 38, 39, 40, 41, 44, 46, 47, 57, 59, 60, 61, 62, 66, 67, 68, 69, 73, 75, 76, 79, 81, 85, 97, 103, 106, 107, 115], "instanceofexpr": [33, 34, 60], "conditionalexpr": [33, 34, 56, 57, 60, 62], "typeliter": 33, "classinstanceexpr": 33, "arraycreationexpr": 33, "42": [33, 34, 46, 60, 75, 96, 102, 103, 106, 119], "arrayinit": 33, "annot": [33, 35, 52, 56, 59, 73, 75, 91, 93, 98, 100, 101, 102, 104, 106], "val": [33, 84], "ecmascript": [34, 39, 60, 90], "breakorcontinuestmt": 34, "controlstmt": [34, 60], "memberdeclar": 34, "classdeclstmt": [34, 60], "classdefinit": [34, 60, 63], "classorinterfac": [34, 63], "typeparameter": [34, 63], "constdeclstmt": [34, 60], "debugg": 34, "debuggerstmt": 34, "declar": [1, 3, 5, 7, 9, 16, 34, 37, 39, 42, 43, 44, 45, 46, 47, 48, 58, 59, 61, 62, 65, 67, 69, 73, 77, 78, 79, 87, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 117, 119, 124], "globalaugmentationdeclar": [34, 63], "modul": [1, 6, 34, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 61, 63, 67, 90, 91, 94, 98, 101, 102, 104, 108, 112, 115], "externalmoduledeclar": [34, 63], "isdefault": 34, "distinguish": [8, 34, 58, 60, 63, 79, 80, 81, 101, 103], "dowhilestmt": [34, 60], "enum": [34, 39, 56, 57, 59, 60, 63, 64], "enumdeclar": [34, 63], "namespacedefinit": [34, 63], "export": [1, 34, 60, 63, 87, 94, 101, 103], "bulkreexportdeclar": 34, "reexportdeclar": 34, "exportdeclar": 34, "exportdefaultdeclar": 34, "functiondeclstmt": [34, 60], "exportspecifi": 34, "exportnameddeclar": 34, "exportassigndeclar": [34, 63], "namespac": [34, 39, 56, 57, 58, 60, 62, 69, 93, 94, 100, 104, 106, 124], "exportasnamespacedeclar": [34, 63], "forinstmt": [34, 60], "enhancedforloop": [34, 60], "forofstmt": [34, 60], "paramet": [34, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 64, 65, 73, 74, 79, 84, 103, 110, 115, 119, 121, 124], "importspecifi": [34, 63], "importdeclar": 34, "importequalsdeclar": [34, 63], "interfacedeclar": [34, 63], "interfacedefinit": 34, "letstmt": [34, 60], "namespacedeclar": [34, 63], "typealiasdeclar": [34, 63], "vardeclstmt": [34, 60], "withstmt": [34, 60], "numberliter": [34, 60], "ab": [34, 96, 103], "regexpliter": [34, 60, 62], "vardecl": [34, 60, 63, 106], "hi": [34, 58, 60, 113, 114], "varref": [34, 60], "l": [34, 56, 57, 60, 67, 76, 79, 96, 107], "p": [6, 34, 36, 37, 38, 39, 40, 58, 60, 67, 74, 81, 92, 94, 95, 96, 101, 102, 103, 105, 110, 114, 117, 119, 123], "thisexpr": [34, 56, 60], "arrayexpr": [34, 36, 56, 60], "objectexpr": [34, 60], "functionexpr": [34, 60], "arrowfunctionexpr": [34, 60], "parexpr": [34, 60], "templateliter": [34, 60], "templateel": [34, 60], "interpol": [34, 60, 62], "taggedtemplateexpr": [34, 60], "valueproperti": [34, 60], "propertygett": [34, 60], "propertyaccessor": [34, 60], "propertysett": [34, 60], "propaccess": [34, 60], "dotexpr": [34, 60], "invokeexpr": [34, 60, 63], "methodcallexpr": [34, 60, 63], "newexpr": [34, 56, 60, 66], "negexpr": [34, 60], "typeof": [34, 60, 63], "typeofexpr": [34, 57, 60], "void": [16, 34, 41, 56, 57, 59, 63, 66, 73, 75, 76, 77, 85], "voidexpr": [34, 60], "deleteexpr": [34, 56, 60], "spreadel": [34, 60], "modexpr": [34, 60], "expexpr": [34, 60], "logandexpr": [34, 60], "logorexpr": [34, 60], "comparison": [34, 46, 52, 57, 58, 59, 60, 61, 62, 83, 91], "stricteqexpr": [34, 60], "strictneqexpr": [34, 60], "bitandexpr": [34, 60], "bitorexpr": [34, 60], "inexpr": [34, 60], "compoundassignexpr": [34, 60], "assignexpexpr": [34, 60], "assignmodexpr": [34, 60], "updateexpr": [34, 60], "seqexpr": [34, 60], "await": [34, 60], "awaitexpr": [34, 57, 60], "yield": [34, 40, 41, 57, 58, 60, 61, 62, 67, 79, 81, 103, 106], "yieldexpr": [34, 60], "descript": [0, 3, 7, 8, 9, 10, 12, 14, 17, 39, 58, 60, 61, 62, 93, 103, 114, 116, 117, 119, 120, 123], "convent": 121, "placehold": [14, 107, 108, 112, 116], "arbitrari": [39, 60, 71, 113], "cname": [], "fname": [], "semicolon": [102, 103], "newlin": [9, 60, 113], "enclos": [7, 57, 58, 60, 62, 65, 67, 68, 71, 96, 97, 100, 101, 102, 103, 106, 115, 120], "suffix": 103, "respect": [39, 58, 59, 60, 61, 62, 79, 84, 85, 93, 96, 102, 103, 107, 112, 121], "alia": [60, 62, 63, 94, 98, 101, 103], "aliasstmt": 62, "begin": [3, 6, 39, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 65, 68, 73, 76, 85, 96, 100, 102, 103, 121], "stmtsequenc": 62, "beginblock": 62, "beginexpr": 62, "returningstmt": 62, "endblock": 62, "nextstmt": 62, "redo": 62, "redostmt": 62, "retri": 62, "retrystmt": 62, "undef": [56, 62], "undefstmt": 62, "elementrefer": 62, "methodcal": [37, 57, 62], "methodnam": 62, "lhsexpr": [], "settermethodcal": 62, "supercal": 62, "yieldcal": 62, "blockargu": 62, "forwardedargu": [], "constantaccess": [], "constantreadaccess": [], "constantassign": [], "constantwriteaccess": [], "controlexpr": 62, "elsif": 62, "ifexpr": [48, 62], "whileexpr": 62, "conditionalloop": 62, "until": [16, 62, 103, 105, 109, 124], "untilexpr": 62, "forexpr": 62, "loop": [35, 36, 57, 58, 60, 62, 76, 82, 113], "whilemodifierexpr": 62, "untilmodifierexpr": 62, "ifmodifierexpr": 62, "unless": [7, 14, 60, 62, 85, 94, 95, 103], "unlessmodifierexpr": 62, "ternaryifexpr": 62, "caseexpr": 62, "unaryoper": [57, 62], "unarybitwiseoper": [57, 62], "definedexpr": 62, "hashsplatexpr": 62, "splatexpr": 62, "unaryminusexpr": [56, 57, 62], "unaryarithmeticoper": 57, "unaryplusexpr": [56, 57, 62], "binaryoper": [57, 62], "binaryarithmeticoper": [57, 62], "assignarithmeticoper": [57, 62], "assignbitwiseandexpr": 62, "assignbitwiseoper": [57, 62], "assignbitwiseorexpr": 62, "assignbitwisexorexpr": 62, "assignexponentexpr": 62, "assignlogicalandexpr": 62, "binarylogicaloper": [57, 62], "assignlogicalorexpr": 62, "assignmoduloexpr": 62, "bitwiseandexpr": [56, 57, 62], "binarybitwiseoper": [57, 62], "bitwiseorexpr": [56, 57, 62], "bitwisexorexpr": [56, 57, 62], "caseeqexpr": 62, "equalityoper": [57, 62], "exponentexpr": 62, "relationaloper": [36, 57, 62], "logicalandexpr": [56, 57, 62], "logicalorexpr": [56, 57, 62], "moduloexpr": 62, "noregexpmatchexpr": 62, "regexpmatchexpr": 62, "spaceshipexpr": 62, "arrayliter": 62, "__encoding__": [], "encodingliter": [], "__file__": [], "fileliter": [], "123": [96, 103], "456": [96, 103], "hashliter": 62, "world": [41, 79, 96, 102, 117, 119], "heredoc": [], "stringlikeliter": [], "numericliter": 62, "floatliter": [57, 61, 62, 67], "2i": [], "complexliter": 62, "3r": [], "rationalliter": 62, "__line__": [], "lineliter": [], "nil": [58, 62], "nilliter": 62, "rangeliter": 62, "z": [9, 58, 60, 71, 85, 103, 119], "subshellliter": 62, "bin": [10, 61], "sh": [6, 10, 90], "symbolliter": 62, "bodystmt": 62, "classdeclar": 62, "moduledeclar": 62, "singletonclass": 62, "modulebas": [], "braceblock": 62, "block": [5, 7, 16, 39, 42, 43, 45, 54, 57, 60, 62, 63, 68, 81, 83], "doblock": 62, "lambda": [61, 62, 67], "def": [60, 63, 103], "methodbas": [], "self": [62, 67, 124], "singletonmethod": 62, "blockparamet": 62, "namedparamet": 62, "destructuredparamet": [], "forwardparamet": [], "hashsplatnilparamet": [], "keyword": [60, 62, 63, 93, 96, 97, 98, 99, 100, 102, 104, 106, 110], "hashsplatparamet": 62, "keywordparamet": 62, "optionalparamet": 62, "simpleparamet": [60, 62], "splatparamet": 62, "casepattern": [], "alternativepattern": [], "arraypattern": 60, "aspattern": [], "findpattern": [], "hashpattern": [], "parenthesizedpattern": [], "referencepattern": [], "argumentlist": [], "hand": [41, 58, 60, 63, 65, 73, 78, 79, 81, 84, 94, 96, 97, 103, 106, 107, 109, 114, 117], "rescueclaus": 62, "destructuredlhsexpr": [], "variou": [3, 10, 36, 39, 58, 60, 61, 62, 63, 79, 81, 92, 100, 103, 106, 109, 111, 112, 115, 117], "pair": [62, 64, 84, 87, 97, 101, 103, 116], "Such": [9, 39, 59, 60, 79, 94, 103, 113, 123], "hash": [49, 62, 91], "parenthesizedexpr": 62, "rescu": 62, "rescuemodifierexpr": 62, "sequenc": [1, 6, 7, 9, 19, 58, 60, 61, 78, 92, 95, 96, 103, 108, 120], "stringconcaten": 62, "implicit": [57, 58, 60, 62, 64, 68, 106, 124], "concaten": [9, 39, 60, 62, 65, 96, 103, 113], "consecut": [60, 61, 103], "variableaccess": [57, 62, 64, 66, 68], "classvariablereadaccess": 62, "variablereadaccess": 62, "classvariableaccess": 62, "str": [81, 102], "classvariablewriteaccess": 62, "variablewriteaccess": 62, "globalvariablereadaccess": [], "globalvariableaccess": 62, "globalvariablewriteaccess": [], "instancevariablereadaccess": 62, "instancevariableaccess": 62, "instancevariablewriteaccess": 62, "localvariablereadaccess": 62, "localvariableaccess": [57, 62], "localvariablewriteaccess": 62, "selfvariablereadaccess": [], "selfvariableaccess": [], "certain": [3, 40, 41, 66, 81, 83, 94, 95, 96, 97, 105, 112, 117, 121], "shorthand": 97, "verbos": [42, 43, 45, 48, 79, 96], "easier": [36, 37, 38, 39, 40, 58, 67, 81, 84, 86, 97, 110, 114, 120], "programm": [41, 46, 70, 85, 103], "great": 114, "lead": [46, 76, 97, 103, 105, 106, 107, 113, 114, 124], "notat": [78, 97, 105, 114], "effect": [44, 46, 49, 50, 51, 52, 53, 54, 55, 60, 66, 72, 74, 75, 109, 124], "rewrit": [18, 73, 76, 94, 96, 105, 115], "construct": [37, 38, 56, 57, 58, 60, 63, 84, 86, 92, 100, 103, 106, 109, 121], "simpler": [94, 96, 105, 117], "suppos": [35, 60, 84, 93, 94, 101, 105], "attribut": [40, 60, 61, 67, 103, 123], "__synth_0": [], "word": [19, 41, 47, 57, 58, 60, 69, 74, 94, 96, 97, 102, 107, 113, 119, 120], "implement": [35, 37, 38, 39, 40, 41, 53, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 73, 76, 79, 81, 84, 92, 103, 106, 109, 112, 113, 123, 124], "synthes": 62, "astnod": [35, 39, 58, 60, 61, 63, 81], "instanc": [37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 75, 79, 80, 83, 85, 86, 92, 109, 124], "origin": [14, 39, 40, 57, 58, 60, 81, 93, 96, 103, 105, 106, 110, 116], "awar": [81, 94], "cannot": [0, 1, 6, 9, 10, 18, 39, 58, 60, 73, 79, 81, 96, 100, 101, 103], "issynthes": 62, "getdesugar": 62, "here": [1, 6, 10, 14, 15, 37, 38, 39, 41, 57, 58, 59, 60, 62, 65, 66, 67, 68, 73, 74, 75, 79, 81, 84, 85, 92, 94, 95, 96, 97, 100, 102, 103, 105, 106, 113, 114, 115, 116, 117, 119, 120, 121], "12": [10, 90, 103], "onward": [1, 3, 16, 17], "13": 96, "modular": 92, "migrat": [], "pointer": [12, 44, 57, 58, 68, 81, 109], "flaw": [], "consid": [8, 14, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 60, 61, 63, 64, 66, 68, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 92, 94, 96, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 114, 117, 124], "almost": 67, "situat": [81, 103, 105, 106, 113, 114], "instanti": [59, 60, 75, 79, 92], "handl": [14, 17, 40, 42, 43, 45, 48, 56, 58, 60, 67, 73, 81, 84, 120, 121], "everyth": [66, 101, 113], "happen": [8, 9, 39, 57, 60, 79, 80, 81, 96, 103, 113], "whose": [39, 57, 58, 59, 60, 61, 63, 65, 70, 75, 103, 105], "transfer": [], "done": [6, 9, 58, 60, 66, 71, 81, 102, 103, 106, 115], "isadditionalflowstep": [36, 37, 38, 39, 40, 60, 81], "decid": [8, 66, 106, 114, 117], "similarli": [7, 58, 59, 60, 67, 73, 74, 75, 81, 87, 97, 105, 107, 109], "allowimplicitread": [], "user_input": [], "figur": [57, 85], "ever": [60, 113], "reach": [35, 39, 58, 60, 76, 83, 103, 113, 115], "semml": [14, 36, 37, 38, 40, 60, 66, 71, 74, 80, 82, 83, 112], "pathgraph": [65, 81, 112], "config": [15, 36, 37, 38, 40, 112, 115], "configsig": [], "issourc": [36, 37, 38, 39, 40, 58, 60, 65, 81, 94, 112, 115], "gettarget": [36, 37, 57, 58, 60, 61, 66, 69, 71, 74, 77, 82], "hasnam": [36, 37, 38, 57, 59, 62, 73, 75, 76, 79, 94, 96], "issink": [36, 37, 38, 39, 40, 58, 60, 65, 81, 112, 115], "getanargu": [62, 74], "pathnod": [65, 81, 112, 115], "flowpath": [], "getnod": [58, 60, 61, 65, 112, 115], "thing": [79, 80, 94], "fill_structur": [], "pu": [], "process_structur": [], "get_and_process": [], "malloc": [36, 66], "sizeof": [36, 56], "simpl": [3, 7, 10, 16, 19, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 66, 70, 73, 75, 77, 79, 84, 86, 92, 94, 101, 102, 108, 109, 111, 112, 116, 122, 124], "sometim": [39, 46, 57, 60, 78, 81, 84, 85, 94, 102, 105, 123, 124], "isn": [36, 37, 38, 60, 101, 105, 109, 117], "miss": [3, 48, 57, 60, 62, 86, 96, 115], "neg": [61, 81, 96, 103, 107], "outgo": [58, 65], "write_user_input_to": [], "asdefiningargu": [], "getargu": [36, 37, 38, 39, 57, 58, 60, 62, 65, 66, 69, 71, 79, 82, 84], "use_valu": [], "unsign": [56, 57, 64], "process_user_data": [], "get_and_process_user_input_v2": [], "along": [1, 10, 14, 16, 17, 58, 63, 84, 86, 103, 115, 117, 118, 120, 122, 124], "proce": [79, 96], "observ": 6, "gap": [], "n1": [], "n2": [], "fa": [40, 69], "isadditionalflow": [], "real": [13, 41, 76], "doesn": [8, 44, 57, 62, 73, 84, 94, 95, 96, 97, 105, 106, 107, 110, 111, 113, 115, 116, 117], "much": [40, 57, 58, 66, 81, 106, 114, 116, 117, 124], "spuriou": [39, 60, 84, 106], "derefer": 58, "thu": [14, 73, 80], "slightli": [6, 10, 39, 41, 60, 74, 79, 84, 100, 101, 103, 105, 115], "becom": [18, 60, 68, 76, 79, 84, 95, 110, 117], "longer": [39, 42, 43, 44, 45, 46, 47, 48, 97, 105, 110, 117], "sens": [39, 41, 42, 43, 45, 47, 48, 58, 59, 74, 75, 84, 94, 106], "taint": [60, 62, 74, 81, 84, 106, 108], "mix": 65, "And": [64, 113, 114], "implicitli": [39, 60, 64, 75, 81, 96, 97, 100, 103, 106, 121], "opposit": [60, 103, 119], "unknown": [9, 80], "stage": 96, "read_data": [], "size_t": [], "get_input_and_read_data": [], "afterward": [], "n": [41, 56, 58, 59, 60, 62, 63, 66, 67, 95, 96, 103, 107, 113, 115, 116], "contentset": [], "getareadcont": [], "fieldcont": [], "getfield": [60, 121], "satisfi": [5, 92, 96, 102, 103, 106, 110, 117], "assum": [3, 6, 39, 74, 85, 96, 103, 105, 113, 124], "discov": [35, 42, 43, 44, 45, 46, 47, 48, 54, 77, 84], "understood": [35, 121], "wikipedia": [35, 60, 61, 66, 71], "zero": [35, 36, 37, 38, 39, 40, 58, 60, 61, 62, 76, 85, 103, 105, 107, 113, 114], "complex": [35, 59, 60, 61, 67, 85, 86, 92, 94, 97, 106, 114, 117, 119, 122], "might_rais": 35, "cond": [35, 47, 61, 67], "close_resourc": 35, "rais": [35, 61, 67, 103, 119], "simplest": [6, 35, 60, 100], "therefor": [3, 6, 16, 19, 35, 36, 37, 38, 39, 40, 41, 59, 61, 71, 73, 77, 80, 82, 95, 101, 102, 103, 106, 109, 124], "getaflownod": 35, "fewer": [3, 35, 42, 43, 44, 45, 46, 47, 48, 64, 69, 70, 73, 76, 79, 97, 103, 116], "veri": [7, 10, 35, 40, 41, 58, 59, 60, 66, 69, 71, 75, 85, 92, 94, 96, 97, 103, 106, 108, 109, 110, 114, 115, 117, 120, 123, 124], "domin": [35, 62], "faster": [35, 36, 37, 38, 39, 40, 124], "less": [10, 35, 36, 37, 38, 39, 40, 57, 73, 76, 83, 93, 97, 102, 103, 115, 121], "imposs": [35, 105, 114, 115], "b1": 35, "b2": 35, "strictlyreach": 35, "getentrynod": 35, "combin": [9, 35, 39, 63, 95, 96, 97, 103, 113, 116, 117, 124], "aid": [35, 71, 87], "replac": [7, 36, 37, 39, 40, 64, 68, 79, 94, 100, 102, 103, 105, 107, 110, 115, 116], "old": [10, 39, 60, 79, 110, 114], "deprec": [59, 93, 103], "14": [10, 56, 66, 90], "malici": [36, 49, 109, 112], "insecur": [36, 49, 109], "propag": [36, 37, 38, 40, 58, 81, 109, 111], "introduct": [36, 37, 38, 39, 40, 58, 91, 108, 109, 122], "suffici": [16, 36, 37, 38, 39, 40, 57, 109], "divid": [36, 37, 38, 61, 96, 117], "exprnod": [36, 37, 38, 40, 58], "parameternod": [36, 37, 38, 39, 40, 58, 60, 65], "asexpr": [36, 37, 38, 39, 40, 44, 57, 58, 60, 65, 82], "asparamet": [36, 37, 38, 58], "localflowstep": [36, 37, 38, 40, 58], "nodefrom": [36, 37, 38, 40], "nodeto": [36, 37, 38, 40], "immedi": [7, 36, 37, 38, 40, 57, 58, 60, 79, 80, 103, 114], "edg": [36, 37, 38, 39, 40, 49, 58, 60, 91, 109], "oper": [6, 7, 10, 13, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 60, 61, 63, 64, 65, 67, 71, 73, 74, 76, 77, 81, 84, 87, 92, 95, 97, 102, 105, 106, 109, 114, 117, 124], "predefin": [36, 37, 38, 63, 80, 106, 112], "localflow": [36, 37, 38, 40, 58], "achiev": [36, 81, 92, 113, 121], "preserv": [36, 37, 38, 39, 40, 60, 81, 109], "tainted_user_input": 36, "some_big_struct": 36, "localtaintstep": [36, 37, 38, 40], "localtaint": [36, 37, 38, 40, 82], "filenam": [7, 17, 36, 37, 38, 40, 65, 87, 103], "fopen": 36, "functioncal": [36, 56, 66, 69, 71, 82], "fc": [36, 69], "hasglobalnam": [36, 66, 71], "unfortun": [36, 37, 38, 40, 68, 114, 117], "src": [1, 3, 7, 16, 23, 36, 37, 38, 60, 74, 115, 121, 123], "vari": [36, 75, 102, 106], "hard": [36, 37, 38, 39, 57, 60, 75, 77, 85, 115], "printf": [36, 66, 74], "formattingfunct": [36, 56], "formatstr": [36, 37, 38], "getformatparameterindex": 36, "getqualifiednam": [36, 57, 60, 69, 73], "host_ent": 36, "gethostbynam": 36, "throughout": [36, 37, 38, 39, 40, 103], "power": [36, 37, 38, 39, 40, 84, 92, 98, 103, 119, 124], "significantli": [36, 37, 38, 39, 40], "signatur": [37, 58, 74], "myflowconfigur": [], "myflow": [], "isbarri": [36, 37, 38, 39, 40, 58, 60, 81], "environ": [6, 36, 37, 38, 40, 65, 88, 90, 101, 112], "unix": 36, "environmenttofileconfigur": [36, 37, 40], "getenv": [36, 38, 40], "environmenttofileflow": [], "ntohl": 36, "index": [9, 14, 36, 39, 57, 58, 60, 61, 63, 67, 83, 92, 96, 103, 113], "guard": [36, 49, 71, 81, 91], "bound": [36, 49, 59, 60, 63, 71, 95, 102, 103, 113, 124], "prevent": [6, 10, 15, 36, 41, 44, 75, 81, 94, 96, 105], "controlflow": [36, 58, 66, 83], "networktobuffersizeconfigur": 36, "ae": 36, "getarrayoffset": 36, "pred": [36, 39, 65, 81], "succ": [36, 39, 65, 81, 93, 94], "loopcount": 36, "lc": 36, "getaloop": 36, "getcontrollingexpr": 36, "getgreateroperand": [36, 58, 76], "getvariableaccessinloop": 36, "guardcondit": [36, 83], "gc": 36, "getachild": [36, 57, 58, 59, 60, 62, 73, 92, 96], "getanaccess": [36, 57, 60, 62, 63, 119, 124], "getbasicblock": [36, 58], "networktobuffersizeflow": [], "offset": [14, 36, 121], "influenc": [36, 40, 60, 62, 82, 109], "convert": [3, 5, 9, 36, 60, 64, 65, 66, 79, 82, 86, 96, 103, 119, 123], "network": [36, 37, 40, 90], "sl": [36, 121], "literaltogethostbynameconfigur": 36, "literaltogethostbynameflow": [], "getenvsourc": [36, 38], "getenvtogethostbynameconfigur": 36, "getenvtogethostbynameflow": [], "indirectexprnod": [], "indirectparameternod": [], "asindirectexpr": [], "dereferenc": 116, "alongsid": [3, 14, 16], "callabl": [37, 38, 40, 59, 73, 75, 115, 124], "temp": [6, 37, 38, 40, 57], "csharp": [6, 10, 37, 43, 57, 108], "fileopen": [37, 40], "hasqualifiednam": [36, 37, 38, 41, 57, 58, 59, 63, 73, 74, 79, 124], "getenclosingcal": [37, 57, 62, 115, 124], "ispubl": [37, 75, 97], "gettyp": [37, 41, 44, 57, 58, 59, 60, 63, 64, 68, 73, 76, 79, 82], "stringtyp": [37, 57, 58, 63], "publiccallableparameterflowsourc": 37, "flowsourc": [37, 38], "publiccallableparamet": 37, "remoteflowsourc": [37, 38, 40, 65, 78], "aspnetremoteflowsourc": 37, "asp": [37, 90], "net": [37, 38, 57, 63, 90], "aspnetquerystringremoteflowsourc": 37, "web": [10, 37, 65, 90], "httprequest": 37, "aspnetuserinputremoveflowsourc": 37, "webcontrol": 37, "textbox": 37, "wcfremoteflowsourc": 37, "wcf": 37, "aspnetserviceremoteflowsourc": 37, "getenvironmentvari": 37, "mc": [37, 59], "proprietari": 37, "librarytypedataflow": 37, "callableflow": 37, "callableflowsourc": 37, "callableflowsink": 37, "sourcedeclarationcal": 37, "boolean": [3, 9, 37, 39, 59, 60, 62, 63, 79, 81, 83, 93, 96, 97, 101, 106, 119], "preservesvalu": 37, "constructor": [37, 38, 39, 41, 56, 57, 59, 60, 63, 64, 65, 73, 75, 76, 77, 79, 84, 110], "getter": [37, 57, 60, 70], "setter": [37, 57, 60, 62, 70], "tolow": 37, "doe": [6, 7, 9, 10, 37, 39, 41, 42, 43, 45, 46, 47, 48, 51, 57, 58, 60, 61, 66, 68, 74, 77, 79, 80, 81, 84, 85, 92, 94, 95, 96, 101, 102, 103, 106, 107, 109, 110, 113, 114, 117, 121, 123, 124], "accessor": [37, 57], "etc": [37, 39, 57, 68, 79, 103, 124], "unconstruct": [37, 57], "callableflowsourcequalifi": 37, "callableflowsourcearg": 37, "callableflowsinkqualifi": 37, "callableflowsinkreturn": 37, "callableflowsinkarg": 37, "callableflowsinkdelegatearg": 37, "deleg": [37, 59, 60], "linq": 37, "adapt": [37, 57], "originalstr": 37, "pathandqueri": 37, "systemuriflow": 37, "systemuriclass": 37, "constructorflow": 37, "methodflow": 37, "propertyflow": 37, "getgett": 37, "getamemb": [37, 57, 79, 80], "getparamet": [37, 57, 58, 60, 62, 63, 65, 79, 84, 106], "getargumentindex": 37, "getdeclaringtyp": [37, 38, 57, 64, 75, 77, 79, 124], "getabasetyp": [37, 57], "getsystemobjectclass": 37, "gettostringmethod": 37, "getanoverrid": [37, 57], "getpathandqueryproperti": 37, "getqueryproperti": 37, "getoriginalstringproperti": 37, "inherit": [37, 57, 60, 62, 74, 79, 92, 94, 96, 114], "expos": [37, 71, 84, 106], "hasvalu": [37, 57], "stringtouriconfig": [], "stringtouriflow": [], "environmentvariableflowsourc": 37, "getexpr": [37, 44, 58, 60, 79], "environmenttouriconfig": [], "environmenttouriflow": [], "systemexceptionflow": 37, "systemexceptionclass": 37, "sourcedeclarationmethod": 37, "getaproperti": [37, 57], "fileread": 38, "getcalle": [38, 41, 59, 60, 75, 106], "stringformat": 38, "stringformatmethod": 38, "getmethod": [38, 60, 62, 63, 79], "getformatstringindex": 38, "mytaintflow": [], "literaltourlconfig": [], "literaltourlflow": [], "typesystem": [38, 59], "getenvtourlconfig": [], "getenvtourlflow": [], "util": [39, 41, 59, 60, 79, 84, 85, 90, 103], "j": [3, 6, 39, 56, 63, 90, 96, 97, 100], "readfil": 39, "problemat": [39, 44, 76, 81], "pattern": [7, 9, 39, 59, 61, 62, 67, 75, 84, 85, 94, 103], "belong": [39, 58, 60, 62, 63, 65, 73, 74, 79, 85, 106, 109, 123], "valuenod": [39, 60, 65, 81], "ssadefinitionnod": [39, 60, 107], "propref": [39, 65, 81], "liter": [39, 41, 57, 58, 59, 60, 61, 63, 64, 65, 68, 80, 84], "destructur": [39, 60], "propread": [39, 65, 81], "propwrit": [39, 65], "apart": [39, 100, 103, 104], "fairli": [39, 41, 60, 77, 84, 85], "special": [3, 9, 16, 20, 39, 46, 49, 58, 59, 60, 61, 62, 63, 68, 71, 74, 75, 77, 79, 86, 96, 102, 103, 110, 114, 124], "invokenod": [39, 60, 65], "newnod": [39, 65], "callnod": [39, 58, 65, 74, 84], "methodcallnod": [39, 65, 84], "reflect": [39, 58, 60, 75, 109], "thisnod": [39, 65], "level": [0, 1, 3, 6, 9, 14, 15, 16, 19, 39, 40, 58, 59, 61, 63, 65, 67, 73, 101, 120, 121], "globalvarrefnod": 39, "direct": [3, 39, 46, 56, 57, 58, 60, 64, 94, 95, 96, 113], "rare": [39, 58, 94, 96, 103], "globalvarref": [39, 65, 84], "functionnod": [39, 65, 84], "objectliteralnod": [39, 65], "arrayliteralnod": 39, "classnod": [39, 65], "2015": [39, 60], "moduleimportnod": 39, "amd": [39, 60], "commonj": [39, 60], "undefin": [39, 58, 60, 63], "commonli": [39, 53, 60, 61, 63, 65, 67, 92, 108, 112, 117], "g": [10, 14, 39, 57, 60, 67, 83, 103, 113], "dom": [39, 58, 84], "modulememb": [39, 65], "load": [16, 39, 75], "getapredecessor": [39, 58, 60], "getasuccessor": [39, 58, 60], "nd": [39, 58, 60, 81], "closur": [39, 60, 64, 65, 68, 76, 77, 79, 97, 103, 114, 124], "reflex": [39, 76, 79, 105], "getmethodnam": [39, 60, 62, 63, 65, 84], "explicit": [7, 39, 57, 58, 59, 60, 62, 63, 64, 73, 94, 96, 101, 102, 105], "cumbersom": 39, "practic": [16, 17, 39, 41, 42, 43, 44, 45, 46, 47, 48, 58, 66, 81, 84, 85, 94, 96, 101, 106], "sourcenod": [39, 65, 84], "conveni": [15, 39, 46, 58, 59, 60, 63, 80, 84, 117, 121], "involv": [39, 58, 60, 73, 81, 92, 94, 96, 103, 106, 114], "regular": [3, 7, 9, 39, 41, 62, 103], "jsx": [39, 90], "argv": [39, 64], "receiv": [39, 40, 44, 58, 60, 62, 65, 74, 84, 103], "getapropertyread": [39, 65], "getapropertyrefer": 39, "mention": [39, 60, 63, 78, 81, 84, 96, 103, 117], "again": [39, 58, 59, 60, 76, 79, 84, 85, 110], "chain": [39, 57, 62, 63, 65, 84, 94, 106, 110], "even": [10, 39, 58, 62, 66, 73, 77, 79, 81, 85, 92, 96, 97, 105, 115], "base": [3, 6, 7, 10, 14, 16, 17, 37, 39, 40, 57, 58, 59, 60, 62, 65, 67, 68, 78, 81, 84, 85, 92, 94, 95, 96, 103, 105, 106, 107, 109, 113, 115, 121, 123, 124], "turn": [6, 39, 41, 46, 57, 58, 59, 60, 73, 76, 79, 81, 84, 94, 117], "concis": [39, 92], "importantli": [39, 115], "ones": [9, 19, 39, 58, 75, 97], "arg": [16, 39, 56, 61, 63, 67, 75, 85], "firstarg": 39, "analog": [39, 58, 59], "getapropertywrit": [39, 65], "offer": [39, 58, 60, 73, 85, 92, 124], "getacal": [39, 40, 58, 65, 80], "getaninstanti": [39, 65], "getaninvoc": [39, 65], "invoc": [6, 9, 39, 60, 63, 68, 103], "getamethodcal": [39, 65, 84], "getamembercal": [39, 65], "former": [39, 58, 59, 60, 73, 75, 79, 81, 103, 121], "shape": 39, "latter": [39, 58, 59, 60, 75, 79, 81, 85, 102, 103, 109], "flowsto": [39, 40, 60], "getalocalsourc": [39, 40, 65, 84], "put": [39, 75, 94, 121], "togeth": [39, 60, 65, 77, 81, 94, 96, 97, 98, 100, 106, 108, 110, 114, 120], "worth": [39, 68, 96, 124], "pure": [39, 46, 58, 109], "mayhavestringvalu": 39, "tagnam": 39, "createel": 39, "fact": [39, 41, 58, 60, 66, 75, 76, 80, 81, 84, 85, 102, 103, 105, 107, 109, 114, 119], "moreov": [39, 58, 60, 103], "feasibl": 39, "short": [39, 56, 57, 58, 59, 60, 61, 67, 74, 76, 79, 96, 99, 116, 120], "solver": 39, "extra": [39, 42, 44, 45, 46, 47, 53, 77, 78, 84, 101, 108, 109, 113, 116], "barrier": [39, 58, 60, 81, 115], "mydataflowconfigur": [36, 37, 38, 39, 40], "isbarrieredg": [39, 60], "characterist": [36, 37, 38, 39, 40, 60, 74, 94, 102, 103, 110], "suitabl": [39, 40, 115], "hasflow": [36, 37, 38, 39, 40, 60, 81], "manipul": [39, 84, 109], "simpli": [6, 10, 16, 39, 46, 58, 59, 60, 64, 68, 73, 75, 79, 80, 81, 85, 103, 106, 110, 117], "mytainttrackingconfigur": [36, 37, 38, 39, 40], "isadditionaltaintstep": [36, 37, 38, 39, 40, 60, 65, 81], "issanit": [36, 37, 38, 39, 40, 60], "issanitizeredg": [39, 60], "act": [7, 39, 60, 65, 81, 94, 96, 106, 113, 117], "henc": [39, 58, 60, 63, 75, 79, 85, 105], "commandlinefilenameconfigur": 39, "cfg": [36, 39, 58, 60, 62, 65, 81], "inter": [39, 81], "procedur": [39, 81, 92], "mark": [3, 14, 39, 41, 59, 74, 96, 103, 117], "comment": [5, 39, 52, 59, 61, 73, 75, 85, 94, 96, 98, 117, 119, 120], "readfilehelp": 39, "utf8": [39, 87], "err": 39, "consol": [6, 28, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 63, 64, 67, 68, 69, 70, 73, 75, 76, 77, 79, 80, 85, 108, 110, 113, 114, 116, 117, 119], "reli": [4, 6, 8, 39, 58, 60, 84, 106], "built": [6, 10, 39, 57, 58, 64, 70, 79, 87, 95, 96, 101, 102, 106, 112, 119], "partial": [39, 60, 63, 81, 91, 103, 111], "pars": [39, 60, 71, 81, 85, 103], "stringifi": 39, "transform": [39, 58, 68, 81, 84, 103], "promis": [39, 63, 65], "passwd": 39, "untrust": [39, 51, 53, 60, 62, 74, 78, 81, 109], "undesir": 39, "constrain": [39, 40, 74, 94, 96, 97, 102, 106, 107], "checkpath": 39, "absolut": [39, 60, 81, 87, 94, 103, 121], "abort": 39, "untaint": [39, 106], "getcalleenam": [39, 65], "sai": [39, 59, 60, 74, 95, 97, 103, 106, 110, 114, 117], "flag": [2, 3, 6, 10, 14, 15, 39, 41, 60, 73, 75, 79, 81, 85], "perhap": [39, 60, 99, 114], "natur": [39, 60, 70, 92, 103, 119], "safe": [10, 39, 40, 58, 60, 81, 113], "truthi": [39, 81], "order": [6, 7, 9, 10, 39, 40, 58, 60, 76, 80, 81, 94, 95, 96, 104, 108, 112, 113, 117, 121, 123, 124], "sanitizerguardnod": [39, 81], "issanitizerguard": [36, 39], "checkpathsanitizerguard": 39, "outcom": [39, 81], "rather": [1, 3, 7, 39, 60, 64, 67, 68, 70, 71, 74, 80, 92, 106, 116], "consequ": [39, 44, 59, 77, 94, 97, 107, 110], "difficult": [39, 59, 60, 79, 96, 105, 114, 124], "fictiti": 39, "npm": [0, 39, 81], "symlink": 39, "resolvesymlink": 39, "unsaf": [14, 39, 57, 113], "safer": [39, 60], "quit": [39, 60, 68, 85, 96, 114, 117], "moduleimport": [39, 40, 65, 80], "wrap": [6, 13, 39, 59, 60, 63, 64, 68, 76], "sharedtaintstep": 39, "stepthroughresolvesymlink": 39, "obvious": 39, "realli": [8, 39, 60, 76], "sharedflowstep": 39, "myobject": 39, "mymethod": [39, 121], "myargument": 39, "myindex": 39, "hint": [39, 57, 113, 114, 119], "numer": [39, 58, 60, 61, 62, 67, 76, 96, 97, 107], "hardcodedtagnameconfigur": 39, "constantstr": [39, 60], "arrayentrycallresult": 39, "regexpmatch": [39, 41, 57, 65, 82, 103, 119], "cfgnode": 40, "callcfgnod": 40, "ascfgnod": 40, "controlflownod": [40, 60, 61], "due": [40, 58, 60, 65, 70, 76, 79, 92, 97], "split": [40, 84, 103, 124], "concret": [40, 58, 59, 60, 63, 76, 77, 94, 101], "concept": [40, 41, 58, 60, 62, 63, 74, 87, 89, 92, 95, 106, 118, 119, 122], "attent": 40, "lighter": 40, "localsourcenod": 40, "builtin": [40, 57, 58, 80], "low": [15, 40, 76, 115, 120, 123], "apigraph": [40, 62, 80], "getmemb": [40, 60, 80], "getarg": [40, 58], "toward": 40, "repeat": [3, 40, 76, 119], "mostli": [40, 58, 63], "simultan": [40, 80], "demand": 40, "enforc": [40, 121], "cast": [40, 57, 60, 63, 64, 67, 94, 95, 106], "possibli": [40, 58, 60, 63, 66, 73, 79, 94, 96, 103, 105], "inspect": [40, 115], "suppli": [40, 103], "strict": [0, 1, 3, 16, 19, 40, 46, 58, 60, 95, 96, 103], "know": [1, 3, 40, 81, 101, 110, 114, 117, 118, 123], "deriv": [17, 40, 57, 58, 61, 65, 71, 103, 106, 109], "good": [1, 3, 6, 10, 15, 16, 17, 40, 41, 66, 68, 79, 81, 92, 94, 106, 115, 124], "filesystemaccess": [40, 65], "sqlexecut": 40, "attrread": 40, "attrwrit": 40, "ordinari": [40, 63, 103], "systemcommandexecut": [40, 65], "spawn": 40, "pathnorm": 40, "often": [6, 9, 13, 18, 40, 57, 58, 59, 60, 61, 62, 63, 66, 67, 70, 77, 79, 84, 85, 92, 96, 97, 104, 105, 106, 115, 119, 121, 123, 124], "decod": [3, 19, 40], "binari": [3, 19, 40, 58, 60, 61, 62, 67, 85, 87, 102], "textual": [40, 62], "denial": [3, 40], "codeexecut": 40, "sql": [40, 42, 43, 44, 45, 46, 47, 48, 60, 92, 103, 106, 119], "routesetup": 40, "rout": 40, "httprespons": 40, "remotetofileconfigur": 40, "getapathargu": 40, "remotetofileflow": [], "fileaccess": 40, "exprcfgnod": [], "gettoplevelmemb": [], "lookup": 124, "env": [], "constantreadaccesscfgnod": [], "getnam": [41, 57, 58, 59, 60, 62, 65, 67, 69, 70, 77, 82, 94, 96, 102, 121, 124], "elementreferencecfgnod": [], "getreceiv": [44, 60, 62, 63, 65], "getcfgnod": [], "dataflowexpr": [], "dataflowparamet": [], "getstatictarget": [], "sourceexpr": [], "sinkexpr": [], "paramdecl": [], "sourceparam": [], "sinknod": [], "stringliteralexpr": [], "sourceliter": [], "mydataflow": [], "parameter": [59, 79], "localflowsourc": [], "password": [57, 60], "tune": [59, 87], "constantpasswordconfig": [], "getargumentwithlabel": [], "constantpasswordflow": [], "sqlite": [], "connect": [58, 60, 63, 64, 119, 122], "sqlinjectionconfig": [], "sqlinjectionflow": [], "attach": [6, 41, 52, 59, 61, 64, 73], "annotat": [41, 59], "annotationtyp": [41, 59], "annotationel": 41, "getvalu": [41, 57, 58, 60, 67, 68, 82], "suppresswarn": 41, "emit": 41, "warn": [17, 41, 56, 59, 87, 93, 94, 120, 121, 123], "rawtyp": [41, 59], "rawlist": 41, "ann": [41, 59, 97], "anntp": [41, 59], "getanannot": [41, 59], "forex": [41, 103], "elt": 41, "getanannotationel": 41, "though": [41, 58, 64, 75, 101, 103, 121], "serv": [41, 42, 43, 44, 45, 46, 47, 48, 58, 60], "accident": [41, 46], "overload": [41, 60, 63], "sub1": 41, "sub2": 41, "qualifi": [41, 57, 58, 60, 63, 73, 85, 100, 103], "idea": [1, 6, 41, 79, 81, 94, 114, 117, 119], "On": [41, 59, 63, 73, 81, 94, 96, 97, 103, 107, 124], "earlier": [7, 10, 41, 42, 43, 45, 48, 64, 103, 114], "encapsul": 41, "overrideannot": 41, "retriev": [41, 58, 59, 73, 85, 87], "overridden": [7, 41, 57, 63, 79, 94, 103], "aren": [3, 41, 57, 87, 97, 102], "conjunct": [41, 73, 76, 85, 94, 97], "fromsourc": [41, 57, 75], "probabl": [41, 64, 67, 69, 70, 85], "deprecatedannot": 41, "deprecatedmethod": 41, "exclud": [7, 41, 42, 43, 44, 45, 47, 48, 57, 60, 66, 75, 79, 85, 96, 103, 110], "getcal": [41, 58, 62, 75], "supresswarn": 41, "suppress": [6, 14, 41, 59], "ignor": [0, 1, 9, 41, 42, 43, 45, 47, 58, 63, 77, 99, 109, 116], "insid": [7, 41, 59, 60, 63, 68, 76, 84, 85, 100, 101, 104, 106, 107, 110, 114, 117], "among": [41, 42, 43, 44, 45, 46, 47, 48, 60, 94, 96], "suppressdeprecationwarningannot": 41, "getavalu": [41, 60], "getliter": 41, "bit": [41, 76, 81, 84, 96, 103, 106], "openjdk": [41, 85, 90], "bdeprec": 41, "carri": [41, 84, 109], "redund": [42, 43, 45, 47, 48, 62, 124], "logo": [], "protocolbuff": [], "protobuf": 90, "screenshot": [], "moment": [42, 43, 44, 45, 46, 47, 48], "past": 81, "beneath": [9, 123], "getthen": [16, 42, 43, 45, 48, 57, 58, 60, 62], "getnumstmt": [42, 45], "temporari": [85, 96, 97, 113, 115, 117], "experiment": 106, "somewher": [], "compris": [42, 43, 44, 45, 46, 47, 48], "state": [1, 16, 42, 43, 44, 45, 92, 94, 102, 103, 105], "poor": [42, 43, 44, 45, 46, 47, 48, 124], "inher": [42, 43, 44, 45, 46, 47, 48], "iter": [3, 16, 19, 42, 43, 44, 45, 46, 47, 48, 58, 60, 82, 86, 90], "previous": [7, 42, 43, 44, 45, 46, 47, 48, 78, 81, 84, 113], "opportun": [42, 43, 44, 45, 46, 47, 48, 96], "strcmp": 42, "noth": [42, 43, 45, 48, 101, 103, 113, 121], "unrecogn": [42, 43, 45, 48], "solut": [6, 42, 43, 45, 47, 48, 60, 66, 84, 94, 105, 122], "hasels": 42, "powershel": 6, "isempti": [16, 43, 57, 62], "getels": [43, 45, 48, 57, 58, 60, 62, 71], "mystruct": 44, "valuemethod": 44, "invis": 44, "caller": [44, 60, 62, 75], "pointermethod": 44, "faq": 44, "gorm": 90, "recv": 44, "w": [44, 74, 90], "writesfield": [44, 58], "getaread": 44, "pointertyp": [44, 56, 57, 58], "matter": [44, 58, 81, 85, 121], "ret": [44, 67, 83], "ispur": [44, 46, 60], "ineffici": [3, 94, 113], "testjava": [], "myjavafun": [], "equal": [3, 14, 45, 46, 49, 58, 60, 61, 66, 67, 76, 83, 85, 95, 102, 103, 107, 115, 117], "mykotlinfun": [], "activemq": 41, "ma": [], "treat": [64, 74, 86, 96, 102, 112, 116], "typestr": 59, "danger": [46, 109], "imagin": [46, 121], "ajaxorg": [], "ac": [], "getpar": [46, 57, 58, 59, 60, 62, 73, 124], "parent": [6, 10, 46, 57, 58, 59, 60, 62, 68, 92, 96, 102, 105, 114], "interpret": [3, 6, 19, 46, 60, 78, 81, 86, 87, 103, 106, 108, 112, 121], "modern": [46, 90], "bia": 46, "meant": [46, 60, 62, 85], "saltstack": 67, "salt": 67, "getstmt": [47, 58, 60, 61, 62, 67, 68], "do_someth": [47, 67], "getorels": [47, 61, 67], "discours": [], "alamofir": [], "bracestmt": [], "getnumberofel": [], "brace": [58, 62, 100, 102, 103, 106, 121], "handleerror": [], "experi": [49, 50, 51, 52, 53, 54, 55, 66, 72, 94, 115], "basic": [49, 50, 51, 52, 53, 54, 55, 60, 61, 67, 83, 91, 113, 118, 122, 123], "refin": [7, 49, 60, 64, 66, 68, 69, 70, 75, 85, 91, 102, 106, 109, 117], "posit": [49, 60, 61, 62, 64, 66, 76, 77, 79, 81, 85, 93, 96, 102, 103, 120], "buffer": [49, 63, 74, 85, 91], "overflow": [49, 52, 59, 85, 91], "alloc": [49, 85, 92], "strlen": [49, 71], "upper": [49, 59, 82, 103, 113, 124], "lower": [49, 59, 82, 90, 103], "underflow": [49, 82], "cons": [49, 91], "runtim": [49, 58, 59, 60, 62, 63, 67, 71, 75, 79, 81, 90, 109], "scenario": [], "prone": [52, 59, 85, 91], "elsewher": [6, 52, 75], "never": [14, 52, 58, 59, 63, 69, 75, 76, 79, 97, 107, 114, 115], "javadoc": [52, 59, 91], "deduc": [52, 63, 85, 124], "presenc": [14, 52, 85, 103, 121], "absenc": [14, 52, 85, 103], "white": 52, "space": [3, 7, 15, 52, 58, 87, 94, 100, 103], "cheat": [53, 78, 91], "sheet": [53, 78, 91], "uniform": [54, 80], "unreach": 54, "mutual": [54, 84, 86, 96, 106], "exclus": [54, 63, 103], "orient": [20, 56, 57, 58, 59, 60, 61, 62, 86, 103, 106, 110], "summar": [56, 58, 59, 60, 62, 103], "broken": [56, 67], "globalvari": [56, 60, 61, 62], "float": [56, 57, 58, 59, 96, 101, 106, 107, 117, 119], "namespacevari": 56, "localvari": [56, 57, 58, 60, 61, 62], "membervari": 56, "char": [56, 57, 59, 64, 66, 76], "param": [56, 60, 63, 74], "templatefunct": 56, "functiontemplateinstanti": 56, "functiontemplatespeci": 56, "memberfunct": [56, 64], "constmemberfunct": 56, "virtual": [56, 58], "virtualfunct": 56, "conversionoper": [56, 57], "destructor": [56, 57], "conversionconstructor": 56, "copyassignmentoper": 56, "moveassignmentoper": 56, "copyconstructor": 56, "moveconstructor": 56, "noargconstructor": 56, "en": 56, "val1": 56, "val2": 56, "enumconst": [56, 57], "friend": 56, "frienddecl": 56, "localenum": 56, "nestedenum": 56, "scopedenum": 56, "abstractclass": 56, "classtemplateinstanti": 56, "fullclasstemplatespeci": 56, "partialclasstemplatespeci": 56, "localclass": [56, 59], "nestedclass": [56, 59], "union": [56, 63, 101, 103, 124], "var1": 56, "var2": 56, "proxyclass": 56, "uninstanti": 56, "localstruct": 56, "nestedstruct": 56, "localunion": 56, "nestedunion": 56, "typedef": [56, 64, 68], "typedeftyp": 56, "localtypedeftyp": 56, "nestedtypedeftyp": 56, "classderiv": 56, "virtualclassderiv": 56, "templateclass": [56, 64], "param1": 56, "param2": 56, "templatevari": 56, "__asm__": 56, "movb": 56, "bh": 56, "eax": 56, "asmstmt": 56, "given": [7, 9, 14, 56, 57, 58, 59, 60, 62, 63, 65, 76, 77, 79, 80, 81, 83, 85, 87, 92, 96, 97, 102, 103, 104, 112, 113, 123], "cpu": [6, 56], "catchblock": 56, "catchanyblock": 56, "labelptr": 56, "computedgotostmt": 56, "gnu": [56, 90], "labelliter": 56, "rangebasedforstmt": 56, "__try": 56, "__except": 56, "microsofttryexceptstmt": 56, "seh": 56, "__final": 56, "microsofttryfinallystmt": 56, "functiontrystmt": 56, "labelstmt": [56, 57], "slabel": 56, "arr": [56, 60], "vladeclstmt": 56, "c99": [56, 90], "length": [14, 56, 61, 66, 81, 85, 102, 103, 119, 121], "arrayaggregateliter": 56, "classaggregateliter": 56, "alignof": 56, "alignofexproper": 56, "alignoftypeoper": 56, "__assum": 56, "assumeexpr": 56, "static_assert": 56, "_static_assert": 56, "staticassert": 56, "11": [6, 10, 56, 66, 90, 96, 97, 103, 117], "c11": [56, 90], "__noop": 56, "builtinnoop": 56, "exprcal": 56, "commaexpr": 56, "conditiondeclexpr": 56, "cstylecast": [56, 64], "const_cast": 56, "constcast": 56, "dynamic_cast": 56, "dynamiccast": [56, 64], "reinterpret_cast": 56, "reinterpretcast": 56, "static_cast": 56, "staticcast": [56, 64], "auto": 56, "sum": [56, 57, 95, 96, 103, 117, 119], "foldexpr": 56, "formattingfunctioncal": 56, "captur": [56, 58, 59, 60, 102, 106], "lambdaexpress": 56, "blockexpr": 56, "appl": [10, 56, 96], "3d": 56, "formatliter": 56, "0xdbceffca": 56, "hexliter": 56, "0167": 56, "octalliter": 56, "charliter": [56, 57], "abcdefgh": 56, "newarrayexpr": 56, "deletearrayexpr": 56, "noexcept": 56, "noexceptexpr": 56, "assignpointeraddexpr": 56, "assignpointersubexpr": 56, "pointeraddexpr": 56, "imaginaryrealaddexpr": 56, "realimaginaryaddexpr": 56, "imaginarydivexpr": 56, "maxexpr": 56, "minexpr": 56, "imaginarymulexpr": 56, "pointerdiffexpr": 56, "pointersubexpr": 56, "imaginaryrealsubexpr": 56, "realimaginarysubexpr": 56, "addressofexpr": [56, 57], "pointerdereferenceexpr": 56, "postfixdecrexpr": 56, "prefixdecrexpr": 56, "postfixincrexpr": 56, "prefixincrexpr": 56, "__imag": 56, "imaginarypartexpr": 56, "__real": 56, "realpartexpr": 56, "conjugationexpr": 56, "vect": 56, "__attribute__": 56, "vector_s": 56, "16": [56, 76, 90, 96, 103, 106], "32": [3, 56, 76, 103, 106], "33": 56, "vectorfilloper": 56, "sizeofexproper": 56, "sizeoftypeoper": 56, "sizeofpackoper": 56, "stmtexpr": 56, "clang": [56, 90], "throwexpr": 56, "rethrowexpr": 56, "typeid": 56, "typeidoper": 56, "__uuidof": 56, "uuidofoper": 56, "voidtyp": [56, 57, 63], "_bool": 56, "bool": [56, 57, 58, 66, 93], "booltyp": [56, 57, 58], "char16_t": 56, "char16typ": 56, "char32_t": 56, "char32typ": 56, "plainchartyp": 56, "signedchartyp": 56, "unsignedchartyp": 56, "inttyp": [56, 57, 58], "longlongtyp": 56, "longtyp": [56, 57], "shorttyp": [56, 57], "wchar_t": 56, "widechartyp": 56, "nullptr_t": 56, "nullpointertyp": 56, "doubletyp": [56, 57], "longdoubletyp": 56, "floattyp": [56, 57], "autotyp": 56, "decltyp": 56, "arraytyp": [56, 57, 58, 63], "blockptr": 56, "blocktyp": 56, "funcptr": 56, "functionpointertyp": 56, "funcref": 56, "functionreferencetyp": 56, "gnuvectortyp": 56, "lvaluereferencetyp": 56, "rvaluereferencetyp": 56, "membptr": 56, "pointertomembertyp": 56, "templatetemplateparamet": 56, "templateparamet": 56, "preprocess": 56, "elif": 56, "preprocessorelif": 56, "preprocessorif": 56, "ifdef": 56, "macro": [56, 68], "preprocessorifdef": 56, "ifndef": 56, "preprocessorifndef": 56, "preprocessorels": 56, "endif": 56, "preprocessorendif": 56, "line_numb": 56, "file_nam": 56, "preprocessorlin": 56, "pragma": [56, 103], "pragma_properti": 56, "preprocessorpragma": 56, "preprocessorundef": 56, "preprocessorwarn": 56, "preprocessorerror": 56, "include_next": 56, "includenext": 56, "omit": [3, 6, 12, 14, 15, 57, 58, 60, 63, 84, 103, 106, 117, 121, 123], "bespok": 57, "arithmeticoper": 57, "mutatoroper": 57, "incrementoper": 57, "preincrexpr": 57, "postincrexpr": 57, "decrementoper": 57, "predecrexpr": 57, "postdecrexpr": 57, "arithmet": [57, 60, 61, 62, 76, 85, 95, 96, 103], "overlap": [57, 63, 106], "intermedi": [3, 19, 57, 58, 71, 84, 87, 95, 96, 113], "logic": [0, 1, 3, 16, 57, 60, 61, 62, 67, 86, 92, 95, 98, 102, 103, 104, 106, 107, 108, 110, 112, 113, 118, 119, 122], "proposit": 57, "getleftoperand": [57, 58, 60, 76, 85], "getrightoperand": [57, 58, 60, 62, 76, 85], "simplifi": [57, 58, 61, 66, 67, 74, 92, 97, 110, 115, 119], "op": [57, 62, 63], "assembli": 57, "xml": [6, 57, 90, 101, 103, 123], "sourcefil": 57, "getnumberoflin": [57, 60], "getshortnam": 57, "getbasenam": [57, 60, 65, 96, 116], "ext": 57, "getafold": [57, 60], "getafil": [57, 60], "largest": [57, 61, 76, 96, 103, 117], "max": [57, 58, 61, 96, 103, 117], "ultim": [57, 84], "hierarch": [57, 58, 86, 92], "getchild": [57, 58, 60], "getloc": [57, 58, 60, 62, 63, 66, 71, 85, 101, 110, 117, 121, 124], "span": [57, 60, 85], "getfil": [57, 58, 60, 65, 73, 85, 121, 124], "getaqlclass": [57, 124], "someth": [8, 57, 60, 65, 68, 73, 75, 76, 80, 92, 105, 115], "sourceloc": 57, "wherea": [57, 62, 64, 79, 103, 109], "referenc": [3, 14, 16, 57, 59, 60, 63, 80, 103, 105, 106, 124], "getstartlin": [57, 58, 60, 66, 85, 121, 124], "getendlin": [57, 58, 60, 85], "getstartcolumn": [57, 58, 60, 85, 121], "getendcolumn": [57, 58, 60, 85], "charact": [0, 1, 9, 14, 57, 60, 62, 67, 85, 96, 102, 121], "unboundgener": 57, "constructedgener": 57, "event": [57, 60], "issourcedeclar": 57, "getsourcedeclar": [57, 59, 79], "usernam": [57, 62], "decl": 57, "uu": 57, "ser": 57, "nn": 57, "am": 57, "memberconst": 57, "localscopevari": [57, 66, 96, 107], "localconst": 57, "getanassignedvalu": 57, "getiniti": [57, 68, 106], "unus": [3, 57, 60, 69, 119], "mscorlib": 57, "int32": 57, "valueorreftyp": 57, "valuetyp": 57, "reftyp": [57, 59, 73, 79], "nestedtyp": [57, 59], "simpletyp": 57, "chartyp": 57, "integraltyp": [57, 68], "unsignedintegraltyp": 57, "bytetyp": 57, "byte": [57, 59, 61, 67, 76], "ushorttyp": 57, "uint16": 57, "uinttyp": 57, "uint32": 57, "ulongtyp": 57, "uint64": 57, "signedintegraltyp": 57, "sbytetyp": 57, "int16": 57, "int64": 57, "floatingpointtyp": 57, "decimaltyp": 57, "decim": [57, 96, 103], "nullabletyp": 57, "anonymousclass": [57, 59], "objecttyp": 57, "delegatetyp": 57, "nulltyp": [57, 59, 63, 79], "dynamictyp": 57, "simplic": [1, 16, 57, 58], "getabaseinterfac": 57, "getbaseclass": 57, "getasubtyp": [57, 79], "subtyp": [57, 59, 60, 64, 73, 79, 94, 103, 110], "getamethod": [57, 62], "getanindex": 57, "getanev": 57, "getanoper": 57, "getanestedtyp": 57, "getnamespac": [57, 63], "ienumer": 57, "indirectli": [9, 57, 69, 75, 81, 94, 98, 102, 105, 106], "letter": [19, 57, 93, 96, 100, 102, 103, 106, 107, 110, 120], "independ": [57, 65, 79, 102, 106], "extensionmethod": 57, "staticconstructor": 57, "instanceconstructor": 57, "plusoper": 57, "minusoper": 57, "notoper": 57, "complementoper": 57, "falseoper": 57, "trueoper": 57, "addoper": 57, "suboper": 57, "muloper": 57, "divoper": 57, "remoper": 57, "andoper": 57, "oroper": 57, "xoroper": 57, "lshiftoper": 57, "rshiftoper": 57, "eqoper": 57, "neoper": 57, "ltoper": 57, "gtoper": 57, "leoper": 57, "geoper": 57, "implicitconversionoper": 57, "explicitconversionoper": 57, "anonymousfunctionexpr": 57, "lambdaexpr": 57, "anonymousmethodexpr": 57, "eventaccessor": 57, "addeventaccessor": 57, "removeeventaccessor": 57, "getaparamet": [57, 60, 62, 73], "getreturntyp": [57, 63], "getbodi": [57, 58, 60, 61, 67, 124], "getexpressionbodi": 57, "bodi": [57, 58, 59, 60, 61, 62, 63, 65, 67, 70, 74, 77, 83, 85, 93, 94, 95, 96, 97, 102, 103, 104, 108, 112, 113, 121, 124], "getanoverride": 57, "getanimplemente": 57, "getanimplementor": 57, "falsetostr": 57, "tolowercas": [57, 60, 62, 103], "getnumberofparamet": [57, 75, 79], "dispos": 57, "idispos": 57, "ispriv": [57, 59, 77], "controlflowel": 57, "selectionstmt": 57, "foreachstmt": 57, "foreach": [6, 57], "gotolabelstmt": 57, "gotocasestmt": 57, "gotodefaultstmt": 57, "yieldstmt": 57, "yieldbreakstmt": 57, "yieldreturnstmt": 57, "specificcatchclaus": 57, "generalcatchclaus": 57, "checkedstmt": 57, "uncheckedstmt": 57, "uncheck": [10, 57, 73], "lockstmt": 57, "usingstmt": 57, "localconstantdeclstmt": 57, "unsafestmt": 57, "fixedstmt": 57, "getnumberofstmt": 57, "getaniniti": 57, "getupd": [57, 60], "getcondit": [57, 60, 62, 71, 76], "infinit": [57, 95, 102, 107, 113, 114], "nulldefererenceexcept": 57, "getcaughtexceptiontyp": 57, "nullreferenceexcept": 57, "bitwis": [57, 60, 62, 103], "localvariabledeclexpr": 57, "localconstantdeclexpr": 57, "sizeofexpr": 57, "pointerindirectionexpr": 57, "comparisonoper": [57, 62], "assignoper": [57, 62], "addorremoveeventexpr": 57, "addeventexpr": 57, "removeeventexpr": 57, "memberiniti": 57, "bitwiseoper": 57, "logicaloper": 57, "unarylogicaloper": [57, 62], "logicalnotoper": 57, "nullcoalescingexpr": 57, "parenthesisedexpr": 57, "checkedexpr": 57, "uncheckedexpr": 57, "isexpr": 57, "defaultvalueexpr": 57, "nameofexpr": 57, "interpolatedstringexpr": 57, "baseaccess": 57, "memberaccess": 57, "virtualmethodaccess": 57, "propertyaccess": 57, "indexeraccess": 57, "eventaccess": 57, "assignableaccess": 57, "parameteraccess": 57, "localscopevariableaccess": 57, "memberconstantaccess": 57, "trivialpropertyaccess": 57, "virtualpropertyaccess": 57, "virtualindexeraccess": 57, "virtualeventaccess": 57, "propertycal": 57, "indexercal": 57, "eventcal": 57, "virtualmethodcal": 57, "elementiniti": 57, "constructoriniti": 57, "operatorcal": 57, "mutatoroperatorcal": 57, "delegatecal": 57, "objectcr": 57, "defaultvaluetypeobjectcr": 57, "typeparameterobjectcr": 57, "anonymousobjectcr": 57, "objectorcollectioniniti": 57, "objectiniti": 57, "collectioniniti": 57, "delegatecr": 57, "explicitdelegatecr": 57, "implicitdelegatecr": 57, "arrayiniti": 57, "arraycr": 57, "boolliter": 57, "intliter": 57, "uintliter": 57, "ulongliter": 57, "realliter": 57, "decimalliter": 57, "getenclosingstmt": [57, 60, 68], "stripcast": 57, "isimplicit": 57, "getnumberofargu": 57, "cmp": [57, 67], "getanoperand": [57, 58, 60, 64, 76, 85], "pp": 57, "ass": 57, "wd": 57, "getanattribut": 57, "fragment": [57, 60, 65, 123], "obsolet": 57, "obsoleteattribut": 57, "nunit": 57, "fixtur": 57, "testfixtur": 57, "testfixtureattribut": 57, "testmethod": 57, "getatest": 57, "testattribut": 57, "accommod": [57, 76], "ship": [58, 62], "broadli": 58, "speak": [58, 102, 103], "dfg": 58, "higher": [0, 3, 5, 12, 19, 31, 58, 60, 76, 103], "approxim": [58, 60, 85, 115], "dispatch": [58, 59, 90, 103, 106], "thumb": 58, "superfici": 58, "deeper": 58, "semant": [0, 1, 58, 60, 71, 86, 92, 94, 96, 103, 109], "tutori": [58, 60, 70, 76, 79, 81, 84, 91, 101, 109, 114, 117, 118], "briefli": [58, 59, 60], "arrang": 58, "inner": [58, 63, 71, 85], "compos": [19, 58, 60, 61, 67, 120], "six": [58, 59, 103], "children": [58, 60, 96, 110, 114, 123], "zeroth": 58, "travers": [58, 59, 60, 92], "th": [58, 60, 63, 116, 123], "rel": [0, 1, 7, 10, 12, 13, 14, 16, 58, 60, 63, 65, 81, 85, 87, 101, 114, 121], "dataset": [58, 87], "getlh": [58, 60], "getrh": [58, 60, 65], "compound": [58, 60], "plain": [58, 60, 64, 81, 120], "lh": 58, "rh": 58, "increment": [58, 60, 76, 85], "decrement": [58, 60], "getoperand": [58, 60], "curli": [58, 62, 121], "getinit": [58, 60], "getcond": 58, "getpost": 58, "getdomain": 58, "domain": [58, 103], "getkei": [58, 121], "success": [6, 8, 58, 103, 113, 119], "goroutin": 58, "getchannel": 58, "channel": 58, "interrupt": [58, 60], "getlabel": [58, 60], "getdecl": [58, 60], "deal": [58, 59, 63, 81, 84, 96, 106, 115, 124], "getcas": [58, 60], "getcommclaus": 58, "getcomm": 58, "isconst": 58, "getnumericvalu": 58, "getstringvalu": [58, 65, 84], "getexactvalu": 58, "sel": 58, "getbas": [58, 60, 65, 81], "dot": [58, 60, 67, 78, 80, 96, 103], "getselector": 58, "runelit": 58, "composit": [14, 58], "parenthes": [58, 60, 62, 85, 117], "idx": 58, "getindex": [58, 60], "lo": 58, "getlow": 58, "gethigh": 58, "getmax": 58, "gettypeexpr": 58, "calle": [58, 60, 63, 65, 75], "arg0": 58, "argn": 58, "getcalleeexpr": 58, "operand": [58, 60, 76, 85, 95, 96, 102, 103], "operatorexpr": 58, "unari": [58, 60, 61, 62, 67], "getoper": 58, "getpolar": 58, "getlesseroperand": [58, 76], "lesser": 58, "greater": [58, 59, 76, 83, 97, 103], "isstrict": 58, "cover": [58, 60, 61, 63, 66, 73, 78, 84, 90], "fine": [58, 59, 60, 81], "grain": [58, 60, 81], "ax": 58, "islvalu": 58, "isrvalu": 58, "At": [9, 10, 14, 58, 60, 67, 75, 81, 85, 103, 114], "funcdecl": 58, "getresultvar": 58, "Not": [3, 7, 14, 58, 75, 90, 95, 97, 106], "len": [58, 66, 102], "smooth": 58, "unifi": [16, 58], "pkg": [58, 60, 85], "getdeclar": [58, 60], "getarefer": [58, 59], "packageent": 58, "typeent": 58, "valueent": 58, "receivervari": 58, "resultvari": 58, "getfunct": 58, "tp": [58, 73], "embed": [58, 60], "m2": [58, 59], "numerictyp": 58, "uint8typ": 58, "float64typ": 58, "namedtyp": 58, "slicetyp": 58, "structtyp": 58, "interfacetyp": 58, "maptyp": 58, "chantyp": 58, "signaturetyp": 58, "distinct": [58, 59, 60, 63, 96, 101, 103, 106, 107, 109], "getent": 58, "invalid": [17, 58, 95, 96, 103, 105, 112], "invalidtyp": 58, "writer": [10, 58, 74], "nevertheless": 58, "unlik": [58, 59, 60, 62, 64, 66, 79, 81, 85, 96, 106, 109], "hierarchi": [58, 67, 79, 106], "pictur": 58, "somewhat": [58, 73, 75, 119], "skip": [6, 58], "incom": [58, 65, 81], "synthet": [58, 60, 103], "algorithm": [58, 60, 103], "thought": 58, "subsequ": [4, 6, 7, 8, 58, 66, 103, 104], "circuit": [58, 60, 61, 67], "interchang": [58, 87], "recov": [58, 60], "caution": 58, "getresult": 58, "binaryoperationnod": 58, "aris": [58, 60, 79, 85], "unaryoperationnod": 58, "pointerdereferencenod": 58, "addressoperationnod": 58, "relationalcomparisonnod": 58, "equalitytestnod": 58, "readsvari": 58, "writesvari": 58, "readsfield": 58, "readsel": 58, "writesel": 58, "made": [6, 58, 59, 61, 70, 84, 86, 92], "getacalle": [58, 60, 65, 84], "particularli": [58, 62, 84, 112, 117], "invari": 58, "ingredi": 58, "sanit": [58, 60, 81, 112, 115], "mechan": [6, 58, 71, 74, 87, 92, 95, 103, 111, 115, 121], "beyond": [58, 60, 76, 81, 84], "exposit": 58, "brief": [58, 97, 109, 120], "maxim": [58, 60, 103], "straight": [42, 43, 44, 45, 46, 47, 48, 58], "basicblock": [58, 60, 61], "said": [58, 96, 98, 103, 105], "bb": 58, "whenev": [58, 75, 103, 110], "dualli": 58, "postdom": 58, "eventu": [58, 71, 76, 114], "postdomin": 58, "truth": 58, "saw": [58, 96, 110], "knowledg": [58, 84, 117], "preced": [7, 58, 60, 85, 97, 103, 117], "abl": [6, 58, 73, 76, 110, 111, 120, 121], "conclud": 58, "guarante": [14, 58, 67, 79, 83], "conditionguardnod": 58, "onto": 58, "author": [0, 58, 59, 73, 85], "hood": 58, "gain": 58, "x1": 58, "x2": 58, "x3": 58, "advantag": [58, 76], "literatur": [58, 60], "ssavari": [58, 60, 81], "ssadefinit": [58, 60, 66], "getdefinit": 58, "getvari": [58, 60, 62, 63], "getaus": [58, 66, 80, 81], "getsourcevari": [58, 60], "techniqu": [58, 86, 92], "convention": [58, 106], "undecid": 58, "conserv": [58, 124], "globalvaluenumb": [58, 71], "opaqu": [58, 103], "gvn": [58, 71], "littl": [58, 66, 75], "illustr": [59, 105, 114], "five": [59, 60, 103, 106], "cyclomat": 59, "coupl": [10, 59, 61, 114, 115], "compilationunit": [59, 73], "Their": [19, 59, 60, 74], "primitivetyp": [59, 76, 79], "primit": [59, 60, 76, 79, 93, 95, 101, 103, 119, 121], "classifi": [19, 59, 120], "enumtyp": 59, "pt": [59, 60, 73, 76], "categor": 59, "topleveltyp": 59, "tl": [59, 60], "getcompilationunit": [59, 73, 75], "toplevelclass": 59, "singleton": [59, 62, 75], "typeobject": [59, 79], "typeclon": 59, "typeruntim": 59, "typeserializ": 59, "typeclass": 59, "nc": 59, "getasupertyp": [59, 73, 79, 96], "generictyp": 59, "genericinterfac": [59, 79], "genericclass": 59, "k": [59, 61, 63, 67, 83], "typevari": [59, 79], "parameterizedtyp": 59, "stringtonummap": 59, "stringtonumbermap": 59, "getatypebound": 59, "typebound": 59, "tv": 59, "tb": 59, "unawar": 59, "rawclass": 59, "rawinterfac": 59, "rt": 59, "m1": [10, 59], "hashmap": 59, "wildcard": 59, "getupperbound": 59, "getlowerbound": 59, "genericmethod": 59, "parameterizedmethod": 59, "rawmethod": 59, "cater": 59, "localvariabledecl": 59, "getachildexpr": [59, 76, 85], "sub": [16, 59, 60, 75, 79, 109, 123], "exprpar": 59, "stmtparent": 59, "proper": [59, 60], "enhanc": [59, 88], "amend": 59, "getdoc": [59, 73], "jdoc": [59, 73], "getjavadoc": [59, 73], "javadocel": [59, 73], "tag": [7, 10, 19, 59, 60, 103, 108, 120], "authortag": [59, 73], "depth": [59, 96, 116, 124], "overburden": 59, "altogeth": [59, 60, 81, 113], "metricel": 59, "metricpackag": 59, "metricreftyp": 59, "metricfield": 59, "metriccal": 59, "metricstmt": 59, "getmetr": 59, "40": 59, "getcyclomaticcomplex": 59, "high": [7, 59, 115, 120], "precomput": 59, "println": [16, 59, 74, 85, 103], "stori": 59, "unstructur": 60, "fatal": [8, 60], "request": [5, 6, 19, 60, 64, 65, 87, 90, 96], "getparentcontain": 60, "getabsolutepath": [60, 85], "getrelativepath": [60, 65, 85], "underneath": 60, "getstem": [60, 85], "getextens": [60, 85, 96, 97], "piec": [60, 71, 73, 94, 100, 103, 113, 117], "inclus": [60, 85, 103, 105, 107, 121], "getnumlin": 60, "startsbefor": 60, "endsaft": 60, "l1": 60, "l2": 60, "gettext": [60, 67, 73, 119], "gettermin": 60, "carriag": [60, 103], "u2028": 60, "unicod": [60, 61, 67, 96], "u2029": 60, "paragraph": [60, 120, 123], "getnexttoken": 60, "getprevioustoken": 60, "nine": [60, 102], "eoftoken": 60, "marker": [60, 116], "nullliteraltoken": 60, "booleanliteraltoken": 60, "numericliteraltoken": 60, "stringliteraltoken": 60, "regularexpressiontoken": 60, "identifiertoken": 60, "keywordtoken": 60, "reserv": 60, "punctuatortoken": 60, "punctuat": 60, "symbol": [60, 61, 62, 63, 64, 81, 96, 97, 103, 114], "comma": [3, 6, 60, 94, 96, 102, 103, 106], "commatoken": 60, "bad": [60, 81, 124], "getfirsttoken": 60, "getlasttoken": 60, "linecom": 60, "slashslashcom": 60, "htmllinecom": 60, "htmlcommentstart": 60, "htmlcommentend": 60, "blockcom": 60, "slashstarcom": 60, "surround": [60, 75, 85, 96, 97, 103, 117], "doccom": 60, "delimit": [19, 60, 120], "getlin": 60, "major": 60, "concern": [60, 66, 71, 80, 109], "larger": [60, 76, 103, 106, 110, 124], "toplevel": [60, 62], "stand": [60, 76, 81, 87, 102, 117], "alon": [60, 113], "externalscript": 60, "inlinescript": 60, "codeinattribut": 60, "eventhandlercod": 60, "handler": [60, 84], "onload": 60, "javascripturl": 60, "scheme": [60, 121], "getatoplevel": 60, "gettoplevel": [60, 65], "whitespac": [60, 85, 123], "getnumberoflinesofcod": [60, 85, 96, 97], "getnumberoflinesofcom": 60, "isminifi": 60, "minifi": 60, "heurist": [60, 84], "averag": [60, 96, 103, 117, 119], "besid": [60, 79, 106], "getcontain": 60, "innermost": 60, "getacontrolledstmt": 60, "gettest": 60, "getiter": 60, "getiterationdomain": 60, "getacas": 60, "getbodystmt": 60, "getcatchclaus": 60, "getfin": 60, "disrupt": 60, "uncaught": 60, "thrown": [60, 73, 81], "getrawvalu": 60, "quot": [6, 60, 103, 120, 123], "superexpr": 60, "getel": [60, 65], "elementisomit": 60, "getproperti": [60, 63], "classexpr": 60, "getexpress": 60, "stripparen": 60, "strip": [60, 85], "ternari": [60, 62], "getconsequ": 60, "getaltern": 60, "getpropertynam": [60, 65], "inequ": 60, "isdeleg": 60, "gettag": 60, "gettempl": 60, "exprorstmt": 60, "rewritten": 60, "clarifi": [60, 95], "bracket": [60, 96, 103], "getid": [60, 67, 70], "bindingpattern": [60, 63], "fe": 60, "fun": [60, 77], "getavari": [60, 62], "getidentifi": 60, "getsuperclass": [60, 62], "getconstructor": [60, 65], "yet": [16, 60, 81, 113, 114], "methoddefinit": 60, "counterpart": [60, 63, 81], "fielddefinit": 60, "memberdefinit": 60, "isstat": [60, 69], "iscomput": 60, "constructordefinit": 60, "gettermethoddefinit": 60, "settermethoddefinit": 60, "flavor": 60, "variabledeclar": [60, 63], "getbindingpattern": 60, "objectpattern": 60, "d1": [60, 64], "d2": [60, 64], "meteor": 60, "neither": [60, 76, 79, 81, 103, 106, 113], "nor": [60, 79, 81, 84, 103, 106, 113], "oe": 60, "p1": 60, "p2": 60, "emploi": [60, 75], "es2015modul": 60, "nodemodul": 60, "amdmodul": 60, "stem": 60, "basenam": 60, "getanimportedmodul": 60, "getanexportedsymbol": 60, "getimportedmodul": 60, "four": [1, 60, 61, 81, 85, 96, 102, 103, 112, 116, 117, 121], "globalscop": 60, "functionscop": 60, "catchscop": 60, "classexprscop": 60, "modulescop": 60, "getscopeel": 60, "induc": 60, "getouterscop": 60, "getaninnerscop": 60, "confus": [60, 85, 101], "getscop": [60, 61, 67], "isglob": 60, "isloc": 60, "isparamet": [60, 74], "getadeclar": [60, 62, 63], "iscaptur": 60, "conflict": [10, 60], "platform": [6, 10, 60, 92], "disambigu": [60, 84], "intraprocedur": 60, "although": [60, 61, 79, 85, 102, 107, 113, 119], "controlflowentrynod": 60, "controlflowexitnod": 60, "stmtcontain": [60, 63], "getentri": 60, "getexit": 60, "successor": [60, 81, 84, 93, 102, 103], "invers": [60, 103], "isbranch": 60, "isjoin": 60, "predecessor": [60, 81], "isstart": 60, "phrase": 60, "join": [60, 65, 124], "getanod": 60, "getfirstnod": 60, "getlastnod": 60, "getentrybb": 60, "getstartbb": 60, "isliveatentri": 60, "gv": 60, "getenclosingfunct": [60, 77], "defus": 60, "vardef": 60, "varus": 60, "recal": 60, "getadef": 60, "anywher": [60, 75, 78], "overwritten": 60, "dead": [60, 105], "ssaexplicitdefinit": 60, "ssaimplicitinit": 60, "phi": 60, "ssaphinod": 60, "pseudo": 60, "merg": 60, "ssavariablecaptur": 60, "ssarefinementnod": 60, "pi": 60, "Its": [60, 79, 96], "auxiliari": [60, 86], "wrapper": [60, 84], "getastnod": 60, "getssavari": 60, "resnod": 60, "likewis": [60, 103, 115], "typeinfer": 60, "heap": 60, "insensit": [60, 65], "abstractvalu": 60, "coars": 60, "imprecis": 60, "isindefinit": 60, "inferredtyp": 60, "roughli": [60, 106, 124], "analyzednod": 60, "getatyp": 60, "strictequalitytest": 60, "eq": 60, "hasoperand": 60, "abstractnul": 60, "paraphras": 60, "customabstractvaluetag": 60, "customabstractvalu": 60, "coerc": 60, "tend": [16, 60], "incomplet": 60, "sophist": 60, "suffer": 60, "furthermor": [60, 92, 96], "qualiti": 60, "isimprecis": 60, "builder": 60, "isincomplet": 60, "isuncertain": 60, "despit": 60, "invk": 60, "unabl": [8, 60], "far": [60, 80, 113], "s2": 60, "s1": 60, "substr": [60, 103], "wish": [1, 77, 84], "therebi": 60, "trg": 60, "technic": [60, 61, 87, 89, 98, 103, 108, 119], "equat": 60, "passwordtrack": 60, "passwordvarassign": 60, "getanassignedexpr": [], "rephras": 60, "jsparseerror": 60, "getmessag": 60, "parser": [60, 81, 103], "recover": 60, "angularmodul": 60, "directivedefinit": 60, "factoryrecipedefinit": 60, "filterdefinit": 60, "controllerdefinit": 60, "injectablefunct": 60, "inject": 60, "javacript": 60, "koa": [60, 90], "hapi": [60, 90], "restifi": 60, "serverdefinit": 60, "routehandl": 60, "callback": [60, 65], "requestexpr": 60, "responseexpr": 60, "headerdefinit": 60, "cookiedefinit": 60, "cooki": [60, 65], "requestinputaccess": [60, 65], "nodej": 60, "packagejson": 60, "onlin": 60, "bugtrackerinfo": 60, "contributorinfo": 60, "repositoryinfo": 60, "contributor": [60, 86], "packagedepend": 60, "getadepend": 60, "npmpackag": 60, "getpackagenam": 60, "getpackagejson": 60, "getnodemodulesfold": 60, "node_modul": [6, 60], "getamodul": [60, 62], "dep": [6, 10, 60], "getdepend": 60, "req": 60, "getimportedpath": 60, "reactcompon": 60, "compon": [0, 7, 10, 14, 60, 62, 63, 80, 81, 84, 90, 96, 103, 113], "createclass": 60, "sqlstring": 60, "mysql": [60, 90, 106], "pg": [60, 90], "pool": 60, "sqlite3": [60, 90], "mssql": [60, 90], "sequel": [60, 90], "nosql": 60, "mongodb": [60, 90], "mongoos": 60, "databaseaccess": [60, 65], "ss": 60, "externaldecl": 60, "unqualifi": [60, 63, 103], "externaltypedef": 60, "externalvardecl": 60, "getdocument": 60, "externalglobaldecl": 60, "externalmemberdecl": 60, "subdivid": 60, "externalstaticmemberdecl": 60, "externalinstancememberdecl": 60, "getattribut": 60, "getattributebynam": 60, "getroot": 60, "close": [60, 92, 114, 121], "doctrin": 60, "jsdoctag": 60, "getdescript": 60, "getcom": 60, "getatag": 60, "gettitl": 60, "jsdoctypeexpr": 60, "jsdocanytypeexpr": 60, "jsdocnulltypeexpr": 60, "jsxelement": 60, "jsxattribut": 60, "interleav": 60, "getabodyel": 60, "extractor": [0, 1, 3, 4, 6, 8, 16, 19, 20, 60, 86, 90, 91, 121], "jsonvalu": 60, "jsonprimitivevalu": 60, "jsonnul": 60, "jsonboolean": 60, "jsonnumb": 60, "jsonstr": 60, "jsonarrai": 60, "getelementvalu": 60, "jsonobject": 60, "regexp": [60, 62, 65], "regexpterm": 60, "yamlnod": 60, "getparentnod": 60, "getchildnod": 60, "getachildnod": 60, "getanchor": 60, "anchor": 60, "eval": [7, 60, 70], "yamlvalu": 60, "alias": [60, 63, 91, 94, 98, 100, 106, 109], "scalar": 60, "yamlinteg": 60, "yamlfloat": 60, "yamltimestamp": 60, "yamlbool": 60, "yamlnul": 60, "yamlstr": 60, "yamlscalar": 60, "yamlmap": 60, "yamlsequ": 60, "yamlcollect": 60, "yamlaliasnod": 60, "yamlmergekei": 60, "yamlinclud": 60, "incorpor": [61, 73], "think": [61, 68, 73, 81, 95, 97, 101, 107, 110, 114], "seq": [61, 67], "getit": 61, "resent": 61, "stmtlist": [61, 67], "getleft": 61, "getright": 61, "num": [61, 67], "getfinalbodi": 61, "getastmt": [61, 62, 67, 70], "exceptstmt": [61, 67], "foral": [61, 67, 103, 105, 117, 119], "quantifi": [61, 107, 117, 119, 122], "classdef": [61, 67], "functiondef": [61, 67], "augassign": [61, 67], "augment": [61, 67], "del": [61, 67], "exec": [61, 67], "print": [3, 6, 17, 19, 61, 67, 74, 87], "obj": [61, 67, 84], "attr": [61, 67], "ifexp": [61, 67], "imaginaryliter": [61, 67], "dict": [61, 67], "dictionari": [14, 61], "dictcomp": [61, 67], "setcomp": [61, 67], "listcomp": [61, 67], "genexpr": 61, "subscript": [61, 67, 123], "boolexpr": [61, 67], "speed": [3, 16, 61], "longest": [61, 103], "bb_length": 61, "underscor": [61, 90, 96, 100, 103], "aspect": [13, 62, 109, 112], "interprocedur": [60, 62], "exploit": [62, 64, 112], "particuarli": 62, "excerpt": 62, "getenclosingmodul": 62, "getenclosingmethod": 62, "desugar": 62, "getaprependedmodul": 62, "prepend": 62, "getanincludedmodul": 62, "getaclass": 62, "getclass": 62, "getmodul": 62, "apicontrol": 62, "nth": 62, "getposit": 62, "patternparamet": 62, "tuplepatternparamet": 62, "getdefiningaccess": 62, "splat": 62, "getdefaultvalu": 62, "getacontrolflownod": 62, "lit": 62, "getvaluetext": 62, "getconcatenatedvaluetext": 62, "getnumberofstat": 62, "getarescu": 62, "getrescu": 62, "getensur": 62, "trueliter": 62, "falseliter": 62, "stringcompon": 62, "stringtextcompon": 62, "stringescapesequencecompon": 62, "stringinterpolationcompon": 62, "subshel": 62, "usernameliter": 62, "assignlogicaloper": 62, "getkeywordargu": 62, "getatarget": 62, "getblock": [62, 77], "elseif": 62, "unlessexpr": 62, "instancevari": 62, "classvari": 62, "getdeclaringscop": 62, "staticcontrol": 62, "cd": [3, 10, 62], "read": [14, 62, 97, 108], "readaccess": 62, "writeaccess": 62, "supplement": 63, "typeassert": 63, "infer": [63, 70, 123], "gettypeannot": 63, "getreturntypeannot": 63, "fielddeclar": 63, "isstr": 63, "isvoid": 63, "serverrequest": 63, "localtypeaccess": 63, "qualifiedtypeaccess": 63, "prefix": [1, 63, 96, 102, 103, 121], "importtypeaccess": 63, "predefinedtypeexpr": 63, "thistypeexpr": 63, "functiontypeexpr": 63, "generictypeexpr": 63, "literaltypeexpr": 63, "uniontypeexpr": 63, "intersectiontypeexpr": 63, "indexedaccesstypeexpr": 63, "parenthesizedtypeexpr": 63, "tupletypeexpr": 63, "keyoftypeexpr": 63, "keyof": 63, "typeoftypeexpr": 63, "istypeexpr": 63, "mappedtypeexpr": 63, "typeparamet": 63, "namespaceaccess": 63, "localnamespaceaccess": 63, "qualifiednamespaceaccess": 63, "importnamespaceaccess": 63, "vartypeaccess": 63, "broad": [3, 14, 63, 120], "hasbodi": 63, "gettypeparamet": 63, "gethost": 63, "gettypeargu": [63, 79], "expressionwithtypeargu": 63, "getlocaltypenam": 63, "supertyp": [63, 94, 96, 103, 106], "isabstract": 63, "getasuperinterfac": 63, "getacallsignatur": 63, "getanindexsignatur": 63, "getatypeparamet": 63, "gettypenam": 63, "color": [63, 114, 117], "red": [42, 43, 44, 45, 46, 47, 48, 63], "blue": 63, "nonnullassert": 63, "externalmodulerefer": 63, "isambi": 63, "outermost": 63, "typerefer": 63, "hasunderlyingtyp": 63, "thereof": 63, "intersect": [63, 106], "getsignatur": 63, "getstringindextyp": 63, "getnumberindextyp": 63, "uniontyp": 63, "intersectiontyp": 63, "tupletyp": 63, "numbertyp": 63, "anytyp": 63, "nevertyp": 63, "undefinedtyp": 63, "objectkeywordtyp": 63, "symboltyp": 63, "anonymousinterfacetyp": 63, "typevariabletyp": 63, "thistyp": 63, "typeoftyp": 63, "booleanliteraltyp": 63, "stringliteraltyp": 63, "numberliteraltyp": 63, "booleantyp": 63, "promisetyp": 63, "plainarraytyp": 63, "readonlyarraytyp": 63, "readonlyarrai": 63, "literaltyp": 63, "numberliketyp": 63, "stringliketyp": 63, "booleanliketyp": 63, "canonicalnam": 63, "forward": [7, 13, 63, 65, 84], "usabl": [63, 103], "callsignaturetyp": 63, "getfunctionsignatur": 63, "getconstructorsignatur": 63, "getlastfunctionsignatur": 63, "getlastconstructorsignatur": 63, "getparameternam": 63, "getresolvedcalle": 63, "getresolvedcalleenam": 63, "getresolvedsignatur": 63, "substitut": 63, "getabasetypenam": 63, "recognis": 63, "unfold": 63, "prop": [63, 78], "coincid": 63, "cl": [63, 90], "localtypenam": 63, "localnamespacenam": 63, "typedefinit": 63, "popul": [6, 14, 63, 66, 77, 103, 119], "lexic": [63, 86, 91, 98], "getadefinit": 63, "hastypeparamet": 63, "hastypeargu": 63, "spec": 63, "getnamespacememb": 63, "gettypememb": 63, "getanexportingcontain": 63, "getlocalnamespacenam": 63, "constcastreinterpretcast": 64, "arraytopointerconvers": 64, "virtualmembertofunctionpointerconvers": 64, "myint": [64, 68], "argc": 64, "getlvalu": [64, 68], "getrvalu": [64, 68], "notabl": 64, "integ": [64, 65, 76, 79, 82, 93, 95, 96, 97, 102, 105, 106, 107, 117, 119], "getconvers": 64, "getfullyconvert": [64, 82], "getexplicitlyconvert": 64, "getunderlyingtyp": [64, 68], "regardless": [9, 64, 70, 103, 107, 121], "getaxxx": 64, "abil": 64, "xxx": [64, 67], "getxxx": 64, "usertyp": 64, "getabaseclass": 64, "uninterest": [64, 115], "getatemplateargu": 64, "getdestructor": 64, "isvirtu": 64, "especi": [106, 110], "nich": [], "materi": [], "worri": 92, "constitut": 114, "addsto": [], "tuple1": [], "tuple2": [], "queryabl": [86, 87], "extent": [], "anyon": [114, 119], "sourcemodel": [], "proven": [], "sinkmodel": [], "mayb": 81, "summarymodel": [], "neutralmodel": [], "minor": [], "impact": 107, "taintsink": [], "conn": [], "sqlexcept": [], "createstat": [], "fourth": [102, 116], "fifth": [], "sixth": [], "seventh": [], "eighth": [], "ninth": [], "getinputstream": [], "socket": [65, 84, 90], "ioexcept": 73, "inputstream": [], "stream": [], "returnvalu": [], "taintflow": [], "tenth": [], "eight": 117, "instant": [], "myconfig": [65, 115], "hasflowpath": [65, 81, 112, 115], "came": 65, "getintvalu": 65, "mayhavebooleanvalu": 65, "creation": [6, 10, 65, 68, 87], "getalocalus": 65, "getapropertysourc": 65, "getcalleenod": 65, "getoptionargu": 65, "getcallback": 65, "getareturn": [65, 84], "getinstancemethod": 65, "getstaticmethod": 65, "getaninstancerefer": 65, "getaclassrefer": 65, "arraycreationnod": 65, "getpropertynameexpr": 65, "plu": [65, 85, 96, 103], "startswith": 65, "endswith": 65, "regexptest": 65, "extendcal": 65, "jsonparsercal": [65, 81], "deseri": [65, 90], "jsonstringifycal": 65, "serial": [65, 90], "propertyproject": 65, "clientrequest": 65, "submit": 65, "filenamesourc": 65, "filesystemreadaccess": 65, "filesystemwriteaccess": 65, "persistentreadaccess": 65, "persist": [6, 65, 90], "storag": [65, 92, 94], "persistentwriteaccess": 65, "isusercontrolledobject": 65, "clientsideremoteflowsourc": 65, "getkind": 65, "requestheaderaccess": 65, "getaheadernam": 65, "subcategori": 65, "escap": [65, 84, 90, 96, 103], "accesspath": 65, "getareferenceto": 65, "getanassignmentto": 65, "getanaliasedsourcenod": 65, "mytyp": [65, 84], "typetrack": [65, 84], "t2": [65, 84], "backward": [14, 65, 84, 114, 115], "typebacktrack": [65, 84], "backtrack": [3, 65, 84], "incompat": [65, 79, 106], "room": 66, "mistak": [66, 67, 105, 124], "processstr": 66, "strcpy": 66, "assumpt": [66, 68, 103], "strlencal": 66, "malloccal": 66, "realloc": 66, "effort": 66, "flexibl": 66, "getallocateds": 66, "back": [66, 74, 113], "tip": [42, 43, 44, 45, 46, 47, 48, 66, 67, 70, 79, 90], "properli": [66, 86], "consider": [66, 69, 79], "myfunct": 66, "alpha": 66, "gamma": 66, "defexpr": 66, "ssadef": 66, "getanultimatedefiningvalu": 66, "dline": 66, "ulin": 66, "9": [9, 66, 90, 93, 96, 97, 99, 102, 103, 107, 117], "adjust": 66, "bulk": 67, "importstar": 67, "nonloc": 67, "negat": [67, 76, 95, 96, 97, 105, 124], "drop": [42, 43, 44, 45, 46, 47, 48, 67], "getanitem": 67, "generatorexp": 67, "importexpr": 67, "artifici": 67, "importmemb": 67, "repr": 67, "backtick": 67, "strconst": 67, "yieldfrom": 67, "small": [67, 94, 106, 117], "correctli": [6, 10, 19, 67, 79, 80, 95, 108, 112, 120], "getop": [67, 85], "getcompar": 67, "overwrit": [9, 16, 67], "certainli": [67, 113], "helper": [1, 7, 67, 94, 113], "same_kei": 67, "k1": 67, "k2": 67, "getn": 67, "getakei": 67, "ismethod": [67, 70], "getobject": 67, "cleanli": 67, "getdefinedclass": 67, "toint": [68, 103], "yptr": 68, "preprocessor": 68, "macroinvoc": 68, "isinmacroexpans": 68, "getunspecifiedtyp": [68, 82], "closest": [68, 114, 115], "getparentstmt": 68, "deepli": 68, "nontrivi": 69, "functionaccess": 69, "complic": [10, 69, 73, 101, 114, 119], "sprintf": 69, "hazard": [69, 70], "fetch": [6, 10, 69], "vector": 69, "std": 69, "carefulli": [69, 94, 114], "tempt": [70, 85, 110], "getfunc": 70, "inaccur": [], "valuenumb": 71, "hashcon": 71, "partit": 71, "con": 71, "primari": [6, 14, 71, 103], "primarili": [71, 88, 92], "getanexpr": 71, "obviou": [71, 84], "e1": [71, 124], "e2": [71, 124], "quadrat": 71, "kept": [71, 106], "linear": [71, 124], "strncpy": 71, "destin": 71, "swift": [], "javadoctag": 73, "javadoctext": 73, "getvers": 73, "getauthor": 73, "gettagnam": 73, "versiontag": 73, "paramtag": 73, "getparamnam": 73, "throwstag": 73, "getexceptionnam": 73, "getauthornam": 73, "lst": 73, "misspel": 73, "runtimeexcept": 73, "clearli": [73, 85, 103, 110], "getdocumentedexcept": 73, "tt": [73, 123], "ourselv": 73, "getanexcept": 73, "maythrow": 73, "exn": 73, "malformedurlexcept": 73, "liber": 73, "unrel": [10, 73, 79, 84], "uncheckedexcept": 73, "visiblein": 73, "virtu": 73, "cu": 73, "getpackag": 73, "importtyp": 73, "getimportedtyp": 73, "lib": 1, "untrustedflowsourc": 74, "mux": [74, 90], "requestvar": 74, "gorilla": [74, 90], "functionmodel": 74, "hastaintflow": 74, "functioninput": 74, "inp": 74, "functionoutput": 74, "outp": 74, "hasdataflow": 74, "isreceiv": 74, "isresult": 74, "seem": [74, 77, 114], "strang": [74, 75], "bufio": 74, "newwrit": 74, "bw": 74, "gin": [74, 90], "paramsget": 74, "gonic": 74, "logger": 74, "redirect": [74, 123], "marshal": 74, "unmarsh": 74, "stdlib": 74, "printfcal": 74, "loggercal": 74, "fmt": 74, "getamessagecompon": 74, "classinstanceexpress": 75, "getx": 75, "19": [75, 81, 96], "succe": [75, 79, 96], "polycal": 75, "hit": 75, "reduc": [75, 103, 115], "clinit": 75, "junit": 75, "runner": 75, "testclass": 75, "reduct": 75, "bigger": 76, "31": [76, 103], "smaller": [76, 103, 108, 112, 124], "cycl": [76, 105], "lowest": [76, 97, 103], "63": 76, "exhibit": 76, "revis": [6, 16, 18, 76, 77], "iscompiletimeconst": 76, "cours": [76, 81, 113, 115], "narrow": 76, "wider": 76, "suspect": [76, 110, 117], "width": [76, 103, 123], "64": [3, 76, 103, 106], "overflowpronecomparison": 76, "ltoverflowpronecomparison": 76, "gtoverflowpronecomparison": 76, "familiar": [77, 84, 110, 113, 117, 119], "getanassign": 77, "overlook": 77, "boxedint": 77, "m_valu": 77, "constructorfieldinit": 77, "uniniti": [77, 109], "suspici": [77, 117], "setvalu": 77, "getsubassign": 77, "elimin": [77, 79], "unmodel": 78, "reachabl": [78, 80, 81, 113, 115], "dob": 78, "ancestor": [16, 79, 105, 114], "downcast": 79, "necessarili": [6, 8, 79, 84, 85, 109], "classcastexcept": 79, "ce": 79, "recip": 79, "getelementtyp": 79, "toarrai": 79, "arraylist": 79, "collectiontoarrai": 79, "collectiontoarraycal": 79, "overridesorinstanti": 79, "getactualreturntyp": 79, "abstractcollect": 79, "zookeep": 79, "quorumpeerconfig": 79, "zkprop": 79, "entryset": 79, "dynamicconfigfil": 79, "containskei": 79, "javautilcollect": 79, "mistyp": 79, "juc": 79, "javautilcollectioncontain": 79, "hasstringsignatur": 79, "javautilcollectioncontainscal": 79, "jucc": 79, "subtl": [79, 106], "getargumenttyp": 79, "getcollectionelementtyp": 79, "parameterizedinterfac": 79, "hassupertyp": 79, "havecommondescend": 79, "tp1": 79, "tp2": 79, "commondesc": 79, "juccc": 79, "collelttyp": 79, "argtyp": 79, "wild": 79, "card": 79, "autobox": 79, "getboxedtyp": 79, "getavaluereachablefromsourc": [], "my_re_compil": 80, "re_compil": 80, "assourc": [], "flask": [80, 90], "decompos": 80, "getunknownmemb": 80, "getreturn": 80, "deserv": [], "argpars": [], "argumentpars": [], "parse_arg": [], "getasubclass": 80, "repeatedli": [80, 103, 105], "methodview": 80, "viewclass": 80, "getinst": [], "specialregexp": [], "actioncontrol": [], "applicationcontrol": [], "bridg": [], "assink": [], "txt": [], "behind": 81, "html": [81, 90, 97, 123], "enough": [81, 85, 95], "rise": 81, "unproblemat": 81, "motiv": [81, 84], "bring": [81, 84, 100], "jsontrackingconfig": 81, "jpc": 81, "getoutput": 81, "pr": 81, "popular": 81, "focu": [81, 115], "barrierguardnod": 81, "anymor": 81, "truthinesscheck": 81, "isbarrierguard": [36, 81], "guarded": 81, "payload": 81, "remedi": [81, 84], "But": [81, 84, 85, 114, 117], "flowlabel": 81, "jsonlabel": 81, "maybenulllabel": 81, "lbl": 81, "predlbl": 81, "succlbl": 81, "labeledbarrierguardnod": 81, "fino": [], "plexu": 81, "interop": 81, "rid": 81, "arriv": 81, "vice": [81, 94, 113], "versa": [81, 94, 113], "reappear": 81, "islabeledbarri": 81, "feel": 81, "prototyp": 81, "pollut": 81, "uncontrol": 81, "rangeanalysi": 82, "simplerangeanalysi": 82, "widen": 82, "tightest": 82, "upperbound": 82, "lowerbound": 82, "exprmightoverflow": 82, "convertedexprmightoverflow": 82, "famili": [82, 114], "snprintf": 82, "convsink": 82, "typeupperbound": 82, "decis": 83, "testistru": 83, "sampl": [83, 84, 123], "isvalid": 83, "performact": 83, "logfailur": 83, "accesstoken": 83, "succeed": 83, "strictli": [83, 102, 103], "nullptr": 83, "islessthan": 83, "reader": 84, "firebas": 84, "gradual": 84, "ref": 84, "forecast": 84, "rain": 84, "firebasesettercal": 84, "led": 84, "firebasedatabas": 84, "firebaseref": 84, "tinker": 84, "downsid": 84, "getdatabas": 84, "companion": 84, "conform": [84, 103, 123], "role": [84, 107, 117, 122], "db": [6, 84], "setforecast": 84, "refnam": 84, "asynchron": [84, 90], "fetchforecast": 84, "updateremind": 84, "snapshot": [60, 84], "addremind": 84, "umbrella": 84, "sunscreen": 84, "firebasesnapshotcallback": 84, "firebasesnapshot": 84, "firebasedatabaseread": 84, "recap": 84, "attempt": [6, 17, 84, 94, 121], "smallstep": 84, "wrapdb": 84, "tradeoff": [84, 94], "unrestrict": 84, "huge": [84, 124], "front": 84, "fly": 84, "upsid": 84, "insuffici": 84, "differenti": [0, 1, 84], "lastli": 84, "documentref": 84, "locationref": 84, "domvalueref": 84, "router": [84, 90], "bytebuffercach": 85, "sun": 85, "javac": [85, 90], "basefilemanag": 85, "bytebuff": 85, "capac": 85, "presum": 85, "tighter": 85, "layout": [85, 87], "tightli": [85, 124], "misinterpret": 85, "gettotalnumberoflin": [85, 96], "getnumberofcommentlin": 85, "sayhello": 85, "testus": 85, "rcol": 85, "lcol": 85, "subtract": [85, 96, 103], "overal": 85, "operatorw": 85, "cost": [85, 96], "readabl": [0, 3, 8, 19, 85, 87, 96, 97, 108, 111, 120], "wsouter": 85, "wsinner": 85, "contradict": 85, "wouldn": [85, 94], "knew": [85, 96, 117], "asymmetr": 85, "ideal": [85, 114], "associativeoper": 85, "hbase": 85, "key_slav": 85, "tmp": 85, "seed": 86, "threat": 86, "tradit": 86, "accur": [86, 109], "yourself": 86, "meaning": [86, 87, 121], "signific": [86, 94, 96], "review": [3, 86], "layer": [86, 95], "datalog": [87, 92, 95, 103], "intermediari": [87, 94], "algebra": [87, 94, 98, 107, 113, 124], "ra": 87, "dump": 87, "extension": [87, 103], "dbscheme": [0, 1, 87], "face": [8, 87, 123], "decompil": 87, "resid": 87, "bare": [87, 103], "utf": 87, "changelog": 120, "glossari": [89, 91], "c89": 90, "c17": [], "98": 90, "03": [90, 96], "17": [90, 96], "armclang": [], "gcc": 90, "2019": 90, "arm": 90, "cxx": 90, "hpp": 90, "hh": 90, "hxx": 90, "cc": 90, "sln": [6, 90], "csproj": 90, "cshtml": 90, "xaml": 90, "aka": 90, "golang": 90, "21": [], "recent": [3, 6, 10, 42, 43, 44, 45, 46, 47, 48, 90, 110, 119], "oracl": 90, "jdk": 90, "eclips": 90, "ecj": 90, "kotlinc": [], "kt": [], "2022": [], "mj": 90, "es6": 90, "htm": 90, "xhtm": 90, "xhtml": 90, "vue": 90, "hb": 90, "ej": 90, "njk": 90, "raml": 90, "py": 90, "rb": 90, "erb": 90, "gemspec": 90, "gemfil": 90, "tsx": 90, "mt": [], "ct": [], "preliminari": 90, "armcc": 90, "maven": [6, 90], "plugin": [3, 90], "takari": 90, "lifecycl": 90, "glibc": [10, 90], "maco": [10, 15], "berkelei": 90, "bloomberg": 90, "razor": 90, "dapper": 90, "orm": [59, 90], "entityframework": 90, "nhibern": 90, "winform": 90, "beego": 90, "chi": 90, "couchbas": 90, "gocb": 90, "echo": [6, 90], "glog": 90, "spew": 90, "gokit": 90, "microservic": 90, "toolkit": 90, "gokogiri": 90, "xpath": 90, "crypto": 90, "ssh": 90, "websocket": 90, "goproxi": 90, "proxi": 90, "gowebsocket": 90, "goxpath": 90, "htmlqueri": 90, "jsonpatch": 90, "jsonqueri": 90, "klog": 90, "logru": 90, "macaron": 90, "mongo": 90, "nhooyr": 90, "revel": 90, "sendgrid": 90, "email": [90, 103], "sqlx": 90, "squirrel": 90, "xmlpath": 90, "xmlqueri": 90, "xpathpars": 90, "zap": 90, "guava": 90, "hibern": [59, 90], "ibati": 90, "mybati": 90, "jackson": 90, "jpa": 90, "jaxr": 90, "jakarta": 90, "ee": 90, "jdbc": 90, "kryo": 90, "lombok": [], "snakeyaml": 90, "spring": 90, "mvc": 90, "strut": 90, "thrift": 90, "rpc": 90, "xstream": 90, "axio": 90, "electron": 90, "fastifi": [], "handlebar": 90, "hogan": 90, "jqueri": 90, "lodash": 90, "mustach": 90, "nunjuck": 90, "postgr": [90, 106], "ramda": 90, "nativ": [90, 124], "superag": 90, "swig": 90, "aw": [], "aiohttp": 90, "django": 90, "djangorestframework": 90, "fastapi": 90, "admin": [10, 90], "tornado": 90, "twist": 90, "starlett": 90, "gatewai": 90, "asgi": 90, "ldap3": 90, "lightweight": 90, "protocol": 90, "ldap": 90, "httpx": [], "pycurl": [], "urllib": [], "urllib2": [], "urllib3": [], "dill": 90, "pyyaml": 90, "ruamel": 90, "simplejson": 90, "toml": 90, "ujson": 90, "fabric": 90, "idna": 90, "jmespath": 90, "multidict": 90, "pydant": 90, "yarl": 90, "aioch": 90, "aiomysql": 90, "aiopg": 90, "aiosqlit": [], "asyncpg": 90, "cassandra": [], "driver": [8, 14, 90], "clickhous": 90, "cx_oracl": [], "connector": 90, "mysqlclient": 90, "oracledb": [], "phoenixdb": [], "psycopg2": 90, "pymssql": [], "pymysql": [], "pyodbc": [], "sqlalchemi": 90, "peewe": 90, "cryptographi": 90, "pycryptodom": 90, "pycryptodomex": 90, "rsa": 90, "markupsaf": 90, "libtaxii": [], "taxii": [], "libxml2": [], "lxml": [], "xmltodict": [], "excon": [], "faradai": [], "http_client": [], "httparti": [], "libxml": [], "nokogiri": [], "posix": [], "rubyzip": [], "compress": [], "typhoeu": [], "aexml": [], "cryptokit": [], "cryptoswift": [], "foundat": 92, "grdb": [], "javascriptcor": [], "realm": [], "rncryptor": [], "uikit": [], "webkit": [], "architectur": [], "ubuntu": [], "18": [], "04": 96, "22": 16, "x86": [], "15": [10, 96], "catalina": 10, "big": [10, 115], "sur": 10, "monterei": 10, "ventura": [], "arm64": [], "silicon": 10, "musl": [], "distribut": [1, 6, 7, 10], "alpin": 10, "python3": [], "python2": [], "launcher": 8, "thief": [91, 110, 114, 122], "fire": [91, 114, 122], "crown": [91, 110, 117, 122], "heir": [91, 122], "river": [91, 122], "administr": 92, "awai": [92, 110, 117], "greatli": 92, "crucial": [92, 106], "peopl": [12, 92, 110, 114, 117], "descend": [92, 96, 97, 103, 104, 105, 114], "resembl": [92, 106], "getadescend": 92, "getnumberofdescend": 92, "formal": [92, 98, 103], "hide": [92, 113], "compromis": 92, "implic": [92, 97, 106], "promin": 92, "conceptu": [92, 95, 107], "imper": 92, "physic": [8, 92], "theori": [92, 107], "book": 92, "lowercas": [19, 93, 100, 102, 107, 110, 120], "ariti": [93, 101, 102, 103, 106], "modalia": 93, "modulenam": [93, 103], "newvers": 93, "oldvers": 93, "typealia": 93, "abbrevi": [8, 93, 103, 105], "Or": [6, 93, 101], "onetwo": [93, 100, 101, 106], "onetwothreelib": [93, 100, 101], "shorter": [93, 117, 119], "ot": 93, "predalia": 93, "predicatenam": [93, 103], "ten": [93, 96, 107], "getsuccessor": [93, 102], "issmal": [93, 102], "lessthanten": 93, "whilst": 94, "configa": 94, "configb": 94, "datatyp": [94, 113], "entireti": [94, 103], "unintend": 94, "outdat": 94, "qldoc": [94, 99, 120], "dataflownod": 94, "disk": [5, 7, 94], "expens": [60, 94, 124], "contextu": [94, 103], "optimis": 106, "assess": [], "forc": 6, "computation": [], "100000000": [], "10000": [], "undo": 94, "magic": 94, "push": 94, "benefici": 94, "shouldn": [3, 94], "impli": [94, 103], "getsucc": 94, "monoton": [94, 97, 103], "finit": [94, 95, 96, 102, 103, 106, 107, 113], "timestwo": 95, "peter": 95, "unbound": [95, 102], "intuit": [95, 105], "strictsum": [95, 96, 103], "subexpress": 95, "disjunct": [95, 97], "lsv": [96, 107], "digit": [19, 96, 99, 103, 120], "minu": [96, 103], "2048": 96, "quotat": [96, 117], "backslash": [96, 103], "pleas": [5, 6, 18, 96, 108], "todat": [96, 103], "2016": 96, "april": [96, 103], "2000": 96, "01": 96, "00": 96, "year": [96, 103, 110, 117], "iso": 96, "24": [96, 103], "20160403": 96, "uk": 96, "ambigu": [96, 106], "29": 96, "prime": 96, "getanumb": [96, 105], "min": [96, 103, 107, 117], "rank": [96, 103], "concat": [96, 103], "strictconcat": [96, 103], "lexicograph": [96, 103], "asc": [96, 103, 104], "desc": [96, 103, 104], "ascend": [96, 103], "getsiz": 96, "ti": [96, 103], "500": 96, "smallest": [96, 103], "de": 96, "morgan": 96, "tarski": 96, "dedekind": 96, "avg": [96, 103, 117], "3210": 96, "4th": 96, "strictcount": [96, 103], "trivial": [16, 96, 97, 113], "charat": [96, 103], "60": 96, "135": 96, "indexof": [96, 103, 107, 113], "vertic": [96, 103], "flatten": 96, "getperson": 96, "alic": 96, "bob": 96, "charl": 96, "dian": 96, "getfruit": 96, "orang": 96, "banana": 96, "getpric": 96, "nonmono": 96, "monotonicaggreg": [96, 103], "mono": 96, "201": 96, "101": [96, 105], "price": 96, "bui": 96, "she": 96, "her": 96, "shop": 96, "he": [96, 103, 110, 113, 114], "fruit": 96, "goal": [96, 113], "him": 96, "fixpoint": 96, "distanc": [96, 115], "legal": [96, 102, 106], "lack": 96, "erron": 96, "28": [96, 106, 119], "unchang": 96, "divis": [96, 103], "modulo": [96, 103], "remaind": [96, 103], "221": 96, "221b": 96, "postfix": 96, "somepred": 96, "sqrt": [97, 103, 107, 110, 119], "straightforward": 97, "isthre": 97, "iseven": [97, 106], "ischildof": 97, "isodd": [], "onetwothre": [97, 100, 101, 106], "harder": 16, "spot": [], "cartesian": [], "warnonimplicitthi": [], "existenti": [97, 117], "univers": [97, 106, 117], "mathemat": 97, "highest": [97, 103, 117], "nullari": [], "allexpress": [], "emptyset": [], "getfiletyp": 97, "ishtml": 97, "smallint": [97, 106, 119], "odd": [97, 105], "footnot": [97, 107], "strong": [60, 98, 105, 110, 123], "terminologi": [98, 103], "multilin": [99, 103], "todo": [99, 119], "uppercas": [100, 106, 107], "onetwoqueri": 100, "ott": 100, "bindingset": [102, 103], "applyboth": [], "angl": [], "incrementtwic": [], "meta": [], "twice": [], "newtyp": [103, 106], "tsig": [], "t1": [], "parameterizedmodul": [], "module_expression1": 100, "module_expression2": 100, "reexport": [], "module_express": [100, 101], "qlbuiltin": [], "equivalencerel": [], "symmetr": 102, "getequivalenceclass": [], "equiv": [], "mylibrari": 101, "countrieslib": 101, "countri": [101, 102], "belgium": [101, 102], "franc": [101, 102], "india": 101, "europeancountri": 101, "ec": [101, 121], "easiest": [3, 19, 101, 107, 108, 112, 115], "myfavoritenumb": 101, "villag": [101, 110, 114, 117, 122], "isbald": [101, 110], "gethaircolor": [101, 110, 117], "getag": [101, 110, 117], "issouthern": [101, 110], "south": [101, 110, 117], "southern": 101, "iscountri": 102, "germani": 102, "hascapit": 102, "capit": [102, 103, 121], "brussel": 102, "berlin": 102, "pari": 102, "getaparentof": 102, "revers": 102, "getachildof": 102, "getaneighbor": 102, "austria": 102, "neighbor": 102, "favoritenumb": 102, "prove": 102, "multiplyby4": 102, "shortstr": 102, "anywai": 102, "pluson": 102, "truncat": 102, "firstnam": 102, "ag": [102, 110, 117], "dialect": 103, "stratifi": 103, "hexadecim": 103, "0051": 103, "backu": 103, "naur": 103, "bnf": 103, "juxtaposit": 103, "007c": 103, "asterisk": 103, "002a": 103, "repetit": [3, 103], "002b": 103, "003f": 103, "refus": [103, 117], "walk": [103, 117], "suffic": 103, "toi": 103, "dictat": 103, "multimap": 103, "disjoint": 106, "classless": 103, "modulebodi": 103, "signatureexpr": [], "parameternam": [], "modulesignatureexpr": [], "importmoduleexpr": [], "importmoduleid": 103, "qualid": 103, "simpleid": 103, "moduleexpr": [], "predicateref": 103, "segment": 103, "candid": [103, 114], "subdirectori": [0, 1, 6, 7, 15, 16, 19, 103], "dataclass": [], "indistinguish": [], "0040": 103, "cyclic": 103, "classnam": 103, "dbasetyp": 103, "moduleid": 103, "fundament": 103, "gregorian": 103, "calendar": 103, "month": 103, "hour": 103, "millisecond": 103, "16777216": 103, "16777215": 103, "59": 103, "999": 103, "ieee": 103, "754": 103, "complement": [103, 106], "38132": 103, "countabl": 103, "chronolog": 103, "nan": 103, "var_decl": 103, "lowerid": 103, "fst": 103, "snd": 103, "method_tre": 103, "43": 103, "geturl": [103, 121], "mutabl": 103, "mutat": 103, "circumst": [14, 103], "a0": 103, "a1": 103, "a2": 103, "contigu": 103, "0020": 103, "0009": 103, "000d": 103, "feed": 103, "000a": 103, "slash": [7, 13, 103], "002f": 103, "worst": 103, "trail": [103, 116, 121], "ascii": 103, "0061": 103, "007a": 103, "0041": 103, "005a": 103, "0030": 103, "0039": 103, "005f": 103, "window_width": 103, "window5000_mark_ii": 103, "upperid": 103, "atlowerid": 103, "modulesignaturenam": [], "literalid": 103, "varnam": 103, "2147483648": 103, "002e": 103, "0022": 103, "005c": 103, "006e": 103, "0072": 103, "0074": 103, "simpleannot": 103, "argsannot": 103, "transient": 103, "inline_l": [], "noinlin": 103, "nomag": 103, "noopt": 103, "assume_small_delta": [], "ye": [103, 117], "commonmark": 103, "ellips": 103, "dash": 103, "apostroph": 103, "head": [103, 110, 123], "optbodi": 103, "render": [3, 17, 20, 103, 113, 123], "parenthesi": 103, "overrrid": [], "shadow": [], "predicatesignatur": [], "typesignatur": [], "modulesignatur": [], "signaturepred": [], "modulesignaturebodi": [], "defaultpred": [], "select_expr": 103, "orderbi": 103, "as_expr": 103, "dontcar": 103, "unop": 103, "binop": 103, "eparen": 103, "super_expr": 103, "postfix_cast": 103, "callwithresult": 103, "expression_pragma": [], "setliter": 103, "aggid": 103, "aggorderbi": 103, "squar": [103, 110, 119], "005b": 103, "005d": 103, "expr_i": 103, "fresh": 103, "v_i": 103, "firstli": [103, 105], "weight": 103, "expression_pragma_typ": [], "only_bind_out": [], "only_bind_into": [], "criterion": 103, "adher": 103, "fparen": 103, "ifthen": 103, "inrang": 103, "compop": 103, "tourl": 103, "startlin": [14, 103, 124], "startcol": 103, "endlin": [14, 103], "endcol": 103, "booleanand": 103, "booleannot": 103, "booleanor": 103, "booleanxor": 103, "daysto": 103, "getdai": 103, "gethour": 103, "getminut": 103, "getmonth": 103, "februari": 103, "march": 103, "june": [103, 119], "juli": 103, "august": 103, "septemb": [103, 119], "octob": 103, "novemb": 103, "decemb": 103, "getsecond": 103, "getyear": 103, "toiso": 103, "unspecifi": 103, "aco": 103, "cosin": 103, "asin": 103, "sine": [103, 119], "atan": 103, "tangent": 103, "ceil": 103, "copysign": 103, "magnitud": 103, "co": 103, "cosh": 103, "hyperbol": 103, "exp": 103, "logarithm": [103, 119], "floor": 103, "log10": 103, "log2": 103, "nextaft": 103, "adjac": 103, "nextdown": 103, "infin": 103, "nextup": 103, "pow": 103, "signum": 103, "sin": 103, "sinh": 103, "tan": 103, "tanh": 103, "ulp": 103, "gcd": 103, "greatest": 103, "divisor": [103, 106], "bitand": 103, "bitor": 103, "bitxor": 103, "xor": 103, "bitnot": 103, "bitshiftleft": 103, "bitshiftright": 103, "bitshiftrightsign": 103, "tounicod": 103, "leftmost": 103, "islowercas": 103, "isuppercas": 103, "percent": [103, 116], "regexpcaptur": 103, "regex": 103, "regexpfind": 103, "regexpreplaceal": 103, "replaceal": 103, "splitat": 103, "delim": 103, "tofloat": 103, "touppercas": [103, 106], "trim": 103, "codepointat": [], "codepointcount": [], "phase": 103, "polar": 103, "getproduct": 104, "multipleofthre": 104, "getaneven": 105, "getanodd": 105, "append": [105, 110, 117, 119], "getapar": 105, "getanancestor": 105, "getanancestor2": 105, "liar": 105, "paradox": 105, "isparadox": 105, "macabr": 105, "isextinct": 105, "isdead": 105, "extendsint": [], "canbeprint": [], "nomin": [], "msig": [], "descr": [], "nodesig": [], "edgesig": [], "dst": [], "reachablefrom": [], "618": 106, "ins": 106, "getastr": 106, "specialis": 106, "ONE": 106, "OR": 106, "divisibleint": 106, "getadivisor": 106, "sqlexpr": 106, "postgressqlexpr": 106, "isol": 106, "twothre": 106, "finalonetwothre": [], "onetwofinalextens": [], "onetwotre": [], "foomethod": [], "particip": 106, "optioncal": 106, "somecal": 106, "nocal": 106, "branchnam": 106, "type1": 106, "type2": 106, "type3": 106, "tainttyp": 106, "ttainttyp": 106, "texactvalu": 106, "ttaintedvalu": 106, "initialvaluesourc": 106, "explicitiniti": 106, "parameterpass": 106, "po": 106, "unknowninitialgarbag": 106, "definiteiniti": 106, "di": [106, 114], "getformalarg": 106, "illeg": 106, "constraint": [7, 9, 107, 116], "asid": 107, "dummi": 107, "unaffect": 107, "slight": 107, "simplif": 107, "tautologi": 107, "mandatori": [108, 123], "meet": [0, 1, 108, 112, 114], "craft": 108, "visit": [2, 7, 108, 112, 113, 119, 123], "lab": [108, 112, 119], "websit": [108, 112], "welcom": 108, "guidelin": [108, 111, 124], "fate": 109, "leak": 109, "resourc": 109, "challeng": [109, 114], "unavail": 109, "slow": [109, 124], "overcom": 109, "energi": 109, "intens": 109, "solv": [110, 111, 113, 117, 118, 122, 123], "mysteri": [110, 117, 122], "golden": [110, 117], "castl": [110, 114, 117], "terribl": [110, 117], "crime": [110, 114, 117], "earli": 110, "morn": 110, "north": [110, 117], "destroi": 110, "crop": 110, "reput": 110, "expert": [110, 117], "culprit": 110, "rivalri": 110, "crimin": [110, 114], "nice": 110, "who": [110, 114, 117, 119], "factor": 110, "impos": [7, 9, 110], "theft": 110, "isallowedin": 110, "held": 110, "anxiou": 110, "lurk": 110, "temporarili": [110, 117], "redefin": 110, "clue": [110, 117], "northern": 110, "luckili": 110, "wit": 110, "farmer": 110, "wrote": 110, "arrest": 110, "impress": 110, "seemingli": 112, "benign": [60, 112], "myconfigur": 112, "believ": 112, "man": 113, "goat": 113, "cabbag": 113, "wolf": 113, "boat": 113, "himself": [113, 114], "item": [23, 113, 123], "cargo": 113, "eat": 113, "shore": 113, "travel": [113, 114, 115], "manshor": 113, "goatshor": 113, "cabbageshor": 113, "wolfshor": 113, "initialst": 113, "goalstat": 113, "lengthi": 113, "renderst": 113, "eaten": 113, "issaf": 113, "safeferri": 113, "aim": 113, "reachesvia": 113, "pathsofar": 113, "stepssofar": 113, "revisit": 113, "visitedst": 113, "visitedstatessofar": 113, "tweak": 113, "clearer": [113, 124], "nthen": [], "ison": [], "onleft": [], "manonleft": [], "goatonleft": [], "cabbageonleft": [], "wolfonleft": [], "____": [], "___": [], "__": [], "onright": [], "illegalst": [], "typesaf": [], "tshore": [], "tman": [], "tmanon": [], "tcargo": [], "tgoat": [], "tcabbag": [], "twolf": [], "tstate": [], "puzzl": [114, 118, 122], "phew": 114, "night": [114, 117], "sleep": 114, "chao": 114, "everywher": 114, "marri": 114, "nobodi": [114, 117], "fortun": 114, "claim": 114, "somehow": 114, "argu": 114, "fight": 114, "hopeless": 114, "stai": [114, 121], "throne": 114, "confid": 114, "aliv": 114, "parentof": 114, "sibl": [0, 1, 3, 10, 15, 114], "inde": 114, "isdeceas": 114, "deceas": 114, "childof": 114, "cousin": 114, "relativeof": 114, "ancestorof": 114, "endless": 114, "aha": 114, "extrem": [114, 124], "forget": [114, 117], "announc": 114, "oldest": [114, 117], "hascriminalrecord": 114, "unmask": 114, "congratul": 114, "restor": [6, 114], "peac": 114, "monarch": 114, "whatev": 114, "hair": [114, 117], "hester": [], "hugh": [], "charli": [], "mysourc": 115, "mysink": 115, "quick": [115, 124], "degrad": 115, "5000": 115, "useabl": 115, "naiv": 115, "dramat": 115, "tri": 115, "prune": 115, "evenli": 115, "caveat": 115, "flowexplorationfwd": [], "explorationlimit": 115, "partialflow": [], "dist": 115, "disregard": 115, "poorli": 115, "partialpathgraph": 115, "partialpathnod": 115, "flowexplorationrev": [], "mypartialflow": [], "radiu": 115, "sole": 115, "adhocpartialflow": 115, "focus": [13, 115], "superflu": 115, "creativ": [115, 117], "cut": 115, "fill": 116, "2n": 116, "fiction": [117, 122], "hidden": 117, "mountain": 117, "east": 117, "west": 117, "center": 117, "dark": 117, "tower": 117, "li": [117, 123], "king": 117, "valuabl": 117, "steal": 117, "height": [117, 123], "sadli": 117, "stolen": 117, "convinc": 117, "reluctantli": 117, "talk": 117, "taller": 117, "150": 117, "cm": 117, "blond": 117, "bald": 117, "younger": 117, "brown": 117, "180cm": 117, "190cm": 117, "tallest": 117, "eastern": 117, "newli": [10, 14, 60, 117], "acquir": 117, "skill": [117, 118], "codespac": [], "agnost": [], "mini": 117, "getheight": 117, "150cm": 117, "grai": 117, "didn": [8, 117, 119], "stuck": 117, "closer": 117, "youngest": 117, "shortest": 117, "inconveni": 117, "190": [], "teach": [118, 122], "lgtm": [3, 10, 18, 23, 24, 28, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 67, 68, 69, 70, 73, 75, 76, 77, 79, 80, 81, 85, 90, 94, 96, 103, 108, 110, 112, 113, 114, 116, 117, 119, 120, 121, 123], "245": 119, "2017": 119, "pythagorean": 119, "tripl": 119, "chose": 119, "uncov": 119, "getanarg": 119, "si": 119, "btodo": 119, "06": [], "09": [], "sentenc": 120, "medium": 120, "score": 120, "prioriti": 121, "jiraissu": 121, "externaldata": 121, "getdatapath": 121, "mycompani": [1, 121], "jira": 121, "colon": 121, "unusu": 121, "haslocationinfo": 121, "portion": 121, "loc": 121, "getfullnam": 121, "sc": 121, "el": 121, "complain": 121, "exercis": 122, "critic": 123, "qhelp": [3, 17, 123], "doctyp": 123, "dtd": 123, "violat": 123, "guidanc": 123, "hr": 123, "horizont": 123, "semmlenot": 123, "blockquot": 123, "img": 123, "imag": 123, "alt": 123, "ol": 123, "monospac": 123, "font": 123, "preformat": 123, "tbodi": 123, "ul": 123, "unord": 123, "visibli": 123, "cell": 123, "grid": 123, "tr": 123, "td": 123, "href": 123, "hyperlink": 123, "bold": 123, "em": 123, "emphas": 123, "italic": 123, "ital": 123, "strongli": 123, "sup": 123, "superscript": 123, "semmle_dist": 123, "inc": 123, "storedxss": 123, "xss": 123, "threadunsafeicryptotransform": 123, "threadunsafeicryptotransformoverview": 123, "reiter": 124, "trip": 124, "pitfal": 124, "judg": 124, "badli": 124, "mayaccess": 124, "gettostr": 124, "loggingcal": 124, "unfamiliar": 124, "myclass": 124, "assist": 124, "principl": 124, "chunk": 124, "locinfo": 124, "sameloc": 124, "octo": 0, "alphanumer": [0, 1], "semver": [0, 1, 5], "v2": [0, 1, 3, 14], "discoveri": [0, 1, 16], "semmlecod": [0, 1], "lgpl": 0, "AND": 0, "mit": 0, "spdx": 0, "human": [0, 3, 8, 19], "customsink": 1, "customqueri": 1, "defaultsuitefil": 1, "subcommand": [2, 3, 6, 9, 10, 13, 15, 16, 18, 19], "plumb": [3, 19], "bqr": [3, 19], "md": 3, "processor": [3, 16], "unusedvari": 3, "sarifv2": [3, 14], "v1": [3, 10], "secutiri": 3, "subfold": 3, "exponenti": 3, "bottleneck": 3, "attack": 3, "vendor": 3, "codemirror": 3, "617": 3, "infrastructur": 3, "reformat": 5, "cluster": 6, "autobuild": 6, "unnecessari": [6, 60], "bower_compon": 6, "pip": 6, "virtualenv": 6, "evid": 6, "toolchain": [6, 14], "codeql_extractor_go_build_trac": 6, "dotnet": 6, "msbuild": 6, "usesharedcompil": 6, "rebuild": 6, "gradl": 6, "clean": 6, "mvn": 6, "ant": 6, "bazel": 6, "expung": 6, "spawn_strategi": 6, "nouse_action_cach": 6, "recompil": 6, "noremote_accept_cach": 6, "noremote_upload_local_result": 6, "shutdown": 6, "skeleton": 6, "initialis": 6, "shell": 6, "tracingenviron": 6, "bat": 6, "ps1": 6, "azur": 6, "devop": 6, "vso": 6, "setvari": 6, "unset": 6, "pipelin": 6, "nuget": 6, "cmdline": 6, "displaynam": 6, "agent": 6, "worker": 6, "targettyp": 6, "defaultworkingdirectori": 6, "convertfrom": 6, "psobject": 6, "msbuildarg": 6, "vsbuild": 6, "outdir": 6, "artifactstagingdirectori": 6, "prior": [6, 12], "kafka": [6, 23], "scroll": [6, 23], "pathnam": 7, "criteria": 7, "went": 8, "stderr": 8, "ram": [8, 15], "startup": 8, "reproduc": 8, "logdir": 8, "nonzero": 8, "betterjson": 9, "extractor_root": 9, "extractor_opt": 9, "option1": 9, "group1": 9, "option2": 9, "abc": 9, "102": 9, "extractor_option_nam": 9, "extractor_option_valu": 9, "__allow_unknown_properti": 9, "govern": 9, "adopt": 10, "outlin": 10, "mojav": 10, "xcode": 10, "rosetta": 10, "muslc": 10, "upcom": 10, "safari": 10, "mv": 10, "usr": 10, "xattr": 10, "27": [10, 28], "unpack": 10, "grandpar": 10, "qlref": [13, 16], "deadangularjseventlisten": 13, "angularj": 13, "csd1": 14, "endeavor": 14, "consum": 14, "robust": 14, "originaluribaseid": 14, "uribaseid": 14, "srcroot": 14, "newlinesequ": 14, "columnkind": 14, "formatspecifi": 14, "defaultconfigur": 14, "Will": 14, "opaqueid": 14, "shortdescript": 14, "fulldescript": 14, "reportingconfigur": 14, "artifactcont": 14, "ungroup": 14, "ruleid": 14, "ruleindex": 14, "relatedloc": 14, "partialfingerprint": 14, "fingerprint": 14, "primarylocationlinehash": 14, "in_sourc": 14, "contextregion": 14, "robustli": 14, "startcolumn": 14, "endcolumn": 14, "charoffset": 14, "charlength": 14, "profil": 15, "4096": 15, "mb": 15, "workaround": 16, "myjavaqueri": 16, "dir": [16, 17], "emptythen": 16, "housekeep": 16, "rerun": 16, "diff": 16, "preview": 17, "stdout": 17, "downgrad": 18, "pull": 19, "slug": 23, "mainten": 28, "demo": [35, 40, 41, 59, 60, 61, 67, 70, 73, 117], "conf": [36, 115], "mydataflowconfigu": [37, 40], "literaltourl": 38, "getenvtourlconfigur": 38, "feasibli": 40, "unsurprisingli": 40, "ahead": [42, 43, 44, 45, 46, 47, 48], "yellow": [42, 43, 44, 45, 46, 47, 48], "background": [42, 43, 44, 45, 46, 47, 48], "neo4j": 59, "mozilla": 60, "pdf": 60, "useless": 60, "amp": 60, "trackednod": 60, "trackedexpr": 60, "trackedstringliter": 60, "wherebi": 60, "uncommon": 60, "arc": 60, "openstack": [61, 67], "nova": [61, 67], "ytdl": 61, "youtub": 61, "dl": 61, "f3": 69, "tooltip": 69, "getanimmediateus": 80, "c18": 90, "2021": 90, "26": 94, "mononton": 96, "meaningul": 96, "atupperid": 103, "foo_method": 106, "haspath": 115, "haspartialflow": 115, "haspartialflowrev": 115, "codedupl": 116, "similarfil": 116, "clickabl": 116}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"about": [0, 1, 2, 5, 9, 21, 22, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 59, 61, 71, 73, 76, 79, 80, 82, 83, 85, 86, 92, 108, 109, 116, 120, 121, 124], "codeql": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 72, 86, 87, 88, 89, 91, 108, 111, 118, 119, 120, 121], "pack": [0, 1, 3, 5, 12, 16, 31], "workspac": 28, "ql": [1, 5, 16, 19, 87, 92, 95, 98, 103, 117, 119, 122], "cli": [2, 3, 4, 5, 9, 10, 11, 19, 20, 24, 28], "analyz": [3, 12, 23, 35, 36, 37, 38, 39, 40, 73], "databas": [3, 6, 12, 18, 23, 30, 60, 84, 86, 87, 92, 102, 106], "refer": [4, 13, 87, 96, 98, 101, 103], "creat": [5, 6, 7, 10, 31, 112], "work": [5, 31, 32, 33, 34, 41, 63, 79, 85], "queri": [1, 3, 7, 10, 13, 16, 17, 19, 23, 24, 25, 29, 30, 42, 43, 44, 45, 46, 47, 48, 65, 66, 71, 76, 77, 81, 85, 86, 92, 94, 100, 103, 104, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124], "suit": [3, 7], "exit": 8, "code": [3, 8, 10, 21, 22, 25, 26, 27, 28, 29, 30, 31, 42, 43, 44, 45, 46, 47, 48, 61, 71, 88], "extractor": [9, 87], "option": [9, 15, 108], "get": [10, 70], "start": [10, 117], "publish": 12, "us": [6, 7, 10, 12, 15, 19, 20, 28, 31, 36, 37, 38, 39, 40, 56, 60, 66, 67, 80, 81, 82, 83, 84, 106, 115, 121, 124], "file": [0, 1, 3, 9, 12, 13, 15, 16, 17, 26, 30, 57, 60, 65, 87, 100, 108, 116, 121, 123], "sarif": [3, 14, 87], "output": [14, 16], "specifi": [6, 7, 15, 78], "command": [2, 6, 15, 88], "configur": [12, 15, 24, 28, 30], "test": [1, 16, 17, 24, 29, 30], "custom": [1, 3, 16, 19, 24], "help": [3, 17, 108, 123], "visual": [21, 22, 27, 28, 29, 30, 31, 88], "studio": [21, 22, 27, 28, 29, 30, 31, 88], "featur": 21, "data": [21, 22, 24, 25, 36, 37, 38, 39, 40, 58, 60, 65, 74, 81, 84, 109, 115], "telemetri": [21, 22, 24], "further": [3, 6, 7, 16, 17, 19, 21, 22, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 92, 109, 110, 112, 113, 114, 115, 116, 117, 119, 121, 124], "read": [3, 6, 7, 16, 17, 19, 21, 22, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 92, 109, 110, 112, 113, 114, 115, 116, 117, 119, 121, 124], "why": [22, 71], "we": 22, "collect": [22, 24], "what": 22, "i": [22, 64, 66, 67], "how": 22, "long": 22, "retain": 22, "access": [22, 28, 33, 34, 60, 62, 65, 80], "NOT": 22, "disabl": 22, "report": [22, 30], "your": [10, 23, 26, 29, 112], "project": 23, "choos": [23, 24], "import": [80, 100, 103, 108], "local": [10, 23, 36, 37, 38, 39, 40, 101], "download": [10, 12], "from": [6, 9, 105, 108, 113], "github": [3, 30], "filter": 7, "languag": [6, 72, 90, 92, 94, 98, 103], "run": [3, 6, 12, 14, 16, 17, 18, 23, 24, 25, 30, 42, 43, 44, 45, 46, 47, 48, 119], "multipl": [23, 106, 119], "all": [3, 61, 69, 70], "directori": [3, 10], "select": [101, 103, 104, 108, 110, 112, 114, 116], "quick": 23, "specif": [14, 23, 69, 70, 78, 103, 124], "part": [23, 96], "librari": [1, 23, 37, 56, 57, 58, 59, 60, 61, 62, 63, 66, 71, 74, 77, 82, 83, 84, 90, 94, 100, 103, 117], "view": [7, 16, 23, 26, 31, 108], "previou": 23, "result": [3, 6, 14, 17, 18, 23, 29, 42, 43, 44, 45, 46, 47, 48, 86, 96, 102, 103, 113, 116, 119], "compar": 23, "set": [9, 10, 16, 24, 28, 94, 96, 102, 103], "extens": [24, 28], "edit": [24, 31], "version": [10, 14, 24], "chang": [14, 24], "label": [24, 81], "histori": 24, "item": 24, "retent": [], "period": [], "variant": 86, "analysi": [81, 82, 86, 109], "ad": [5, 116], "explor": [25, 26, 30, 64, 114], "flow": [25, 35, 36, 37, 38, 39, 40, 58, 60, 61, 65, 74, 78, 81, 109, 112, 115], "path": [25, 65, 103, 112, 113], "v": [25, 29, 109], "structur": [0, 1, 26, 42, 43, 44, 45, 46, 47, 48, 108, 123], "sourc": [10, 26, 37, 38, 39, 40, 61, 74, 78, 85, 87, 112, 115], "abstract": [26, 32, 33, 34, 58, 59, 61, 62, 94, 106], "syntax": [26, 32, 33, 34, 58, 59, 60, 61, 62, 63, 99, 103, 119], "tree": [26, 32, 33, 34, 59, 61], "scale": [], "multi": [], "repositori": [1, 19], "control": [35, 58, 60, 61, 62, 83], "export": [], "list": [77, 123], "singl": [3, 58], "organ": [], "search": 117, "add": 7, "troubleshoot": [30, 65, 124], "up": [10, 16, 28], "prerequisit": [17, 18, 28], "instal": [5, 28, 30], "starter": [28, 110], "updat": [28, 34], "an": [5, 28, 64, 68, 85, 93, 96, 106], "exist": [5, 7, 28, 97], "monitor": 29, "perform": [29, 124], "log": 30, "problem": [30, 66, 84], "gener": [14, 17, 30, 59, 76, 84, 92, 112], "bug": 30, "warn": [], "model": [74, 84, 113], "editor": [], "displai": 113, "call": [34, 41, 58, 59, 60, 62, 63, 69, 70, 75, 80, 84, 96, 97, 103], "codebas": [], "make": [], "extern": [60, 77, 94], "api": [71, 80, 81, 84, 85], "public": [], "scan": 3, "ship": [], "depend": [5, 31], "class": [32, 33, 34, 35, 37, 40, 56, 57, 59, 60, 61, 62, 63, 64, 67, 75, 80, 103, 106, 108], "go": [32, 44, 51, 58, 74, 90], "program": [32, 33, 34, 59, 92, 95], "statement": [32, 33, 34, 35, 56, 57, 58, 60, 61, 62, 63, 67, 68, 100, 108, 116], "express": [32, 33, 34, 56, 57, 58, 60, 61, 62, 63, 67, 68, 96, 103], "liter": [32, 33, 34, 62, 67, 96, 103], "unari": [32, 33, 34, 96, 103], "binari": [32, 33, 34, 96, 103], "type": [32, 56, 57, 58, 59, 60, 63, 65, 68, 79, 84, 93, 97, 103, 106, 121, 124], "name": [7, 32, 58, 60, 63, 101, 103, 116], "miscellan": [32, 33, 34, 60], "java": [33, 38, 41, 45, 52, 59, 67, 76, 79, 90], "kotlin": [], "write": [19, 118], "versu": [], "assign": [33, 34, 58, 64, 68], "javascript": [6, 34, 39, 46, 53, 60, 65, 78, 90], "typescript": [6, 34, 39, 63, 90], "identifi": [34, 103, 110], "primari": 34, "properti": [0, 1, 34, 60, 92, 120], "function": [34, 35, 58, 60, 63, 67, 69, 70, 80], "new": [10, 34], "rubi": [6, 48, 55, 62], "constant": [], "oper": [62, 85, 96, 103], "modul": [60, 62, 65, 80, 93, 100, 103], "callabl": [57, 62], "paramet": [62, 63], "pattern": [60, 66, 106], "variabl": [57, 59, 60, 61, 62, 66, 96, 103, 107, 124], "syntact": [60, 61], "sugar": [], "desugar": [], "advanc": [58, 117], "dataflow": 65, "scenario": [], "c": [36, 37, 42, 43, 49, 50, 56, 57, 64, 68, 69, 71, 82, 83, 90], "overview": [39, 58, 60, 62, 63, 69, 77, 81, 84, 89, 94, 108, 109, 112, 116, 123], "regular": 60, "qualifi": 101, "field": [77, 103, 106], "asindirectexpr": [], "asexpr": [], "pass": 66, "address": [], "use_point": [], "implicit": 97, "python": [6, 35, 40, 47, 54, 61, 67, 70, 80, 90], "The": [35, 71, 83, 84, 103, 117, 121], "controlflownod": 35, "exampl": [1, 3, 6, 7, 13, 15, 16, 35, 36, 37, 38, 39, 40, 41, 57, 61, 63, 66, 67, 71, 73, 75, 78, 79, 81, 82, 96, 101, 105, 112, 119, 120], "find": [35, 41, 61, 64, 66, 67, 68, 69, 70, 73, 75, 77, 79, 85, 113, 117], "unreach": 35, "ast": [35, 65], "node": [35, 39, 58, 60, 65], "basicblock": 35, "mutual": [35, 105], "exclus": 35, "basic": [35, 42, 43, 44, 45, 46, 47, 48, 58, 63, 66, 77, 81, 108, 116, 119], "block": [35, 58, 61, 123], "within": [35, 68], "same": 35, "taint": [36, 37, 38, 39, 40, 58, 65, 109], "track": [36, 37, 38, 39, 40, 58, 65, 84, 109], "exercis": [36, 37, 38, 39, 57, 119], "global": [36, 37, 38, 39, 40, 58, 67, 101, 103], "answer": [36, 37, 38, 39, 57], "1": [8, 10, 36, 37, 38, 39, 57, 61, 77, 119], "2": [8, 10, 36, 37, 38, 39, 57, 61, 77, 119], "3": [8, 10, 36, 37, 38, 39, 57, 77, 119], "4": [10, 36, 37, 38, 39, 57, 77, 119], "thi": [37, 38, 40, 76, 80], "articl": [37, 38, 40, 76, 80], "hierarchi": [37, 40, 57], "extend": [37, 42, 43, 44, 45, 46, 47, 48, 66, 106], "5": [10, 37, 57], "6": [10, 37, 57], "sanit": [39, 74], "guard": [39, 58, 83], "addit": [39, 78], "step": 39, "predefin": 40, "sink": [40, 74, 112, 115], "swift": [], "annot": [41, 63, 94, 103], "miss": 41, "overrid": [41, 94, 106], "deprec": [41, 94], "method": [41, 70, 75, 84], "improv": [41, 66, 73, 79, 85], "experi": [], "remov": [42, 43, 44, 45, 46, 47, 48], "fals": [42, 43, 44, 45, 46, 47, 48], "posit": [42, 43, 44, 45, 46, 47, 48], "commonli": 56, "declar": [56, 57, 60, 63, 107, 112], "preprocessor": 56, "predic": [57, 62, 71, 82, 83, 93, 96, 97, 102, 103, 104, 105, 106, 108, 112, 121, 124], "element": [57, 59, 61, 113, 123], "locat": [7, 14, 57, 60, 85, 121], "attribut": [57, 80], "7": 57, "8": 57, "9": 57, "10": 57, "11": 57, "12": 57, "entiti": [58, 66, 103], "bind": [58, 60, 63, 94, 95, 102], "inform": [3, 58, 63, 121], "graph": [58, 59, 60, 75, 80, 109], "domin": 58, "condit": [58, 103, 112], "static": [58, 63, 69], "form": 58, "valu": [58, 71, 103], "number": [58, 71], "summari": [3, 59, 61, 84, 103], "metadata": [19, 59, 103, 108, 112, 120], "metric": 59, "introduc": 60, "textual": 60, "level": [60, 103, 123], "folder": 60, "line": [60, 70, 88], "lexic": [60, 99, 103], "token": [60, 103], "comment": [60, 99, 103], "top": [60, 103], "scope": [12, 60, 61], "definit": [7, 60, 67, 103], "ssa": [60, 66], "infer": 60, "inter": 60, "procedur": 60, "error": [60, 105], "framework": [60, 90], "angularj": 60, "http": 60, "j": 60, "npm": 60, "react": 60, "html": 60, "jsdoc": 60, "jsx": 60, "json": 60, "yaml": 60, "other": [8, 61, 121], "final": [61, 94], "except": 61, "do": 61, "noth": 61, "main": 62, "astnod": 62, "sequenc": 62, "signatur": 63, "interfac": [63, 88], "ambient": 63, "usag": 63, "canon": 63, "resolut": [63, 101, 103], "inherit": [63, 103, 106], "subtyp": [63, 106], "namespac": [63, 101], "convers": 64, "subexpress": 64, "deriv": 64, "destructor": 64, "base": 64, "where": [64, 66, 108], "virtual": 64, "defin": [13, 66, 93, 100, 102, 106, 112, 116], "share": [], "sql": [], "packag": [10, 19], "net": [], "through": [], "concat": [], "map": [], "neutral": [], "cheat": 65, "sheet": 65, "stringop": 65, "util": 65, "system": [6, 65], "network": 65, "untrust": 65, "string": [65, 66, 67, 103], "match": 65, "detect": [6, 66], "potenti": 66, "buffer": 66, "overflow": [66, 76, 82], "memori": 66, "alloc": 66, "omit": [66, 96], "space": [66, 85], "null": 66, "termin": 66, "charact": [66, 103, 106], "interest": 66, "strlen": 66, "includ": [3, 19, 66, 116, 123], "size": 66, "store": [66, 103], "befor": [12, 66], "via": 66, "redund": 67, "branch": 67, "comparison": [67, 76, 97, 103], "integ": [67, 68, 103], "duplic": 67, "dictionari": 67, "style": 67, "getter": 67, "zero": 68, "0": [8, 68, 105], "loop": 68, "initi": [68, 76, 77], "bodi": [68, 100, 106], "ar": 69, "exclud": [69, 77], "referenc": 69, "pointer": 69, "one": [70, 113], "hash": 71, "cons": 71, "guid": 72, "javadoc": 73, "spuriou": 73, "param": 73, "tag": 73, "throw": 73, "propag": 74, "navig": 75, "unus": 75, "prone": 76, "refin": 77, "account": 77, "edg": [77, 112], "case": 77, "everi": 77, "privat": [77, 94], "check": [10, 77, 79, 97, 103, 115], "indirectli": 77, "simplifi": 77, "remot": 78, "format": 78, "problemat": 79, "arrai": 79, "cast": [79, 96, 103], "mismatch": 79, "contain": 79, "instanti": 80, "subclass": 80, "built": [80, 90, 103], "precis": 81, "limit": [81, 84], "standard": [31, 81, 84, 106, 108], "rang": [82, 96, 97, 103], "bound": [82, 107], "ensureseq": 83, "ensureslt": 83, "compareseq": 83, "compareslt": 83, "recogn": 84, "instanc": 84, "whole": 84, "associ": 84, "back": 84, "callback": 84, "when": 84, "determin": [85, 124], "white": 85, "around": 85, "suspici": 85, "nest": 85, "creation": 86, "execut": [16, 86], "glossari": 87, "bqr": 87, "dil": 87, "schema": [14, 87], "qlo": 87, "trap": 87, "tool": [14, 88], "bundl": [], "support": 90, "compil": [6, 90, 94], "requir": [], "platform": [], "softwar": [], "document": 91, "object": [14, 92], "orient": 92, "purpos": 92, "alias": [93, 103], "alia": 93, "cach": 94, "transient": 94, "pragma": 94, "inlin": [94, 123], "inline_l": [], "noinlin": 94, "nomag": 94, "noopt": 94, "only_bind_out": 94, "only_bind_into": 94, "assume_small_delta": [], "monotonicaggreg": 94, "bindingset": 94, "evalu": [95, 96, 103], "process": 95, "valid": [19, 95], "parenthes": [96, 97, 103], "super": [96, 103], "aggreg": [96, 103], "monoton": [96, 105], "recurs": [96, 102, 105, 124], "ani": [96, 103], "don": [96, 103], "t": [96, 103], "care": [96, 103], "formula": [97, 103], "order": [97, 103], "equal": 97, "quantifi": [97, 103], "explicit": [97, 100], "foral": 97, "forex": 97, "logic": [97, 117], "connect": [97, 117], "none": [], "els": 97, "impli": 97, "kind": [100, 102, 103], "parameter": 103, "equival": [], "relat": 103, "without": 102, "behavior": 102, "introduct": [103, 113, 117, 119], "notat": 103, "unicod": 103, "grammar": 103, "architectur": 103, "environ": 103, "direct": 103, "rel": [], "applic": [], "activ": 103, "among": 103, "tupl": 103, "whitespac": 103, "qldoc": 103, "keyword": 103, "int": 103, "float": 103, "simpl": [103, 119], "ambigu": 103, "content": [103, 123], "non": [6, 103, 105, 106], "member": [103, 106], "claus": [103, 104, 108, 112], "postfix": 103, "disambigu": 103, "disjunct": 103, "conjunct": 103, "implic": 103, "negat": 103, "ins": 103, "boolean": 103, "date": 103, "stratif": 103, "layer": 103, "count": 105, "100": [8, 105], "transit": 105, "closur": 105, "restrict": [105, 110], "common": 105, "empti": 105, "primit": 106, "characterist": 106, "concret": 106, "domain": 106, "algebra": 106, "datatyp": 106, "union": 106, "compat": 106, "free": 107, "contribut": [19, 108], "normal": 109, "catch": 110, "fire": 110, "southern": 110, "travel": 110, "bald": 110, "bandit": 110, "construct": 112, "explan": 112, "own": 112, "cross": 113, "river": 113, "walkthrough": 113, "puzzl": 113, "action": 113, "ferri": 113, "state": 113, "anoth": 113, "altern": 113, "solut": 113, "crown": 114, "right": 114, "heir": 114, "king": 114, "basil": 114, "": 114, "true": 114, "experiment": 114, "debug": 115, "partial": 115, "fieldflowbranchlimit": 115, "develop": 116, "superclass": [], "link": 116, "thief": 117, "real": 117, "investig": 117, "hint": 117, "more": 117, "captur": 117, "culprit": 117, "provid": 121, "url": 121, "extract": [10, 121], "tostr": 121, "tutori": 122, "section": 123, "tabl": 123, "inclus": 123, "tip": 124, "elimin": 124, "cartesian": 124, "product": 124, "most": 124, "avoid": 124, "complex": 124, "fold": 124, "qlpack": [0, 1, 12], "yml": [0, 1, 12], "core": 1, "diagnost": 3, "integr": 3, "workflow": 3, "modifi": 5, "progress": [6, 18], "build": 6, "indirect": 6, "trace": 6, "obtain": [6, 10, 23], "lgtm": [6, 7], "com": [6, 7], "reus": 7, "save": 7, "well": 7, "known": 7, "32": 8, "33": 8, "98": 8, "99": 8, "zip": 10, "archiv": 10, "launch": 10, "verifi": 10, "setup": 10, "out": 10, "directli": 10, "copi": 10, "two": 10, "note": 14, "between": 14, "futur": 14, "sariflog": 14, "toolcompon": 14, "reportingdescriptor": 14, "rule": 14, "artifact": 14, "artifactloc": 14, "physicalloc": 14, "region": 14, "codeflow": 14, "threadflow": 14, "threadflowloc": 14, "prepar": 16, "upgrad": 18, "similar": 116, "detail": 116, "extent": 116}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"About CodeQL packs": [[0, "about-codeql-packs"], [31, "about-codeql-packs"]], "CodeQL pack structure": [[0, "codeql-pack-structure"]], "About qlpack.yml files": [[0, "about-qlpack-yml-files"], [1, "about-qlpack-yml-files"]], "qlpack.yml properties": [[0, "qlpack-yml-properties"], [1, "qlpack-yml-properties"]], "About QL packs": [[1, "about-ql-packs"]], "QL pack structure": [[1, "ql-pack-structure"]], "Examples of custom QL packs": [[1, "examples-of-custom-ql-packs"]], "QL packs for custom queries": [[1, "ql-packs-for-custom-queries"]], "QL packs for custom test files": [[1, "ql-packs-for-custom-test-files"]], "Examples of QL packs in the CodeQL repository": [[1, "examples-of-ql-packs-in-the-codeql-repository"]], "Core library pack": [[1, "core-library-pack"]], "Core query pack": [[1, "core-query-pack"]], "Tests for the core QL pack": [[1, "tests-for-the-core-ql-pack"]], "About the CodeQL CLI": [[2, "about-the-codeql-cli"]], "CodeQL CLI commands": [[2, "codeql-cli-commands"]], "Analyzing databases with the CodeQL CLI": [[3, "analyzing-databases-with-the-codeql-cli"]], "Running codeql database analyze": [[3, "running-codeql-database-analyze"]], "Examples": [[3, "examples"], [7, "examples"], [15, "examples"], [36, "examples"], [36, "id1"], [37, "examples"], [37, "id1"], [38, "examples"], [38, "id2"], [39, "examples"], [40, "examples"], [40, "id2"], [57, "examples"], [57, "id3"], [57, "id6"], [57, "id9"], [57, "id12"], [57, "id15"], [57, "id19"], [57, "id21"], [57, "id25"], [57, "id29"], [61, "examples"], [63, "examples"], [63, "id3"]], "Running a single query": [[3, "running-a-single-query"]], "Running a CodeQL pack": [[3, "running-a-codeql-pack"]], "Running query suites": [[3, "running-query-suites"]], "Diagnostic and summary information": [[3, "diagnostic-and-summary-information"]], "Integrating a CodeQL pack into a code scanning workflow in GitHub": [[3, "integrating-a-codeql-pack-into-a-code-scanning-workflow-in-github"]], "Running all queries in a directory": [[3, "running-all-queries-in-a-directory"]], "Including query help for custom CodeQL queries in SARIF files": [[3, "including-query-help-for-custom-codeql-queries-in-sarif-files"]], "Results": [[3, "results"], [17, "results"]], "Further reading": [[3, "further-reading"], [6, "further-reading"], [7, "further-reading"], [16, "further-reading"], [17, "further-reading"], [19, "further-reading"], [21, "further-reading"], [22, "further-reading"], [23, "further-reading"], [24, "further-reading"], [25, "further-reading"], [28, "further-reading"], [29, "further-reading"], [32, "further-reading"], [33, "further-reading"], [34, "further-reading"], [35, "further-reading"], [36, "further-reading"], [37, "further-reading"], [38, "further-reading"], [39, "further-reading"], [40, "further-reading"], [41, "further-reading"], [42, "further-reading"], [43, "further-reading"], [44, "further-reading"], [45, "further-reading"], [46, "further-reading"], [47, "further-reading"], [48, "further-reading"], [56, "further-reading"], [57, "further-reading"], [58, "further-reading"], [59, "further-reading"], [60, "further-reading"], [61, "further-reading"], [63, "further-reading"], [64, "further-reading"], [65, "further-reading"], [66, "further-reading"], [67, "further-reading"], [68, "further-reading"], [69, "further-reading"], [70, "further-reading"], [71, "further-reading"], [73, "further-reading"], [75, "further-reading"], [76, "further-reading"], [77, "further-reading"], [79, "further-reading"], [80, "further-reading"], [81, "further-reading"], [82, "further-reading"], [83, "further-reading"], [84, "further-reading"], [85, "further-reading"], [92, "further-reading"], [109, "further-reading"], [110, "further-reading"], [112, "further-reading"], [113, "further-reading"], [114, "further-reading"], [115, "further-reading"], [116, "further-reading"], [117, "further-reading"], [119, "further-reading"], [121, "further-reading"], [124, "further-reading"]], "CodeQL CLI reference": [[4, "codeql-cli-reference"]], "Creating and working with CodeQL packs": [[5, "creating-and-working-with-codeql-packs"]], "About CodeQL packs and the CodeQL CLI": [[5, "about-codeql-packs-and-the-codeql-cli"]], "Creating a CodeQL pack": [[5, "creating-a-codeql-pack"]], "Modifying an existing QL pack to create a CodeQL pack": [[5, "modifying-an-existing-ql-pack-to-create-a-codeql-pack"]], "Adding and installing dependencies to a CodeQL pack": [[5, "adding-and-installing-dependencies-to-a-codeql-pack"]], "Creating CodeQL databases": [[6, "creating-codeql-databases"]], "Running codeql database create": [[6, "running-codeql-database-create"]], "Progress and results": [[6, "progress-and-results"], [18, "progress-and-results"]], "Creating databases for non-compiled languages": [[6, "creating-databases-for-non-compiled-languages"]], "JavaScript and TypeScript": [[6, "javascript-and-typescript"]], "Python": [[6, "python"]], "Ruby": [[6, "ruby"]], "Creating databases for compiled languages": [[6, "creating-databases-for-compiled-languages"]], "Detecting the build system": [[6, "detecting-the-build-system"]], "Specifying build commands": [[6, "specifying-build-commands"]], "Using indirect build tracing": [[6, "using-indirect-build-tracing"]], "Example of creating a CodeQL database using indirect build tracing": [[6, "example-of-creating-a-codeql-database-using-indirect-build-tracing"]], "Obtaining databases from LGTM.com": [[6, "obtaining-databases-from-lgtm-com"]], "Creating CodeQL query suites": [[7, "creating-codeql-query-suites"]], "Locating queries to add to a query suite": [[7, "locating-queries-to-add-to-a-query-suite"]], "Filtering the queries in a query suite": [[7, "filtering-the-queries-in-a-query-suite"]], "Reusing existing query suite definitions": [[7, "reusing-existing-query-suite-definitions"]], "Example": [[7, "example"], [13, "example"], [16, "example"], [37, "example"], [37, "id4"], [61, "example"], [63, "example"], [63, "id2"], [78, "example"], [81, "example"], [82, "example"], [101, "example"], [101, "id6"], [120, "example"]], "Naming a query suite": [[7, "naming-a-query-suite"]], "Saving a query suite": [[7, "saving-a-query-suite"]], "Specifying well-known query suites": [[7, "specifying-well-known-query-suites"]], "Using query suites with CodeQL": [[7, "using-query-suites-with-codeql"]], "Viewing the query suites used on LGTM.com": [[7, "viewing-the-query-suites-used-on-lgtm-com"]], "Exit codes": [[8, "exit-codes"]], "0": [[8, "id2"]], "1": [[8, "id3"]], "2": [[8, "id4"]], "3": [[8, "id5"]], "32": [[8, "id6"]], "33": [[8, "id7"]], "98": [[8, "id8"]], "99": [[8, "id9"]], "100": [[8, "id10"]], "Other": [[8, "other"], [61, "other"]], "Extractor options": [[9, "extractor-options"]], "About extractor options": [[9, "about-extractor-options"]], "Setting extractor options with the CodeQL CLI": [[9, "setting-extractor-options-with-the-codeql-cli"]], "Setting extractor options from files": [[9, "setting-extractor-options-from-files"]], "Getting started with the CodeQL CLI": [[10, "getting-started-with-the-codeql-cli"]], "Setting up the CodeQL CLI": [[10, "setting-up-the-codeql-cli"]], "1. Download the CodeQL CLI zip package": [[10, "download-the-codeql-cli-zip-package"]], "2. Extract the zip archive": [[10, "extract-the-zip-archive"]], "3. Launch codeql": [[10, "launch-codeql"]], "4. Verify your CodeQL CLI setup": [[10, "verify-your-codeql-cli-setup"]], "Checking out the CodeQL source code directly": [[10, "checking-out-the-codeql-source-code-directly"]], "1. Download the CodeQL CLI zip": [[10, "download-the-codeql-cli-zip"]], "2. Create a new CodeQL directory": [[10, "create-a-new-codeql-directory"]], "3. Obtain a local copy of the CodeQL queries": [[10, "obtain-a-local-copy-of-the-codeql-queries"]], "4. Extract the zip archive": [[10, "id2"]], "5. Launch codeql": [[10, "id3"]], "6. Verify your CodeQL CLI setup": [[10, "id4"]], "Using two versions of the CodeQL CLI": [[10, "using-two-versions-of-the-codeql-cli"]], "CodeQL CLI": [[11, "codeql-cli"]], "Publishing and using CodeQL packs": [[12, "publishing-and-using-codeql-packs"]], "Configuring the qlpack.yml file before publishing": [[12, "configuring-the-qlpack-yml-file-before-publishing"]], "Running codeql pack publish": [[12, "running-codeql-pack-publish"]], "Running codeql pack download <scope>/<pack>": [[12, "running-codeql-pack-download-scope-pack"]], "Using a CodeQL pack to analyze a CodeQL database": [[12, "using-a-codeql-pack-to-analyze-a-codeql-database"]], "Query reference files": [[13, "query-reference-files"]], "Defining a query reference file": [[13, "defining-a-query-reference-file"]], "SARIF output": [[14, "sarif-output"]], "SARIF specification and schema": [[14, "sarif-specification-and-schema"]], "Change notes": [[14, "change-notes"]], "Changes between versions": [[14, "changes-between-versions"]], "Future changes to the output": [[14, "future-changes-to-the-output"]], "Generated SARIF objects": [[14, "generated-sarif-objects"]], "sarifLog object": [[14, "sariflog-object"]], "run object": [[14, "run-object"]], "tool object": [[14, "tool-object"]], "toolComponent object": [[14, "toolcomponent-object"]], "reportingDescriptor object (for rule)": [[14, "reportingdescriptor-object-for-rule"]], "artifact object": [[14, "artifact-object"]], "artifactLocation object": [[14, "artifactlocation-object"]], "result object": [[14, "result-object"]], "location object": [[14, "location-object"]], "physicalLocation object": [[14, "physicallocation-object"]], "region object": [[14, "region-object"]], "codeFlow object": [[14, "codeflow-object"]], "threadFlow object": [[14, "threadflow-object"]], "threadFlowLocation object": [[14, "threadflowlocation-object"]], "Specifying command options in a CodeQL configuration file": [[15, "specifying-command-options-in-a-codeql-configuration-file"]], "Using a CodeQL configuration file": [[15, "using-a-codeql-configuration-file"]], "Testing custom queries": [[16, "testing-custom-queries"]], "Setting up a test QL pack for custom queries": [[16, "setting-up-a-test-ql-pack-for-custom-queries"]], "Setting up the test files for a query": [[16, "setting-up-the-test-files-for-a-query"]], "Running codeql test run": [[16, "running-codeql-test-run"]], "Prepare a query and test files": [[16, "prepare-a-query-and-test-files"]], "Execute the test": [[16, "execute-the-test"]], "View the query test output": [[16, "view-the-query-test-output"]], "Testing query help files": [[17, "testing-query-help-files"]], "Prerequisites": [[17, "prerequisites"], [18, "prerequisites"], [28, "prerequisites"]], "Running codeql generate query-help": [[17, "running-codeql-generate-query-help"]], "Upgrading CodeQL databases": [[18, "upgrading-codeql-databases"]], "Running codeql database upgrade": [[18, "running-codeql-database-upgrade"]], "Using custom queries with the CodeQL CLI": [[19, "using-custom-queries-with-the-codeql-cli"]], "Writing a valid query": [[19, "writing-a-valid-query"]], "Including query metadata": [[19, "including-query-metadata"]], "Packaging custom QL queries": [[19, "packaging-custom-ql-queries"]], "Contributing to the CodeQL repository": [[19, "contributing-to-the-codeql-repository"]], "Using the CodeQL CLI": [[20, "using-the-codeql-cli"]], "About CodeQL for Visual Studio Code": [[21, "about-codeql-for-visual-studio-code"]], "Features": [[21, "features"]], "Data and telemetry": [[21, "data-and-telemetry"]], "About telemetry in CodeQL for Visual Studio Code": [[22, "about-telemetry-in-codeql-for-visual-studio-code"]], "Why we collect data": [[22, "why-we-collect-data"]], "What data is collected": [[22, "what-data-is-collected"]], "How long data is retained": [[22, "how-long-data-is-retained"]], "Access to the data": [[22, "access-to-the-data"]], "What data is NOT collected": [[22, "what-data-is-not-collected"]], "Disabling telemetry reporting": [[22, "disabling-telemetry-reporting"]], "Analyzing your projects": [[23, "analyzing-your-projects"]], "Choosing a database": [[23, "choosing-a-database"]], "Obtaining a local database": [[23, "obtaining-a-local-database"]], "Running a query": [[23, "running-a-query"], [119, "running-a-query"]], "Running multiple queries": [[23, "running-multiple-queries"]], "Running a quick query": [[23, "running-a-quick-query"]], "Running a specific part of a query or library": [[23, "running-a-specific-part-of-a-query-or-library"]], "Running a query on multiple databases": [[23, "running-a-query-on-multiple-databases"]], "Viewing previous queries": [[23, "viewing-previous-queries"]], "Viewing query results": [[23, "viewing-query-results"]], "Comparing query results": [[23, "comparing-query-results"]], "Customizing settings": [[24, "customizing-settings"]], "About CodeQL extension settings": [[24, "about-codeql-extension-settings"]], "Editing settings": [[24, "editing-settings"]], "Choosing a version of the CodeQL CLI": [[24, "choosing-a-version-of-the-codeql-cli"]], "Changing the labels of query history items": [[24, "changing-the-labels-of-query-history-items"]], "Configuring settings for running queries": [[24, "configuring-settings-for-running-queries"]], "Configuring settings for testing queries": [[24, "configuring-settings-for-testing-queries"]], "Configuring settings for telemetry and data collection": [[24, "configuring-settings-for-telemetry-and-data-collection"]], "Exploring data flow with path queries": [[25, "exploring-data-flow-with-path-queries"]], "About path queries": [[25, "about-path-queries"]], "Running path queries in VS Code": [[25, "running-path-queries-in-vs-code"]], "Exploring the structure of your source code": [[26, "exploring-the-structure-of-your-source-code"]], "About the abstract syntax tree": [[26, "about-the-abstract-syntax-tree"]], "Viewing the abstract syntax tree of a source file": [[26, "viewing-the-abstract-syntax-tree-of-a-source-file"]], "CodeQL for Visual Studio Code": [[27, "codeql-for-visual-studio-code"], [88, "codeql-for-visual-studio-code"]], "Setting up CodeQL in Visual Studio Code": [[28, "setting-up-codeql-in-visual-studio-code"]], "Installing the extension": [[28, "installing-the-extension"]], "Configuring access to the CodeQL CLI": [[28, "configuring-access-to-the-codeql-cli"]], "Setting up a CodeQL workspace": [[28, "setting-up-a-codeql-workspace"]], "Using the starter workspace": [[28, "using-the-starter-workspace"]], "Updating an existing workspace for CodeQL": [[28, "updating-an-existing-workspace-for-codeql"]], "Testing CodeQL queries in Visual Studio Code": [[29, "testing-codeql-queries-in-visual-studio-code"]], "About testing queries in VS Code": [[29, "about-testing-queries-in-vs-code"]], "Testing the results of your queries": [[29, "testing-the-results-of-your-queries"]], "Monitoring the performance of your queries": [[29, "monitoring-the-performance-of-your-queries"]], "Troubleshooting CodeQL for Visual Studio Code": [[30, "troubleshooting-codeql-for-visual-studio-code"]], "About the log files": [[30, "about-the-log-files"]], "Troubleshooting installation and configuration problems": [[30, "troubleshooting-installation-and-configuration-problems"]], "Exploring problems with queries and databases": [[30, "exploring-problems-with-queries-and-databases"]], "Exploring problems with running tests": [[30, "exploring-problems-with-running-tests"]], "Generating a bug report for GitHub": [[30, "generating-a-bug-report-for-github"]], "Working with CodeQL packs in Visual Studio Code": [[31, "working-with-codeql-packs-in-visual-studio-code"]], "Using standard CodeQL packs in Visual Studio Code": [[31, "using-standard-codeql-packs-in-visual-studio-code"]], "Creating and editing CodeQL packs in Visual Studio Code": [[31, "creating-and-editing-codeql-packs-in-visual-studio-code"]], "Viewing CodeQL packs and their dependencies in Visual Studio Code": [[31, "viewing-codeql-packs-and-their-dependencies-in-visual-studio-code"]], "Abstract syntax tree classes for working with Go programs": [[32, "abstract-syntax-tree-classes-for-working-with-go-programs"]], "Statement classes": [[32, "statement-classes"], [33, "statement-classes"], [34, "statement-classes"], [56, "statement-classes"], [62, "id6"]], "Expression classes": [[32, "expression-classes"], [33, "expression-classes"], [34, "expression-classes"], [56, "expression-classes"]], "Literals": [[32, "literals"], [33, "literals"], [34, "literals"], [62, "id9"], [96, "literals"], [103, "literals"]], "Unary expressions": [[32, "unary-expressions"], [33, "unary-expressions"], [34, "unary-expressions"]], "Binary expressions": [[32, "binary-expressions"], [33, "binary-expressions"], [34, "binary-expressions"]], "Type expressions": [[32, "type-expressions"]], "Name expressions": [[32, "name-expressions"]], "Miscellaneous": [[32, "miscellaneous"], [33, "miscellaneous"], [34, "miscellaneous"], [60, "miscellaneous"]], "Abstract syntax tree classes for working with Java programs": [[33, "abstract-syntax-tree-classes-for-working-with-java-programs"]], "Assignment expressions": [[33, "assignment-expressions"], [34, "assignment-expressions"]], "Accesses": [[33, "accesses"]], "Abstract syntax tree classes for working with JavaScript and TypeScript programs": [[34, "abstract-syntax-tree-classes-for-working-with-javascript-and-typescript-programs"]], "Identifiers": [[34, "identifiers"], [103, "identifiers"]], "Primary expressions": [[34, "primary-expressions"]], "Properties": [[34, "properties"], [60, "properties"]], "Property accesses": [[34, "property-accesses"]], "Function calls and new": [[34, "function-calls-and-new"]], "Update expressions": [[34, "update-expressions"]], "Analyzing control flow in Python": [[35, "analyzing-control-flow-in-python"]], "About analyzing control flow": [[35, "about-analyzing-control-flow"]], "The ControlFlowNode class": [[35, "the-controlflownode-class"]], "Example finding unreachable AST nodes": [[35, "example-finding-unreachable-ast-nodes"]], "Example finding unreachable statements": [[35, "example-finding-unreachable-statements"]], "The BasicBlock class": [[35, "the-basicblock-class"]], "Example finding mutually exclusive basic blocks": [[35, "example-finding-mutually-exclusive-basic-blocks"]], "Example finding mutually exclusive blocks within the same function": [[35, "example-finding-mutually-exclusive-blocks-within-the-same-function"]], "Analyzing data flow in C and C++": [[36, "analyzing-data-flow-in-c-and-c"]], "About data flow": [[36, "about-data-flow"]], "Local data flow": [[36, "local-data-flow"], [37, "local-data-flow"], [38, "local-data-flow"], [39, "local-data-flow"], [40, "local-data-flow"]], "Using local data flow": [[36, "using-local-data-flow"], [37, "using-local-data-flow"], [38, "using-local-data-flow"], [40, "using-local-data-flow"]], "Using local taint tracking": [[36, "using-local-taint-tracking"], [37, "using-local-taint-tracking"], [38, "using-local-taint-tracking"], [40, "using-local-taint-tracking"]], "Exercises": [[36, "exercises"], [36, "id2"], [37, "exercises"], [37, "id2"], [37, "id5"], [38, "exercises"], [38, "id3"], [39, "exercises"], [39, "id2"], [57, "exercises"], [57, "id1"], [57, "id16"], [57, "id22"], [57, "id26"], [57, "id30"]], "Global data flow": [[36, "global-data-flow"], [37, "global-data-flow"], [38, "global-data-flow"], [39, "global-data-flow"], [40, "global-data-flow"]], "Using global data flow": [[36, "using-global-data-flow"], [37, "using-global-data-flow"], [38, "using-global-data-flow"], [39, "using-global-data-flow"], [40, "using-global-data-flow"]], "Using global taint tracking": [[36, "using-global-taint-tracking"], [37, "using-global-taint-tracking"], [38, "using-global-taint-tracking"], [39, "using-global-taint-tracking"], [40, "using-global-taint-tracking"]], "Answers": [[36, "answers"], [37, "answers"], [38, "answers"], [39, "answers"], [57, "answers"]], "Exercise 1": [[36, "exercise-1"], [37, "exercise-1"], [38, "exercise-1"], [39, "exercise-1"], [57, "exercise-1"], [119, "exercise-1"]], "Exercise 2": [[36, "exercise-2"], [37, "exercise-2"], [38, "exercise-2"], [39, "exercise-2"], [57, "exercise-2"], [119, "exercise-2"]], "Exercise 3": [[36, "exercise-3"], [37, "exercise-3"], [38, "exercise-3"], [39, "exercise-3"], [57, "exercise-3"], [119, "exercise-3"]], "Exercise 4": [[36, "exercise-4"], [37, "exercise-4"], [38, "exercise-4"], [39, "exercise-4"], [57, "exercise-4"], [119, "exercise-4"]], "Analyzing data flow in C#": [[37, "analyzing-data-flow-in-c"]], "About this article": [[37, "about-this-article"], [38, "about-this-article"], [40, "about-this-article"], [76, "about-this-article"], [80, "about-this-article"]], "Flow sources": [[37, "flow-sources"], [38, "flow-sources"]], "Class hierarchy": [[37, "class-hierarchy"], [37, "id3"], [40, "class-hierarchy"], [57, "class-hierarchy"], [57, "id4"], [57, "id7"], [57, "id10"], [57, "id13"], [57, "id17"], [57, "id20"], [57, "id23"], [57, "id27"]], "Extending library data flow": [[37, "extending-library-data-flow"]], "Exercise 5": [[37, "exercise-5"], [57, "exercise-5"]], "Exercise 6": [[37, "exercise-6"], [57, "exercise-6"]], "Analyzing data flow in Java": [[38, "analyzing-data-flow-in-java"]], "Analyzing data flow in JavaScript and TypeScript": [[39, "analyzing-data-flow-in-javascript-and-typescript"]], "Overview": [[39, "overview"], [58, "overview"], [60, "overview"], [62, "overview"], [63, "overview"], [69, "overview"], [77, "overview"], [81, "overview"], [84, "overview"], [108, "overview"], [109, "overview"], [112, "overview"], [116, "overview"], [123, "overview"]], "Data flow nodes": [[39, "data-flow-nodes"], [60, "data-flow-nodes"]], "Source nodes": [[39, "source-nodes"]], "Sanitizers": [[39, "sanitizers"], [74, "sanitizers"]], "Sanitizer guards": [[39, "sanitizer-guards"]], "Additional taint steps": [[39, "additional-taint-steps"]], "Analyzing data flow in Python": [[40, "analyzing-data-flow-in-python"]], "Using local sources": [[40, "using-local-sources"]], "Predefined sources and sinks": [[40, "predefined-sources-and-sinks"]], "Annotations in Java": [[41, "annotations-in-java"]], "About working with annotations": [[41, "about-working-with-annotations"]], "Example: Finding missing @Override annotations": [[41, "example-finding-missing-override-annotations"]], "Example: Finding calls to deprecated methods": [[41, "example-finding-calls-to-deprecated-methods"]], "Improvements": [[41, "improvements"], [73, "improvements"], [79, "improvements"], [79, "id2"]], "Basic query for C and C++ code": [[42, "basic-query-for-c-and-c-code"]], "About the query": [[42, "about-the-query"], [43, "about-the-query"], [44, "about-the-query"], [45, "about-the-query"], [46, "about-the-query"], [47, "about-the-query"], [48, "about-the-query"]], "Running the query": [[42, "running-the-query"], [43, "running-the-query"], [44, "running-the-query"], [45, "running-the-query"], [46, "running-the-query"], [47, "running-the-query"], [48, "running-the-query"]], "About the query structure": [[42, "about-the-query-structure"], [43, "about-the-query-structure"], [44, "about-the-query-structure"], [45, "about-the-query-structure"], [46, "about-the-query-structure"], [47, "about-the-query-structure"], [48, "about-the-query-structure"]], "Extend the query": [[42, "extend-the-query"], [43, "extend-the-query"], [44, "extend-the-query"], [45, "extend-the-query"], [46, "extend-the-query"], [47, "extend-the-query"], [48, "extend-the-query"]], "Remove false positive results": [[42, "remove-false-positive-results"], [43, "remove-false-positive-results"], [44, "remove-false-positive-results"], [45, "remove-false-positive-results"], [46, "remove-false-positive-results"], [47, "remove-false-positive-results"], [48, "remove-false-positive-results"]], "Basic query for C# code": [[43, "basic-query-for-c-code"]], "Basic query for Go code": [[44, "basic-query-for-go-code"]], "Basic query for Java code": [[45, "basic-query-for-java-code"]], "Basic query for JavaScript code": [[46, "basic-query-for-javascript-code"]], "Basic query for Python code": [[47, "basic-query-for-python-code"]], "Basic query for Ruby code": [[48, "basic-query-for-ruby-code"]], "CodeQL for C and C++": [[49, "codeql-for-c-and-c"]], "CodeQL for C#": [[50, "codeql-for-c"]], "CodeQL for Go": [[51, "codeql-for-go"]], "CodeQL for Java": [[52, "codeql-for-java"]], "CodeQL for JavaScript": [[53, "codeql-for-javascript"]], "CodeQL for Python": [[54, "codeql-for-python"]], "CodeQL for Ruby": [[55, "codeql-for-ruby"]], "CodeQL library for C and C++": [[56, "codeql-library-for-c-and-c"]], "About the CodeQL library for C and C++": [[56, "about-the-codeql-library-for-c-and-c"]], "Commonly-used library classes": [[56, "commonly-used-library-classes"]], "Declaration classes": [[56, "declaration-classes"]], "Type classes": [[56, "type-classes"]], "Preprocessor classes": [[56, "preprocessor-classes"]], "CodeQL library for C#": [[57, "codeql-library-for-c"]], "About the CodeQL libraries for C#": [[57, "about-the-codeql-libraries-for-c"]], "Class hierarchies": [[57, "class-hierarchies"]], "Files": [[57, "files"], [65, "files"]], "Predicates": [[57, "predicates"], [57, "id2"], [57, "id5"], [57, "id8"], [57, "id11"], [57, "id14"], [57, "id18"], [57, "id24"], [57, "id28"], [102, "predicates"]], "Elements": [[57, "elements"]], "Locations": [[57, "locations"], [60, "locations"]], "Declarations": [[57, "declarations"]], "Variables": [[57, "variables"], [59, "variables"], [60, "variables"], [61, "variables"], [62, "variables"], [103, "variables"], [107, "variables"]], "Types": [[57, "types"], [59, "types"], [103, "types"], [106, "types"]], "Callables": [[57, "callables"], [62, "callables"]], "Statements": [[57, "statements"], [58, "statements"], [62, "statements"], [63, "statements"], [67, "statements"]], "Expressions": [[57, "expressions"], [58, "expressions"], [62, "expressions"], [62, "id7"], [63, "expressions"], [67, "expressions"], [96, "expressions"], [103, "expressions"]], "Attributes": [[57, "attributes"]], "Exercise 7": [[57, "exercise-7"]], "Exercise 8": [[57, "exercise-8"]], "Exercise 9": [[57, "exercise-9"]], "Exercise 10": [[57, "exercise-10"]], "Exercise 11": [[57, "exercise-11"]], "Exercise 12": [[57, "exercise-12"]], "CodeQL library for Go": [[58, "codeql-library-for-go"]], "Abstract syntax": [[58, "abstract-syntax"], [62, "abstract-syntax"]], "Names": [[58, "names"], [101, "names"]], "Functions": [[58, "functions"], [60, "functions"]], "Entities and name binding": [[58, "entities-and-name-binding"]], "Type information": [[58, "type-information"]], "Control flow": [[58, "control-flow"], [60, "control-flow"]], "Data flow": [[58, "data-flow"], [60, "data-flow"]], "Call graph": [[58, "call-graph"], [59, "call-graph"], [60, "call-graph"]], "Global data flow and taint tracking": [[58, "global-data-flow-and-taint-tracking"]], "Advanced libraries": [[58, "advanced-libraries"]], "Basic blocks and dominance": [[58, "basic-blocks-and-dominance"]], "Condition guard nodes": [[58, "condition-guard-nodes"]], "Static single-assignment form": [[58, "static-single-assignment-form"]], "Global value numbering": [[58, "global-value-numbering"]], "CodeQL library for Java": [[59, "codeql-library-for-java"]], "About the CodeQL library for Java": [[59, "about-the-codeql-library-for-java"]], "Summary of the library classes": [[59, "summary-of-the-library-classes"]], "Program elements": [[59, "program-elements"]], "Generics": [[59, "generics"]], "Abstract syntax tree": [[59, "abstract-syntax-tree"], [61, "abstract-syntax-tree"]], "Metadata": [[59, "metadata"], [103, "metadata"]], "Metrics": [[59, "metrics"]], "CodeQL library for JavaScript": [[60, "codeql-library-for-javascript"]], "Introducing the library": [[60, "introducing-the-library"]], "Textual level": [[60, "textual-level"]], "Files and folders": [[60, "files-and-folders"]], "Lines": [[60, "lines"]], "Lexical level": [[60, "lexical-level"]], "Tokens": [[60, "tokens"]], "Comments": [[60, "comments"], [99, "comments"], [103, "comments"]], "Syntactic level": [[60, "syntactic-level"]], "Top-levels": [[60, "top-levels"]], "Statements and expressions": [[60, "statements-and-expressions"]], "Classes": [[60, "classes"], [64, "classes"], [103, "classes"], [106, "classes"]], "Declarations and binding patterns": [[60, "declarations-and-binding-patterns"]], "Modules": [[60, "modules"], [62, "modules"], [100, "modules"], [103, "modules"]], "Name binding": [[60, "name-binding"], [63, "name-binding"]], "Scopes": [[60, "scopes"]], "Variable declarations and accesses": [[60, "variable-declarations-and-accesses"]], "Definitions and uses": [[60, "definitions-and-uses"]], "SSA": [[60, "ssa"]], "Type inference": [[60, "type-inference"]], "Inter-procedural data flow": [[60, "inter-procedural-data-flow"]], "Syntax errors": [[60, "syntax-errors"]], "Frameworks": [[60, "frameworks"]], "AngularJS": [[60, "angularjs"]], "HTTP framework libraries": [[60, "http-framework-libraries"]], "Node.js": [[60, "node-js"]], "NPM": [[60, "npm"]], "React": [[60, "react"]], "Databases": [[60, "databases"]], "Externs": [[60, "externs"]], "HTML": [[60, "html"]], "JSDoc": [[60, "jsdoc"]], "JSX": [[60, "jsx"]], "JSON": [[60, "json"]], "Regular expressions": [[60, "regular-expressions"]], "YAML": [[60, "yaml"]], "CodeQL library for Python": [[61, "codeql-library-for-python"]], "About the CodeQL library for Python": [[61, "about-the-codeql-library-for-python"]], "Syntactic classes": [[61, "syntactic-classes"]], "Scope": [[61, "scope"]], "Statement": [[61, "statement"]], "Expression": [[61, "expression"]], "Variable": [[61, "variable"]], "Other source code elements": [[61, "other-source-code-elements"]], "1. Finding all finally blocks": [[61, "finding-all-finally-blocks"]], "2. Finding except blocks that do nothing": [[61, "finding-except-blocks-that-do-nothing"]], "Summary": [[61, "summary"], [61, "id2"], [84, "summary"]], "Control flow classes": [[61, "control-flow-classes"]], "CodeQL library for Ruby": [[62, "codeql-library-for-ruby"]], "Main Ruby modules": [[62, "id1"]], "Main predicates in AstNode": [[62, "id2"]], "Callable classes": [[62, "id3"], [62, "id4"]], "Parameter classes": [[62, "id5"]], "Statement sequences": [[62, "id8"]], "Operations": [[62, "id10"]], "Calls": [[62, "id11"], [103, "calls"]], "Control expressions": [[62, "id12"]], "Variable classes": [[62, "id13"]], "Variable access classes": [[62, "id14"]], "CodeQL library for TypeScript": [[63, "codeql-library-for-typescript"]], "Syntax": [[63, "syntax"]], "Type annotations": [[63, "type-annotations"]], "Function signatures": [[63, "function-signatures"]], "Type parameters": [[63, "type-parameters"]], "Classes and interfaces": [[63, "classes-and-interfaces"]], "Ambient declarations": [[63, "ambient-declarations"]], "Static type information": [[63, "static-type-information"]], "Basic usage": [[63, "basic-usage"]], "Working with types": [[63, "working-with-types"]], "Canonical names and named types": [[63, "canonical-names-and-named-types"]], "Function types": [[63, "function-types"]], "Call resolution": [[63, "call-resolution"]], "Inheritance and subtyping": [[63, "inheritance-and-subtyping"]], "Type names": [[63, "type-names"]], "Namespace names": [[63, "namespace-names"]], "Conversions and classes in C and C++": [[64, "conversions-and-classes-in-c-and-c"]], "Conversions": [[64, "conversions"]], "Exploring the subexpressions of an assignment": [[64, "exploring-the-subexpressions-of-an-assignment"]], "Finding derived classes": [[64, "finding-derived-classes"]], "Finding derived classes with destructors": [[64, "finding-derived-classes-with-destructors"]], "Finding base classes where the destructor is not virtual": [[64, "finding-base-classes-where-the-destructor-is-not-virtual"]], "Data flow cheat sheet for JavaScript": [[65, "data-flow-cheat-sheet-for-javascript"]], "Taint tracking path queries": [[65, "taint-tracking-path-queries"]], "DataFlow module": [[65, "dataflow-module"]], "StringOps module": [[65, "stringops-module"]], "Utility": [[65, "utility"]], "System and Network": [[65, "system-and-network"]], "Untrusted data": [[65, "untrusted-data"]], "AST nodes": [[65, "ast-nodes"]], "String matching": [[65, "string-matching"]], "Access paths": [[65, "access-paths"]], "Type tracking": [[65, "type-tracking"]], "Troubleshooting": [[65, "troubleshooting"]], "Detecting a potential buffer overflow": [[66, "detecting-a-potential-buffer-overflow"]], "Problem\u2014detecting memory allocation that omits space for a null termination character": [[66, "problemdetecting-memory-allocation-that-omits-space-for-a-null-termination-character"]], "Basic query": [[66, "basic-query"], [77, "basic-query"]], "Defining the entities of interest": [[66, "defining-the-entities-of-interest"]], "Finding the strlen(string) pattern": [[66, "finding-the-strlen-string-pattern"]], "Defining the basic query": [[66, "defining-the-basic-query"]], "Improving the query using the \u2018SSA\u2019 library": [[66, "improving-the-query-using-the-ssa-library"]], "Including examples where the string size is stored before use": [[66, "including-examples-where-the-string-size-is-stored-before-use"]], "Extending the query to include allocations passed via a variable": [[66, "extending-the-query-to-include-allocations-passed-via-a-variable"]], "Expressions and statements in Python": [[67, "expressions-and-statements-in-python"]], "Example finding redundant \u2018global\u2019 statements": [[67, "example-finding-redundant-global-statements"]], "Example finding \u2018if\u2019 statements with redundant branches": [[67, "example-finding-if-statements-with-redundant-branches"]], "Example finding comparisons to integer or string literals using \u2018is\u2019": [[67, "example-finding-comparisons-to-integer-or-string-literals-using-is"]], "Example finding duplicates in dictionary literals": [[67, "example-finding-duplicates-in-dictionary-literals"]], "Example finding Java-style getters": [[67, "example-finding-java-style-getters"]], "Class and function definitions": [[67, "class-and-function-definitions"]], "Expressions, types, and statements in C and C++": [[68, "expressions-types-and-statements-in-c-and-c"]], "Expressions and types in CodeQL": [[68, "expressions-and-types-in-codeql"]], "Finding assignments to zero": [[68, "finding-assignments-to-zero"]], "Finding assignments of 0 to an integer": [[68, "finding-assignments-of-0-to-an-integer"]], "Statements in CodeQL": [[68, "statements-in-codeql"]], "Finding assignments of 0 in \u2018for\u2019 loop initialization": [[68, "finding-assignments-of-0-in-for-loop-initialization"]], "Finding assignments of 0 within the loop body": [[68, "finding-assignments-of-0-within-the-loop-body"]], "Functions in C and C++": [[69, "functions-in-c-and-c"]], "Finding all static functions": [[69, "finding-all-static-functions"]], "Finding functions that are not called": [[69, "finding-functions-that-are-not-called"]], "Excluding functions that are referenced with a function pointer": [[69, "excluding-functions-that-are-referenced-with-a-function-pointer"]], "Finding a specific function": [[69, "finding-a-specific-function"]], "Functions in Python": [[70, "functions-in-python"]], "Finding all functions called \u201cget\u2026\u201d": [[70, "finding-all-functions-called-get"]], "Finding all methods called \u201cget\u2026\u201d": [[70, "finding-all-methods-called-get"]], "Finding one line methods called \u201cget\u2026\u201d": [[70, "finding-one-line-methods-called-get"]], "Finding a call to a specific function": [[70, "finding-a-call-to-a-specific-function"]], "Hash consing and value numbering": [[71, "hash-consing-and-value-numbering"]], "About the hash consing and value numbering libraries": [[71, "about-the-hash-consing-and-value-numbering-libraries"]], "Example C code": [[71, "example-c-code"]], "Value numbering": [[71, "value-numbering"]], "The value numbering API": [[71, "the-value-numbering-api"]], "Why not a predicate?": [[71, "why-not-a-predicate"]], "Example query": [[71, "example-query"], [71, "id2"]], "Hash consing": [[71, "hash-consing"]], "The hash consing API": [[71, "the-hash-consing-api"]], "CodeQL language guides": [[72, "codeql-language-guides"]], "Javadoc": [[73, "javadoc"]], "About analyzing Javadoc": [[73, "about-analyzing-javadoc"]], "Example: Finding spurious @param tags": [[73, "example-finding-spurious-param-tags"]], "Example: Finding spurious @throws tags": [[73, "example-finding-spurious-throws-tags"]], "Modeling data flow in Go libraries": [[74, "modeling-data-flow-in-go-libraries"]], "Sources": [[74, "sources"]], "Flow propagation": [[74, "flow-propagation"]], "Sinks": [[74, "sinks"]], "Navigating the call graph": [[75, "navigating-the-call-graph"]], "Call graph classes": [[75, "call-graph-classes"]], "Example: Finding unused methods": [[75, "example-finding-unused-methods"]], "Overflow-prone comparisons in Java": [[76, "overflow-prone-comparisons-in-java"]], "Initial query": [[76, "initial-query"]], "Generalizing the query": [[76, "generalizing-the-query"]], "Refining a query to account for edge cases": [[77, "refining-a-query-to-account-for-edge-cases"]], "Finding every private field and checking for initialization": [[77, "finding-every-private-field-and-checking-for-initialization"]], "Refinement 1\u2014excluding fields initialized by lists": [[77, "refinement-1excluding-fields-initialized-by-lists"]], "Refinement 2\u2014excluding fields initialized by external libraries": [[77, "refinement-2excluding-fields-initialized-by-external-libraries"]], "Refinement 3\u2014excluding fields initialized indirectly": [[77, "refinement-3excluding-fields-initialized-indirectly"]], "Refinement 4\u2014simplifying the query": [[77, "refinement-4simplifying-the-query"]], "Specifying additional remote flow sources for JavaScript": [[78, "specifying-additional-remote-flow-sources-for-javascript"]], "Specification format": [[78, "specification-format"]], "Types in Java": [[79, "types-in-java"]], "About working with Java types": [[79, "about-working-with-java-types"]], "Example: Finding problematic array casts": [[79, "example-finding-problematic-array-casts"]], "Example: Finding mismatched contains checks": [[79, "example-finding-mismatched-contains-checks"]], "Using API graphs in Python": [[80, "using-api-graphs-in-python"]], "Module imports": [[80, "module-imports"]], "Accessing attributes": [[80, "accessing-attributes"]], "Calls and class instantiations": [[80, "calls-and-class-instantiations"]], "Subclasses": [[80, "subclasses"]], "Built-in functions and classes": [[80, "built-in-functions-and-classes"]], "Using flow labels for precise data flow analysis": [[81, "using-flow-labels-for-precise-data-flow-analysis"]], "Limitations of basic data-flow analysis": [[81, "limitations-of-basic-data-flow-analysis"]], "Using flow labels": [[81, "using-flow-labels"]], "API": [[81, "api"]], "Standard queries using flow labels": [[81, "standard-queries-using-flow-labels"]], "Using range analysis for C and C++": [[82, "using-range-analysis-for-c-and-c"]], "About the range analysis library": [[82, "about-the-range-analysis-library"]], "Bounds predicates": [[82, "bounds-predicates"]], "Overflow predicates": [[82, "overflow-predicates"]], "Using the guards library in C and C++": [[83, "using-the-guards-library-in-c-and-c"]], "About the guards library": [[83, "about-the-guards-library"]], "The controls predicate": [[83, "the-controls-predicate"]], "The ensuresEq and ensuresLt predicates": [[83, "the-ensureseq-and-ensureslt-predicates"]], "The ensuresEq predicate": [[83, "the-ensureseq-predicate"]], "The ensuresLt predicate": [[83, "the-ensureslt-predicate"]], "The comparesEq and comparesLt predicates": [[83, "the-compareseq-and-compareslt-predicates"]], "The comparesEq predicate": [[83, "the-compareseq-predicate"]], "The comparesLt predicate": [[83, "the-compareslt-predicate"]], "Using type tracking for API modeling": [[84, "using-type-tracking-for-api-modeling"]], "The problem of recognizing method calls": [[84, "the-problem-of-recognizing-method-calls"]], "Type tracking in general": [[84, "type-tracking-in-general"]], "Tracking the database instance": [[84, "tracking-the-database-instance"]], "Tracking in the whole model": [[84, "tracking-in-the-whole-model"]], "Tracking associated data": [[84, "tracking-associated-data"]], "Back-tracking callbacks": [[84, "back-tracking-callbacks"]], "Limitations": [[84, "limitations"]], "When to use type tracking": [[84, "when-to-use-type-tracking"]], "Type tracking in the standard libraries": [[84, "type-tracking-in-the-standard-libraries"]], "Working with source locations": [[85, "working-with-source-locations"]], "About source locations": [[85, "about-source-locations"]], "Location API": [[85, "location-api"]], "Determining white space around an operator": [[85, "determining-white-space-around-an-operator"]], "Find suspicious nesting": [[85, "find-suspicious-nesting"]], "Improving the query": [[85, "improving-the-query"]], "About CodeQL": [[86, "about-codeql"]], "About variant analysis": [[86, "about-variant-analysis"]], "CodeQL analysis": [[86, "codeql-analysis"]], "Database creation": [[86, "database-creation"]], "Query execution": [[86, "query-execution"]], "Query results": [[86, "query-results"]], "About CodeQL databases": [[86, "about-codeql-databases"]], "CodeQL glossary": [[87, "codeql-glossary"]], ".bqrs file": [[87, "bqrs-file"]], "CodeQL database": [[87, "codeql-database"]], "DIL": [[87, "dil"]], "Extractor": [[87, "extractor"]], "QL database schema": [[87, "ql-database-schema"]], ".qlo files": [[87, "qlo-files"]], "SARIF file": [[87, "sarif-file"]], "Source reference": [[87, "source-reference"]], "TRAP file": [[87, "trap-file"]], "CodeQL tools": [[88, "codeql-tools"]], "CodeQL command-line interface": [[88, "codeql-command-line-interface"]], "CodeQL overview": [[89, "codeql-overview"]], "Supported languages and frameworks": [[90, "supported-languages-and-frameworks"]], "Languages and compilers": [[90, "languages-and-compilers"]], "Frameworks and libraries": [[90, "frameworks-and-libraries"]], "C and C++ built-in support": [[90, "c-and-c-built-in-support"]], "C# built-in support": [[90, "c-built-in-support"]], "Go built-in support": [[90, "go-built-in-support"]], "Java built-in support": [[90, "java-built-in-support"]], "JavaScript and TypeScript built-in support": [[90, "javascript-and-typescript-built-in-support"]], "Python built-in support": [[90, "python-built-in-support"]], "CodeQL documentation": [[91, "codeql-documentation"]], "About the QL language": [[92, "about-the-ql-language"]], "About query languages and databases": [[92, "about-query-languages-and-databases"]], "Properties of QL": [[92, "properties-of-ql"]], "QL and object orientation": [[92, "ql-and-object-orientation"]], "QL and general purpose programming languages": [[92, "ql-and-general-purpose-programming-languages"]], "Aliases": [[93, "aliases"], [103, "aliases"]], "Defining an alias": [[93, "defining-an-alias"]], "Module aliases": [[93, "module-aliases"]], "Type aliases": [[93, "type-aliases"]], "Predicate aliases": [[93, "predicate-aliases"]], "Annotations": [[94, "annotations"], [103, "annotations"]], "Overview of annotations": [[94, "overview-of-annotations"]], "abstract": [[94, "abstract"]], "cached": [[94, "cached"]], "deprecated": [[94, "deprecated"]], "external": [[94, "external"]], "transient": [[94, "transient"]], "final": [[94, "final"]], "library": [[94, "library"]], "override": [[94, "override"]], "private": [[94, "private"]], "query": [[94, "query"]], "Compiler pragmas": [[94, "compiler-pragmas"]], "Inlining": [[94, "inlining"]], "pragma[inline]": [[94, "pragma-inline"]], "pragma[noinline]": [[94, "pragma-noinline"]], "pragma[nomagic]": [[94, "pragma-nomagic"]], "pragma[noopt]": [[94, "pragma-noopt"]], "pragma[only_bind_out]": [[94, "pragma-only-bind-out"]], "pragma[only_bind_into]": [[94, "pragma-only-bind-into"]], "Language pragmas": [[94, "language-pragmas"]], "language[monotonicAggregates]": [[94, "language-monotonicaggregates"]], "Binding sets": [[94, "binding-sets"], [102, "binding-sets"]], "bindingset[...]": [[94, "id12"]], "Evaluation of QL programs": [[95, "evaluation-of-ql-programs"]], "Process": [[95, "process"]], "Validity of programs": [[95, "validity-of-programs"]], "Binding": [[95, "binding"]], "Variable references": [[96, "variable-references"]], "Parenthesized expressions": [[96, "parenthesized-expressions"], [103, "parenthesized-expressions"]], "Ranges": [[96, "ranges"], [103, "ranges"]], "Set literal expressions": [[96, "set-literal-expressions"]], "Super expressions": [[96, "super-expressions"]], "Calls to predicates (with result)": [[96, "calls-to-predicates-with-result"]], "Aggregations": [[96, "aggregations"], [103, "aggregations"]], "Evaluation of aggregates": [[96, "evaluation-of-aggregates"]], "Omitting parts of an aggregation": [[96, "omitting-parts-of-an-aggregation"]], "Monotonic aggregates": [[96, "monotonic-aggregates"]], "Example of monotonic aggregates": [[96, "example-of-monotonic-aggregates"]], "Recursive monotonic aggregates": [[96, "recursive-monotonic-aggregates"]], "Any": [[96, "any"], [103, "any"]], "Unary operations": [[96, "unary-operations"], [103, "unary-operations"]], "Binary operations": [[96, "binary-operations"], [103, "binary-operations"]], "Casts": [[96, "casts"], [103, "casts"]], "Don\u2019t-care expressions": [[96, "don-t-care-expressions"], [103, "don-t-care-expressions"]], "Formulas": [[97, "formulas"], [103, "formulas"]], "Comparisons": [[97, "comparisons"], [103, "comparisons"]], "Order": [[97, "order"]], "Equality": [[97, "equality"]], "Type checks": [[97, "type-checks"], [103, "type-checks"]], "Range checks": [[97, "range-checks"], [103, "range-checks"]], "Calls to predicates": [[97, "calls-to-predicates"]], "Parenthesized formulas": [[97, "parenthesized-formulas"], [103, "parenthesized-formulas"]], "Quantified formulas": [[97, "quantified-formulas"], [103, "quantified-formulas"]], "Explicit quantifiers": [[97, "explicit-quantifiers"]], "exists": [[97, "exists"]], "forall": [[97, "forall"]], "forex": [[97, "forex"]], "Implicit quantifiers": [[97, "implicit-quantifiers"]], "Logical connectives": [[97, "logical-connectives"], [117, "logical-connectives"]], "not": [[97, "not"]], "if ... then ... else": [[97, "if-then-else"]], "and": [[97, "and"]], "or": [[97, "or"]], "implies": [[97, "implies"]], "QL language reference": [[98, "ql-language-reference"]], "Lexical syntax": [[99, "lexical-syntax"], [103, "lexical-syntax"]], "Defining a module": [[100, "defining-a-module"]], "Kinds of modules": [[100, "kinds-of-modules"], [103, "kinds-of-modules"]], "File modules": [[100, "file-modules"]], "Library modules": [[100, "library-modules"]], "Query modules": [[100, "query-modules"]], "Explicit modules": [[100, "explicit-modules"]], "Module bodies": [[100, "module-bodies"]], "Importing modules": [[100, "importing-modules"]], "Import statements": [[100, "import-statements"], [108, "import-statements"]], "Name resolution": [[101, "name-resolution"], [103, "name-resolution"]], "Qualified references": [[101, "qualified-references"]], "Selections": [[101, "selections"]], "Namespaces": [[101, "namespaces"]], "Global namespaces": [[101, "global-namespaces"]], "Local namespaces": [[101, "local-namespaces"]], "Defining a predicate": [[102, "defining-a-predicate"]], "Predicates without result": [[102, "predicates-without-result"]], "Predicates with result": [[102, "predicates-with-result"]], "Recursive predicates": [[102, "recursive-predicates"]], "Kinds of predicates": [[102, "kinds-of-predicates"]], "Binding behavior": [[102, "binding-behavior"]], "Database predicates": [[102, "database-predicates"]], "QL language specification": [[103, "ql-language-specification"]], "Introduction": [[103, "introduction"], [113, "introduction"], [117, "introduction"]], "Notation": [[103, "notation"]], "Unicode characters": [[103, "unicode-characters"]], "Grammars": [[103, "grammars"]], "Architecture": [[103, "architecture"]], "Library path": [[103, "library-path"]], "Global environments": [[103, "global-environments"]], "Module environments": [[103, "module-environments"]], "Module definitions": [[103, "module-definitions"]], "Import directives": [[103, "import-directives"]], "Module resolution": [[103, "module-resolution"]], "Module references and active modules": [[103, "module-references-and-active-modules"]], "Kinds of types": [[103, "kinds-of-types"]], "Type references": [[103, "type-references"]], "Relations among types": [[103, "relations-among-types"]], "Typing environments": [[103, "typing-environments"]], "Active types": [[103, "active-types"]], "Values": [[103, "values"]], "Kinds of values": [[103, "kinds-of-values"]], "Ordering": [[103, "ordering"]], "Tuples": [[103, "tuples"]], "The store": [[103, "the-store"]], "Tokenization": [[103, "tokenization"]], "Whitespace": [[103, "whitespace"]], "QLDoc (qldoc)": [[103, "qldoc-qldoc"]], "Keywords": [[103, "keywords"]], "Operators": [[103, "operators"]], "Integer literals (int)": [[103, "integer-literals-int"]], "Float literals (float)": [[103, "float-literals-float"]], "String literals (string)": [[103, "string-literals-string"]], "Simple annotations": [[103, "simple-annotations"]], "Parameterized annotations": [[103, "parameterized-annotations"]], "QLDoc": [[103, "qldoc"]], "Ambiguous QLDoc": [[103, "ambiguous-qldoc"]], "Inheriting QLDoc": [[103, "inheriting-qldoc"]], "Content": [[103, "content"]], "Top-level entities": [[103, "top-level-entities"]], "Non-member predicates": [[103, "non-member-predicates"]], "Class environments": [[103, "class-environments"]], "Members": [[103, "members"]], "Characters": [[103, "characters"]], "Member predicates": [[103, "member-predicates"], [106, "member-predicates"]], "Fields": [[103, "fields"], [106, "fields"]], "Select clauses": [[103, "select-clauses"], [104, "select-clauses"]], "Queries": [[103, "queries"], [104, "queries"]], "Super": [[103, "super"]], "Postfix casts": [[103, "postfix-casts"]], "Calls with results": [[103, "calls-with-results"]], "Set literals": [[103, "set-literals"]], "Disambiguation of expressions": [[103, "disambiguation-of-expressions"]], "Disjunctions": [[103, "disjunctions"]], "Conjunctions": [[103, "conjunctions"]], "Implications": [[103, "implications"]], "Conditional formulas": [[103, "conditional-formulas"]], "Negations": [[103, "negations"]], "Disambiguation of formulas": [[103, "disambiguation-of-formulas"]], "Built-ins": [[103, "built-ins"]], "Non-member built-ins": [[103, "non-member-built-ins"]], "Built-ins for boolean": [[103, "built-ins-for-boolean"]], "Built-ins for date": [[103, "built-ins-for-date"]], "Built-ins for float": [[103, "built-ins-for-float"]], "Built-ins for int": [[103, "built-ins-for-int"]], "Built-ins for string": [[103, "built-ins-for-string"]], "Evaluation": [[103, "evaluation"]], "Stratification": [[103, "stratification"]], "Layer evaluation": [[103, "layer-evaluation"]], "Query evaluation": [[103, "query-evaluation"]], "Summary of syntax": [[103, "summary-of-syntax"]], "Query predicates": [[104, "query-predicates"]], "Recursion": [[105, "recursion"]], "Examples of recursive predicates": [[105, "examples-of-recursive-predicates"]], "Counting from 0 to 100": [[105, "counting-from-0-to-100"]], "Mutual recursion": [[105, "mutual-recursion"]], "Transitive closures": [[105, "transitive-closures"]], "Restrictions and common errors": [[105, "restrictions-and-common-errors"]], "Empty recursion": [[105, "empty-recursion"]], "Non-monotonic recursion": [[105, "non-monotonic-recursion"]], "Primitive types": [[106, "primitive-types"]], "Defining a class": [[106, "defining-a-class"]], "Class bodies": [[106, "class-bodies"]], "Characteristic predicates": [[106, "characteristic-predicates"]], "Concrete classes": [[106, "concrete-classes"]], "Abstract classes": [[106, "abstract-classes"]], "Overriding member predicates": [[106, "overriding-member-predicates"]], "Multiple inheritance": [[106, "multiple-inheritance"]], "Non-extending subtypes": [[106, "non-extending-subtypes"]], "Character types and class domain types": [[106, "character-types-and-class-domain-types"]], "Algebraic datatypes": [[106, "algebraic-datatypes"]], "Defining an algebraic datatype": [[106, "defining-an-algebraic-datatype"]], "Standard pattern for using algebraic datatypes": [[106, "standard-pattern-for-using-algebraic-datatypes"]], "Type unions": [[106, "type-unions"]], "Database types": [[106, "database-types"]], "Type compatibility": [[106, "type-compatibility"]], "Declaring a variable": [[107, "declaring-a-variable"]], "Free and bound variables": [[107, "free-and-bound-variables"]], "About CodeQL queries": [[108, "about-codeql-queries"]], "Basic query structure": [[108, "basic-query-structure"]], "Query metadata": [[108, "query-metadata"]], "Optional CodeQL classes and predicates": [[108, "optional-codeql-classes-and-predicates"]], "From clause": [[108, "from-clause"]], "Where clause": [[108, "where-clause"]], "Select clause": [[108, "select-clause"], [112, "select-clause"]], "Viewing the standard CodeQL queries": [[108, "viewing-the-standard-codeql-queries"]], "Contributing queries": [[108, "contributing-queries"]], "Query help files": [[108, "query-help-files"], [123, "query-help-files"]], "About data flow analysis": [[109, "about-data-flow-analysis"]], "Data flow graph": [[109, "data-flow-graph"]], "Normal data flow vs taint tracking": [[109, "normal-data-flow-vs-taint-tracking"]], "Catch the fire starter": [[110, "catch-the-fire-starter"]], "Select the southerners": [[110, "select-the-southerners"]], "Travel restrictions": [[110, "travel-restrictions"]], "Identify the bald bandits": [[110, "identify-the-bald-bandits"]], "CodeQL queries": [[111, "codeql-queries"]], "Creating path queries": [[112, "creating-path-queries"]], "Path query examples": [[112, "path-query-examples"]], "Constructing a path query": [[112, "constructing-a-path-query"]], "Path query metadata": [[112, "path-query-metadata"]], "Generating path explanations": [[112, "generating-path-explanations"]], "Defining your own edges predicate": [[112, "defining-your-own-edges-predicate"]], "Declaring sources and sinks": [[112, "declaring-sources-and-sinks"]], "Defining flow conditions": [[112, "defining-flow-conditions"]], "Cross the river": [[113, "cross-the-river"]], "Walkthrough": [[113, "walkthrough"]], "Model the elements of the puzzle": [[113, "model-the-elements-of-the-puzzle"]], "Model the action of \u201cferrying\u201d": [[113, "model-the-action-of-ferrying"]], "Find paths from one state to another": [[113, "find-paths-from-one-state-to-another"]], "Display the results": [[113, "display-the-results"]], "Alternative solutions": [[113, "alternative-solutions"]], "Crown the rightful heir": [[114, "crown-the-rightful-heir"]], "King Basil\u2019s heir": [[114, "king-basil-s-heir"]], "Select the true heir": [[114, "select-the-true-heir"]], "Experimental explorations": [[114, "experimental-explorations"]], "Debugging data-flow queries using partial flow": [[115, "debugging-data-flow-queries-using-partial-flow"]], "Checking sources and sinks": [[115, "checking-sources-and-sinks"]], "fieldFlowBranchLimit": [[115, "fieldflowbranchlimit"]], "Partial flow": [[115, "partial-flow"]], "Defining the results of a query": [[116, "defining-the-results-of-a-query"]], "About query results": [[116, "about-query-results"]], "Developing a select statement": [[116, "developing-a-select-statement"]], "Basic select statement": [[116, "basic-select-statement"]], "Including the name of the similar file": [[116, "including-the-name-of-the-similar-file"]], "Adding a link to the similar file": [[116, "adding-a-link-to-the-similar-file"]], "Adding details of the extent of similarity": [[116, "adding-details-of-the-extent-of-similarity"]], "Find the thief": [[117, "find-the-thief"]], "QL libraries": [[117, "ql-libraries"]], "Start the search": [[117, "start-the-search"]], "The real investigation": [[117, "the-real-investigation"]], "Hints": [[117, "hints"]], "More advanced queries": [[117, "more-advanced-queries"]], "Capture the culprit": [[117, "capture-the-culprit"]], "Writing CodeQL queries": [[118, "writing-codeql-queries"]], "Introduction to QL": [[119, "introduction-to-ql"]], "Basic syntax": [[119, "basic-syntax"]], "Simple exercises": [[119, "simple-exercises"]], "Example query with multiple results": [[119, "example-query-with-multiple-results"]], "Example CodeQL queries": [[119, "example-codeql-queries"]], "Metadata for CodeQL queries": [[120, "metadata-for-codeql-queries"]], "About query metadata": [[120, "about-query-metadata"]], "Metadata properties": [[120, "metadata-properties"]], "Providing locations in CodeQL queries": [[121, "providing-locations-in-codeql-queries"]], "About locations": [[121, "about-locations"]], "Providing URLs": [[121, "providing-urls"]], "File URLs": [[121, "file-urls"]], "Other types of URL": [[121, "other-types-of-url"]], "Providing location information": [[121, "providing-location-information"]], "Using extracted location information": [[121, "using-extracted-location-information"]], "The toString() predicate": [[121, "the-tostring-predicate"]], "QL tutorials": [[122, "ql-tutorials"]], "Structure": [[123, "structure"]], "Section-level elements": [[123, "section-level-elements"]], "Block elements": [[123, "block-elements"]], "List elements": [[123, "list-elements"]], "Table elements": [[123, "table-elements"]], "Inline content": [[123, "inline-content"]], "Query help inclusion": [[123, "query-help-inclusion"]], "Section-level include elements": [[123, "section-level-include-elements"]], "Block-level include elements": [[123, "block-level-include-elements"]], "Troubleshooting query performance": [[124, "troubleshooting-query-performance"]], "About query performance": [[124, "about-query-performance"]], "Performance tips": [[124, "performance-tips"]], "Eliminate cartesian products": [[124, "eliminate-cartesian-products"]], "Use specific types": [[124, "use-specific-types"]], "Determine the most specific types of a variable": [[124, "determine-the-most-specific-types-of-a-variable"]], "Avoid complex recursion": [[124, "avoid-complex-recursion"]], "Fold predicates": [[124, "fold-predicates"]]}, "indexentries": {"alias": [[93, "index-0"]], "abstract": [[94, "index-0"]], "cached": [[94, "index-1"]], "deprecated": [[94, "index-2"]], "external": [[94, "index-3"]], "final": [[94, "index-5"]], "override": [[94, "index-6"]], "pragma": [[94, "index-8"]], "private": [[94, "index-7"]], "transient": [[94, "index-4"]], "unbound": [[95, "index-0"]], "variable": [[95, "index-0"], [107, "index-0"], [107, "index-1"]], "addition": [[96, "index-14"]], "aggregate": [[96, "index-4"]], "any": [[96, "index-13"]], "average": [[96, "index-7"]], "avg": [[96, "index-7"]], "concat": [[96, "index-14"], [96, "index-9"]], "concatenation": [[96, "index-14"]], "count": [[96, "index-5"]], "division": [[96, "index-14"]], "literal": [[96, "index-0"]], "max": [[96, "index-6"]], "maximum": [[96, "index-6"]], "min": [[96, "index-6"]], "minimum": [[96, "index-6"]], "modulo": [[96, "index-14"]], "multiplication": [[96, "index-14"]], "range": [[96, "index-1"]], "rank": [[96, "index-10"]], "setliteral": [[96, "index-2"]], "strictconcat": [[96, "index-11"]], "strictcount": [[96, "index-11"]], "strictsum": [[96, "index-11"]], "subtraction": [[96, "index-14"]], "sum": [[96, "index-8"]], "super": [[96, "index-3"]], "underscore": [[96, "index-15"]], "unique": [[96, "index-12"]], "and": [[97, "index-8"]], "conjunction": [[97, "index-8"]], "disjunction": [[97, "index-9"]], "else": [[97, "index-7"]], "equals": [[97, "index-0"]], "exists": [[97, "index-3"]], "forall": [[97, "index-4"]], "forex": [[97, "index-5"]], "if": [[97, "index-7"]], "implies": [[97, "index-10"]], "in": [[97, "index-2"]], "instanceof": [[97, "index-1"]], "negation": [[97, "index-6"]], "not": [[97, "index-6"]], "or": [[97, "index-9"]], "then": [[97, "index-7"]], "qldoc": [[99, "index-0"]], "comment": [[99, "index-0"]], "import": [[100, "index-0"]], "namespace": [[101, "index-0"]], "arity": [[102, "index-0"]], "binding set": [[102, "index-2"]], "result": [[102, "index-1"]], "from": [[104, "index-1"]], "query": [[104, "index-0"]], "select": [[104, "index-1"]], "where": [[104, "index-1"]], "recursion": [[105, "index-0"]], "transitive closure": [[105, "index-1"]], "boolean": [[106, "index-1"]], "class": [[106, "index-2"]], "date": [[106, "index-1"]], "extends": [[106, "index-3"]], "field": [[106, "index-5"]], "float": [[106, "index-1"]], "int": [[106, "index-1"]], "newtype": [[106, "index-6"]], "string": [[106, "index-1"]], "this": [[106, "index-4"]], "type": [[106, "index-0"]], "bound": [[107, "index-1"]], "free": [[107, "index-1"]]}})